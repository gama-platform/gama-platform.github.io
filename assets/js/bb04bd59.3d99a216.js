"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[88269],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>g});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),m=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},d=function(e){var t=m(e.components);return a.createElement(s.Provider,{value:t},e.children)},k="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,l=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),k=m(n),u=i,g=k["".concat(s,".").concat(u)]||k[u]||p[u]||l;return n?a.createElement(g,r(r({ref:t},d),{},{components:n})):a.createElement(g,r({ref:t},d))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=n.length,r=new Array(l);r[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[k]="string"==typeof e?e:i,r[1]=o;for(var m=2;m<l;m++)r[m]=n[m];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},28284:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>g,frontMatter:()=>o,metadata:()=>m,toc:()=>k});var a=n(87462),i=n(63366),l=(n(67294),n(3905)),r=["components"],o={title:"Built-in Architectures"},s=void 0,m={unversionedId:"BuiltInArchitectures",id:"version-1.8.1/BuiltInArchitectures",title:"Built-in Architectures",description:"----",source:"@site/versioned_docs/version-1.8.1/BuiltInArchitectures.md",sourceDirName:".",slug:"/BuiltInArchitectures",permalink:"/wiki/1.8.1/BuiltInArchitectures",draft:!1,editUrl:"https://github.com/gama-platform/gama/wiki/BuiltInArchitectures/_edit",tags:[],version:"1.8.1",frontMatter:{title:"Built-in Architectures"},sidebar:"side",previous:{title:"Built-in Skills",permalink:"/wiki/1.8.1/BuiltInSkills"},next:{title:"Statements",permalink:"/wiki/1.8.1/Statements"}},d={},k=[{value:"INTRODUCTION",id:"introduction",level:2},{value:"Table of Contents",id:"table-of-contents",level:2},{value:"fsm",id:"fsm",level:2},{value:"Variables",id:"variables",level:3},{value:"Actions",id:"actions",level:3},{value:"parallel_bdi",id:"parallel_bdi",level:2},{value:"Variables",id:"variables-1",level:3},{value:"Actions",id:"actions-1",level:3},{value:"probabilistic_tasks",id:"probabilistic_tasks",level:2},{value:"Variables",id:"variables-2",level:3},{value:"Actions",id:"actions-2",level:3},{value:"reflex",id:"reflex",level:2},{value:"Variables",id:"variables-3",level:3},{value:"Actions",id:"actions-3",level:3},{value:"rules",id:"rules",level:2},{value:"Variables",id:"variables-4",level:3},{value:"Actions",id:"actions-4",level:3},{value:"simple_bdi",id:"simple_bdi",level:2},{value:"Variables",id:"variables-5",level:3},{value:"Actions",id:"actions-5",level:3},{value:"<strong><code>add_belief</code></strong>",id:"add_belief",level:4},{value:"<strong><code>add_belief_emotion</code></strong>",id:"add_belief_emotion",level:4},{value:"<strong><code>add_belief_mental_state</code></strong>",id:"add_belief_mental_state",level:4},{value:"<strong><code>add_desire</code></strong>",id:"add_desire",level:4},{value:"<strong><code>add_desire_emotion</code></strong>",id:"add_desire_emotion",level:4},{value:"<strong><code>add_desire_mental_state</code></strong>",id:"add_desire_mental_state",level:4},{value:"<strong><code>add_directly_belief</code></strong>",id:"add_directly_belief",level:4},{value:"<strong><code>add_directly_desire</code></strong>",id:"add_directly_desire",level:4},{value:"<strong><code>add_directly_ideal</code></strong>",id:"add_directly_ideal",level:4},{value:"<strong><code>add_directly_uncertainty</code></strong>",id:"add_directly_uncertainty",level:4},{value:"<strong><code>add_emotion</code></strong>",id:"add_emotion",level:4},{value:"<strong><code>add_ideal</code></strong>",id:"add_ideal",level:4},{value:"<strong><code>add_ideal_emotion</code></strong>",id:"add_ideal_emotion",level:4},{value:"<strong><code>add_ideal_mental_state</code></strong>",id:"add_ideal_mental_state",level:4},{value:"<strong><code>add_intention</code></strong>",id:"add_intention",level:4},{value:"<strong><code>add_intention_emotion</code></strong>",id:"add_intention_emotion",level:4},{value:"<strong><code>add_intention_mental_state</code></strong>",id:"add_intention_mental_state",level:4},{value:"<strong><code>add_obligation</code></strong>",id:"add_obligation",level:4},{value:"<strong><code>add_social_link</code></strong>",id:"add_social_link",level:4},{value:"<strong><code>add_subintention</code></strong>",id:"add_subintention",level:4},{value:"<strong><code>add_uncertainty</code></strong>",id:"add_uncertainty",level:4},{value:"<strong><code>add_uncertainty_emotion</code></strong>",id:"add_uncertainty_emotion",level:4},{value:"<strong><code>add_uncertainty_mental_state</code></strong>",id:"add_uncertainty_mental_state",level:4},{value:"<strong><code>change_dominance</code></strong>",id:"change_dominance",level:4},{value:"<strong><code>change_familiarity</code></strong>",id:"change_familiarity",level:4},{value:"<strong><code>change_liking</code></strong>",id:"change_liking",level:4},{value:"<strong><code>change_solidarity</code></strong>",id:"change_solidarity",level:4},{value:"<strong><code>change_trust</code></strong>",id:"change_trust",level:4},{value:"<strong><code>clear_beliefs</code></strong>",id:"clear_beliefs",level:4},{value:"<strong><code>clear_desires</code></strong>",id:"clear_desires",level:4},{value:"<strong><code>clear_emotions</code></strong>",id:"clear_emotions",level:4},{value:"<strong><code>clear_ideals</code></strong>",id:"clear_ideals",level:4},{value:"<strong><code>clear_intentions</code></strong>",id:"clear_intentions",level:4},{value:"<strong><code>clear_obligations</code></strong>",id:"clear_obligations",level:4},{value:"<strong><code>clear_social_links</code></strong>",id:"clear_social_links",level:4},{value:"<strong><code>clear_uncertainties</code></strong>",id:"clear_uncertainties",level:4},{value:"<strong><code>current_intention_on_hold</code></strong>",id:"current_intention_on_hold",level:4},{value:"<strong><code>get_belief</code></strong>",id:"get_belief",level:4},{value:"<strong><code>get_belief_emotion</code></strong>",id:"get_belief_emotion",level:4},{value:"<strong><code>get_belief_mental_state</code></strong>",id:"get_belief_mental_state",level:4},{value:"<strong><code>get_belief_with_name</code></strong>",id:"get_belief_with_name",level:4},{value:"<strong><code>get_beliefs</code></strong>",id:"get_beliefs",level:4},{value:"<strong><code>get_beliefs_metal_state</code></strong>",id:"get_beliefs_metal_state",level:4},{value:"<strong><code>get_beliefs_with_name</code></strong>",id:"get_beliefs_with_name",level:4},{value:"<strong><code>get_current_intention</code></strong>",id:"get_current_intention",level:4},{value:"<strong><code>get_current_plan</code></strong>",id:"get_current_plan",level:4},{value:"<strong><code>get_desire</code></strong>",id:"get_desire",level:4},{value:"<strong><code>get_desire_mental_state</code></strong>",id:"get_desire_mental_state",level:4},{value:"<strong><code>get_desire_with_name</code></strong>",id:"get_desire_with_name",level:4},{value:"<strong><code>get_desires</code></strong>",id:"get_desires",level:4},{value:"<strong><code>get_desires_mental_state</code></strong>",id:"get_desires_mental_state",level:4},{value:"<strong><code>get_desires_with_name</code></strong>",id:"get_desires_with_name",level:4},{value:"<strong><code>get_emotion</code></strong>",id:"get_emotion",level:4},{value:"<strong><code>get_emotion_with_name</code></strong>",id:"get_emotion_with_name",level:4},{value:"<strong><code>get_ideal</code></strong>",id:"get_ideal",level:4},{value:"<strong><code>get_ideal_mental_state</code></strong>",id:"get_ideal_mental_state",level:4},{value:"<strong><code>get_intention</code></strong>",id:"get_intention",level:4},{value:"<strong><code>get_intention_mental_state</code></strong>",id:"get_intention_mental_state",level:4},{value:"<strong><code>get_intention_with_name</code></strong>",id:"get_intention_with_name",level:4},{value:"<strong><code>get_intentions</code></strong>",id:"get_intentions",level:4},{value:"<strong><code>get_intentions_mental_state</code></strong>",id:"get_intentions_mental_state",level:4},{value:"<strong><code>get_intentions_with_name</code></strong>",id:"get_intentions_with_name",level:4},{value:"<strong><code>get_obligation</code></strong>",id:"get_obligation",level:4},{value:"<strong><code>get_plan</code></strong>",id:"get_plan",level:4},{value:"<strong><code>get_plans</code></strong>",id:"get_plans",level:4},{value:"<strong><code>get_social_link</code></strong>",id:"get_social_link",level:4},{value:"<strong><code>get_social_link_with_agent</code></strong>",id:"get_social_link_with_agent",level:4},{value:"<strong><code>get_uncertainty</code></strong>",id:"get_uncertainty",level:4},{value:"<strong><code>get_uncertainty_mental_state</code></strong>",id:"get_uncertainty_mental_state",level:4},{value:"<strong><code>has_belief</code></strong>",id:"has_belief",level:4},{value:"<strong><code>has_belief_mental_state</code></strong>",id:"has_belief_mental_state",level:4},{value:"<strong><code>has_belief_with_name</code></strong>",id:"has_belief_with_name",level:4},{value:"<strong><code>has_desire</code></strong>",id:"has_desire",level:4},{value:"<strong><code>has_desire_mental_state</code></strong>",id:"has_desire_mental_state",level:4},{value:"<strong><code>has_desire_with_name</code></strong>",id:"has_desire_with_name",level:4},{value:"<strong><code>has_emotion</code></strong>",id:"has_emotion",level:4},{value:"<strong><code>has_emotion_with_name</code></strong>",id:"has_emotion_with_name",level:4},{value:"<strong><code>has_ideal</code></strong>",id:"has_ideal",level:4},{value:"<strong><code>has_ideal_mental_state</code></strong>",id:"has_ideal_mental_state",level:4},{value:"<strong><code>has_ideal_with_name</code></strong>",id:"has_ideal_with_name",level:4},{value:"<strong><code>has_obligation</code></strong>",id:"has_obligation",level:4},{value:"<strong><code>has_social_link</code></strong>",id:"has_social_link",level:4},{value:"<strong><code>has_social_link_with_agent</code></strong>",id:"has_social_link_with_agent",level:4},{value:"<strong><code>has_uncertainty</code></strong>",id:"has_uncertainty",level:4},{value:"<strong><code>has_uncertainty_mental_state</code></strong>",id:"has_uncertainty_mental_state",level:4},{value:"<strong><code>has_uncertainty_with_name</code></strong>",id:"has_uncertainty_with_name",level:4},{value:"<strong><code>is_current_intention</code></strong>",id:"is_current_intention",level:4},{value:"<strong><code>is_current_intention_mental_state</code></strong>",id:"is_current_intention_mental_state",level:4},{value:"<strong><code>is_current_plan</code></strong>",id:"is_current_plan",level:4},{value:"<strong><code>remove_all_beliefs</code></strong>",id:"remove_all_beliefs",level:4},{value:"<strong><code>remove_belief</code></strong>",id:"remove_belief",level:4},{value:"<strong><code>remove_belief_mental_state</code></strong>",id:"remove_belief_mental_state",level:4},{value:"<strong><code>remove_desire</code></strong>",id:"remove_desire",level:4},{value:"<strong><code>remove_desire_mental_state</code></strong>",id:"remove_desire_mental_state",level:4},{value:"<strong><code>remove_emotion</code></strong>",id:"remove_emotion",level:4},{value:"<strong><code>remove_ideal</code></strong>",id:"remove_ideal",level:4},{value:"<strong><code>remove_ideal_mental_state</code></strong>",id:"remove_ideal_mental_state",level:4},{value:"<strong><code>remove_intention</code></strong>",id:"remove_intention",level:4},{value:"<strong><code>remove_intention_mental_state</code></strong>",id:"remove_intention_mental_state",level:4},{value:"<strong><code>remove_obligation</code></strong>",id:"remove_obligation",level:4},{value:"<strong><code>remove_social_link</code></strong>",id:"remove_social_link",level:4},{value:"<strong><code>remove_social_link_with_agent</code></strong>",id:"remove_social_link_with_agent",level:4},{value:"<strong><code>remove_uncertainty</code></strong>",id:"remove_uncertainty",level:4},{value:"<strong><code>remove_uncertainty_mental_state</code></strong>",id:"remove_uncertainty_mental_state",level:4},{value:"<strong><code>replace_belief</code></strong>",id:"replace_belief",level:4},{value:"sorted_tasks",id:"sorted_tasks",level:2},{value:"Variables",id:"variables-6",level:3},{value:"Actions",id:"actions-6",level:3},{value:"user_first",id:"user_first",level:2},{value:"Variables",id:"variables-7",level:3},{value:"Actions",id:"actions-7",level:3},{value:"user_last",id:"user_last",level:2},{value:"Variables",id:"variables-8",level:3},{value:"Actions",id:"actions-8",level:3},{value:"user_only",id:"user_only",level:2},{value:"Variables",id:"variables-9",level:3},{value:"Actions",id:"actions-9",level:3},{value:"weighted_tasks",id:"weighted_tasks",level:2},{value:"Variables",id:"variables-10",level:3},{value:"Actions",id:"actions-10",level:3}],p={toc:k},u="wrapper";function g(e){var t=e.components,n=(0,i.Z)(e,r);return(0,l.kt)(u,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("hr",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"This file is automatically generated from java files. Do Not Edit It.")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"introduction"},"INTRODUCTION"),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"table-of-contents"},"Table of Contents"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"[fsm](#fsm), [parallel_bdi](#parallel_bdi), [probabilistic_tasks](#probabilistic_tasks), [reflex](#reflex), [rules](#rules), [simple_bdi](#simple_bdi), [sorted_tasks](#sorted_tasks), [user_first](#user_first), [user_last](#user_last), [user_only](#user_only), [weighted_tasks](#weighted_tasks), \n")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"fsm"},"fsm"),(0,l.kt)("h3",{id:"variables"},"Variables"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"state"))," (string): Returns the current state in which the agent is   "),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"states"))," (list): Returns the list of all possible states the agents can be in ")),(0,l.kt)("h3",{id:"actions"},"Actions"),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"parallel_bdi"},"parallel_bdi"),(0,l.kt)("p",null,"compute the bdi architecture in parallel "),(0,l.kt)("h3",{id:"variables-1"},"Variables"),(0,l.kt)("h3",{id:"actions-1"},"Actions"),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"probabilistic_tasks"},"probabilistic_tasks"),(0,l.kt)("h3",{id:"variables-2"},"Variables"),(0,l.kt)("h3",{id:"actions-2"},"Actions"),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"reflex"},"reflex"),(0,l.kt)("h3",{id:"variables-3"},"Variables"),(0,l.kt)("h3",{id:"actions-3"},"Actions"),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"rules"},"rules"),(0,l.kt)("h3",{id:"variables-4"},"Variables"),(0,l.kt)("h3",{id:"actions-4"},"Actions"),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"simple_bdi"},"simple_bdi"),(0,l.kt)("p",null,"this architecture enables to define a behaviour using BDI. It is an implementation of the BEN architecture (Behaviour with Emotions and Norms) "),(0,l.kt)("h3",{id:"variables-5"},"Variables"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"agreeableness"))," (float): an agreeableness value for the personality   "),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"belief_base"))," (list): the belief base of the agent   "),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"charisma"))," (float): a charisma value. By default, it is computed with personality   "),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"conscientiousness"))," (float): a conscientiousness value for the personality   "),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"current_norm"))," (any type): the current norm of the agent   "),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"current_plan"))," (any type): thecurrent plan of the agent   "),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"desire_base"))," (list): the desire base of the agent   "),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"emotion_base"))," (list): the emotion base of the agent   "),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"extroversion"))," (float): an extraversion value for the personality   "),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"ideal_base"))," (list): the ideal base of the agent   "),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"intention_base"))," (list): the intention base of the agent   "),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"intention_persistence"))," (float): intention persistence   "),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"law_base"))," (list): the law base of the agent   "),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"neurotism"))," (float): a neurotism value for the personality   "),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"norm_base"))," (list): the norm base of the agent   "),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"obedience"))," (float): an obedience value. By default, it is computed with personality   "),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"obligation_base"))," (list): the obligation base of the agent   "),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"openness"))," (float): an openness value for the personality   "),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"plan_base"))," (list): the plan base of the agent   "),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"plan_persistence"))," (float): plan persistence   "),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"probabilistic_choice"))," (boolean): indicates if the choice is deterministic or probabilistic   "),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"receptivity"))," (float): a receptivity value. By default, it is computed with personality   "),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"sanction_base"))," (list): the sanction base of the agent   "),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"social_link_base"))," (list): the social link base of the agent   "),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"thinking"))," (list): the list of the last thoughts of the agent   "),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"uncertainty_base"))," (list): the uncertainty base of the agent   "),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"use_emotions_architecture"))," (boolean): indicates if emotions are automaticaly computed   "),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"use_norms"))," (boolean): indicates if the normative engine is used   "),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"use_persistence"))," (boolean): indicates if the persistence coefficient is computed with personality (false) or with the value given by the modeler   "),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"use_personality"))," (boolean): indicates if the personnality is used   "),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"use_social_architecture"))," (boolean): indicates if social relations are automaticaly computed ")),(0,l.kt)("h3",{id:"actions-5"},"Actions"),(0,l.kt)("h4",{id:"add_belief"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"add_belief"))),(0,l.kt)("p",null,"add the predicate in the belief base."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"predicate"))," (predicate): predicate to add as a belief \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"strength"))," (float): the stregth of the belief \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"lifetime"))," (int): the lifetime of the belief",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"add_belief_emotion"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"add_belief_emotion"))),(0,l.kt)("p",null,"add the belief about an emotion in the belief base."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"emotion"))," (emotion): emotion to add as a belief \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"strength"))," (float): the stregth of the belief \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"lifetime"))," (int): the lifetime of the belief",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"add_belief_mental_state"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"add_belief_mental_state"))),(0,l.kt)("p",null,"add the predicate in the belief base."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"mental_state"))," (mental_state): predicate to add as a belief \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"strength"))," (float): the stregth of the belief \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"lifetime"))," (int): the lifetime of the belief",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"add_desire"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"add_desire"))),(0,l.kt)("p",null,"adds the predicates is in the desire base."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"predicate"))," (predicate): predicate to add as a desire \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"strength"))," (float): the stregth of the belief \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"lifetime"))," (int): the lifetime of the belief \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"todo"))," (predicate): add the desire as a subintention of this parameter",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"add_desire_emotion"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"add_desire_emotion"))),(0,l.kt)("p",null,"adds the emotion in the desire base."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"emotion"))," (emotion): emotion to add as a desire \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"strength"))," (float): the stregth of the desire \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"lifetime"))," (int): the lifetime of the desire \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"todo"))," (predicate): add the desire as a subintention of this parameter",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"add_desire_mental_state"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"add_desire_mental_state"))),(0,l.kt)("p",null,"adds the mental state is in the desire base."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"mental_state"))," (mental_state): mental_state to add as a desire \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"strength"))," (float): the stregth of the desire \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"lifetime"))," (int): the lifetime of the desire \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"todo"))," (predicate): add the desire as a subintention of this parameter",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"add_directly_belief"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"add_directly_belief"))),(0,l.kt)("p",null,"add the belief in the belief base."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"belief"))," (mental_state): belief to add in th belief base",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"add_directly_desire"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"add_directly_desire"))),(0,l.kt)("p",null,"add the desire in the desire base."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"desire"))," (mental_state): desire to add in th belief base",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"add_directly_ideal"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"add_directly_ideal"))),(0,l.kt)("p",null,"add the ideal in the ideal base."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"ideal"))," (mental_state): ideal to add in the ideal base",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"add_directly_uncertainty"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"add_directly_uncertainty"))),(0,l.kt)("p",null,"add the uncertainty in the uncertainty base."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"uncertainty"))," (mental_state): uncertainty to add in the uncertainty base",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"add_emotion"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"add_emotion"))),(0,l.kt)("p",null,"add the emotion to the emotion base."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"emotion"))," (emotion): emotion to add to the base",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"add_ideal"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"add_ideal"))),(0,l.kt)("p",null,"add a predicate in the ideal base."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"predicate"))," (predicate): predicate to add as an ideal \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"praiseworthiness"))," (float): the praiseworthiness value of the ideal \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"lifetime"))," (int): the lifetime of the ideal",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"add_ideal_emotion"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"add_ideal_emotion"))),(0,l.kt)("p",null,"add a predicate in the ideal base."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"emotion"))," (emotion): emotion to add as an ideal \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"praiseworthiness"))," (float): the praiseworthiness value of the ideal \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"lifetime"))," (int): the lifetime of the ideal",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"add_ideal_mental_state"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"add_ideal_mental_state"))),(0,l.kt)("p",null,"add a predicate in the ideal base."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"mental_state"))," (mental_state): mental state to add as an ideal \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"praiseworthiness"))," (float): the praiseworthiness value of the ideal \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"lifetime"))," (int): the lifetime of the ideal",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"add_intention"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"add_intention"))),(0,l.kt)("p",null,"check if the predicates is in the desire base."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"predicate"))," (predicate): predicate to check \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"strength"))," (float): the stregth of the belief \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"lifetime"))," (int): the lifetime of the belief",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"add_intention_emotion"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"add_intention_emotion"))),(0,l.kt)("p",null,"check if the predicates is in the desire base."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"emotion"))," (emotion): emotion to add as an intention \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"strength"))," (float): the stregth of the belief \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"lifetime"))," (int): the lifetime of the belief",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"add_intention_mental_state"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"add_intention_mental_state"))),(0,l.kt)("p",null,"check if the predicates is in the desire base."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"mental_state"))," (mental_state): predicate to add as an intention \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"strength"))," (float): the stregth of the belief \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"lifetime"))," (int): the lifetime of the belief",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"add_obligation"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"add_obligation"))),(0,l.kt)("p",null,"add a predicate in the ideal base."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"predicate"))," (predicate): predicate to add as an obligation \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"strength"))," (float): the strength value of the obligation \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"lifetime"))," (int): the lifetime of the obligation",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"add_social_link"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"add_social_link"))),(0,l.kt)("p",null,"add the social link to the social link base."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"social_link"))," (social_link): social link to add to the base",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"add_subintention"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"add_subintention"))),(0,l.kt)("p",null,"adds the predicates is in the desire base."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"predicate"))," (mental_state): the intention that receives the sub_intention \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"subintentions"))," (predicate): the predicate to add as a subintention to the intention \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"add_as_desire"))," (boolean): add the subintention as a desire as well (by default, false)",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"add_uncertainty"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"add_uncertainty"))),(0,l.kt)("p",null,"add a predicate in the uncertainty base."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"predicate"))," (predicate): predicate to add \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"strength"))," (float): the stregth of the belief \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"lifetime"))," (int): the lifetime of the belief",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"add_uncertainty_emotion"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"add_uncertainty_emotion"))),(0,l.kt)("p",null,"add a predicate in the uncertainty base."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"emotion"))," (emotion): emotion to add as an uncertainty \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"strength"))," (float): the stregth of the belief \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"lifetime"))," (int): the lifetime of the belief",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"add_uncertainty_mental_state"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"add_uncertainty_mental_state"))),(0,l.kt)("p",null,"add a predicate in the uncertainty base."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"mental_state"))," (mental_state): mental state to add as an uncertainty \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"strength"))," (float): the stregth of the belief \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"lifetime"))," (int): the lifetime of the belief",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"change_dominance"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"change_dominance"))),(0,l.kt)("p",null,"changes the dominance value of the social relation with the agent specified."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"agent"))," (agent): an agent with who I get a social link \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"dominance"))," (float): a value to change the dominance value",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"change_familiarity"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"change_familiarity"))),(0,l.kt)("p",null,"changes the familiarity value of the social relation with the agent specified."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"agent"))," (agent): an agent with who I get a social link \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"familiarity"))," (float): a value to change the familiarity value",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"change_liking"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"change_liking"))),(0,l.kt)("p",null,"changes the liking value of the social relation with the agent specified."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"agent"))," (agent): an agent with who I get a social link \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"liking"))," (float): a value to change the liking value",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"change_solidarity"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"change_solidarity"))),(0,l.kt)("p",null,"changes the solidarity value of the social relation with the agent specified."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"agent"))," (agent): an agent with who I get a social link \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"solidarity"))," (float): a value to change the solidarity value",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"change_trust"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"change_trust"))),(0,l.kt)("p",null,"changes the trust value of the social relation with the agent specified."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"agent"))," (agent): an agent with who I get a social link \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"trust"))," (float): a value to change the trust value",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"clear_beliefs"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"clear_beliefs"))),(0,l.kt)("p",null,"clear the belief base"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"clear_desires"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"clear_desires"))),(0,l.kt)("p",null,"clear the desire base"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"clear_emotions"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"clear_emotions"))),(0,l.kt)("p",null,"clear the emotion base"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"clear_ideals"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"clear_ideals"))),(0,l.kt)("p",null,"clear the ideal base"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"clear_intentions"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"clear_intentions"))),(0,l.kt)("p",null,"clear the intention base"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"clear_obligations"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"clear_obligations"))),(0,l.kt)("p",null,"clear the obligation base"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"clear_social_links"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"clear_social_links"))),(0,l.kt)("p",null,"clear the intention base"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"clear_uncertainties"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"clear_uncertainties"))),(0,l.kt)("p",null,"clear the uncertainty base"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"current_intention_on_hold"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"current_intention_on_hold"))),(0,l.kt)("p",null,"puts the current intention on hold until the specified condition is reached or all subintentions are reached (not in desire base anymore)."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"until"))," (any type): the current intention is put on hold (fited plan are not considered) until specific condition is reached. Can be an expression (which will be tested), a list (of subintentions), or nil (by default the condition will be the current list of subintentions of the intention)",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"get_belief"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"get_belief"))),(0,l.kt)("p",null,"return the belief about the predicate in the belief base (if several, returns the first one)."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: mental_state \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"predicate"))," (predicate): predicate to get",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"get_belief_emotion"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"get_belief_emotion"))),(0,l.kt)("p",null,"return the belief about the emotion in the belief base (if several, returns the first one)."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: mental_state \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"emotion"))," (emotion): emotion about which the belief to get is",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"get_belief_mental_state"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"get_belief_mental_state"))),(0,l.kt)("p",null,"return the belief about the mental state in the belief base (if several, returns the first one)."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: mental_state \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"mental_state"))," (mental_state): mental state to get",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"get_belief_with_name"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"get_belief_with_name"))),(0,l.kt)("p",null,"get the predicates is in the belief base (if several, returns the first one)."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: mental_state \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"name"))," (string): name of the predicate to check",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"get_beliefs"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"get_beliefs"))),(0,l.kt)("p",null,"get the list of predicates in the belief base"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: list","<","mental_state> \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"predicate"))," (predicate): predicate to check",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"get_beliefs_metal_state"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"get_beliefs_metal_state"))),(0,l.kt)("p",null,"get the list of bliefs in the belief base containing the mental state"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: list","<","mental_state> \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"mental_state"))," (mental_state): mental state to check",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"get_beliefs_with_name"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"get_beliefs_with_name"))),(0,l.kt)("p",null,"get the list of predicates is in the belief base with the given name."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: list","<","mental_state> \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"name"))," (string): name of the predicates to check",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"get_current_intention"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"get_current_intention"))),(0,l.kt)("p",null,"returns the current intention (last entry of intention base)."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: mental_state",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"get_current_plan"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"get_current_plan"))),(0,l.kt)("p",null,"get the current plan."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: BDIPlan",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"get_desire"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"get_desire"))),(0,l.kt)("p",null,"get the predicates is in the desire base (if several, returns the first one)."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: mental_state \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"predicate"))," (predicate): predicate to check",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"get_desire_mental_state"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"get_desire_mental_state"))),(0,l.kt)("p",null,"get the mental state is in the desire base (if several, returns the first one)."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: mental_state \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"mental_state"))," (mental_state): mental state to check",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"get_desire_with_name"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"get_desire_with_name"))),(0,l.kt)("p",null,"get the predicates is in the belief base (if several, returns the first one)."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: mental_state \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"name"))," (string): name of the predicate to check",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"get_desires"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"get_desires"))),(0,l.kt)("p",null,"get the list of predicates is in the desire base"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: list","<","mental_state> \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"predicate"))," (predicate): name of the predicates to check",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"get_desires_mental_state"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"get_desires_mental_state"))),(0,l.kt)("p",null,"get the list of mental states is in the desire base"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: list","<","mental_state> \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"mental_state"))," (mental_state): name of the mental states to check",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"get_desires_with_name"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"get_desires_with_name"))),(0,l.kt)("p",null,"get the list of predicates is in the belief base with the given name."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: list","<","mental_state> \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"name"))," (string): name of the predicates to check",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"get_emotion"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"get_emotion"))),(0,l.kt)("p",null,"get the emotion in the emotion base (if several, returns the first one)."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: emotion \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"emotion"))," (emotion): emotion to get",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"get_emotion_with_name"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"get_emotion_with_name"))),(0,l.kt)("p",null,"get the emotion is in the emotion base (if several, returns the first one)."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: emotion \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"name"))," (string): name of the emotion to check",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"get_ideal"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"get_ideal"))),(0,l.kt)("p",null,"get the ideal about the predicate in the ideal base (if several, returns the first one)."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: mental_state \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"predicate"))," (predicate): predicate to check ad an ideal",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"get_ideal_mental_state"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"get_ideal_mental_state"))),(0,l.kt)("p",null,"get the mental state in the ideal base (if several, returns the first one)."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: mental_state \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"mental_state"))," (mental_state): mental state to return",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"get_intention"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"get_intention"))),(0,l.kt)("p",null,"get the predicates in the intention base (if several, returns the first one)."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: mental_state \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"predicate"))," (predicate): predicate to check",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"get_intention_mental_state"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"get_intention_mental_state"))),(0,l.kt)("p",null,"get the mental state is in the intention base (if several, returns the first one)."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: mental_state \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"mental_state"))," (mental_state): mental state to check",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"get_intention_with_name"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"get_intention_with_name"))),(0,l.kt)("p",null,"get the predicates is in the belief base (if several, returns the first one)."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: mental_state \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"name"))," (string): name of the predicate to check",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"get_intentions"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"get_intentions"))),(0,l.kt)("p",null,"get the list of predicates is in the intention base"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: list","<","mental_state> \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"predicate"))," (predicate): name of the predicates to check",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"get_intentions_mental_state"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"get_intentions_mental_state"))),(0,l.kt)("p",null,"get the list of mental state is in the intention base"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: list","<","mental_state> \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"mental_state"))," (mental_state): mental state to check",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"get_intentions_with_name"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"get_intentions_with_name"))),(0,l.kt)("p",null,"get the list of predicates is in the belief base with the given name."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: list","<","mental_state> \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"name"))," (string): name of the predicates to check",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"get_obligation"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"get_obligation"))),(0,l.kt)("p",null,"get the predicates in the obligation base (if several, returns the first one)."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: mental_state \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"predicate"))," (predicate): predicate to return",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"get_plan"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"get_plan"))),(0,l.kt)("p",null,"get the first plan with the given name"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: BDIPlan \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"name"))," (string): the name of the planto get",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"get_plans"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"get_plans"))),(0,l.kt)("p",null,"get the list of plans."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: list","<","BDIPlan>",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"get_social_link"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"get_social_link"))),(0,l.kt)("p",null,"get the social link (if several, returns the first one)."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: social_link \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"social_link"))," (social_link): social link to check",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"get_social_link_with_agent"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"get_social_link_with_agent"))),(0,l.kt)("p",null,"get the social link with the agent concerned (if several, returns the first one)."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: social_link \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"agent"))," (agent): an agent with who I get a social link",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"get_uncertainty"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"get_uncertainty"))),(0,l.kt)("p",null,"get the predicates is in the uncertainty base (if several, returns the first one)."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: mental_state \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"predicate"))," (predicate): predicate to return",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"get_uncertainty_mental_state"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"get_uncertainty_mental_state"))),(0,l.kt)("p",null,"get the mental state is in the uncertainty base (if several, returns the first one)."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: mental_state \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"mental_state"))," (mental_state): mental state to return",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"has_belief"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"has_belief"))),(0,l.kt)("p",null,"check if the predicates is in the belief base."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"predicate"))," (predicate): predicate to check",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"has_belief_mental_state"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"has_belief_mental_state"))),(0,l.kt)("p",null,"check if the mental state is in the belief base."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"mental_state"))," (mental_state): mental state to check",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"has_belief_with_name"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"has_belief_with_name"))),(0,l.kt)("p",null,"check if the predicate is in the belief base."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"name"))," (string): name of the predicate to check",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"has_desire"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"has_desire"))),(0,l.kt)("p",null,"check if the predicates is in the desire base."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"predicate"))," (predicate): predicate to check",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"has_desire_mental_state"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"has_desire_mental_state"))),(0,l.kt)("p",null,"check if the mental state is in the desire base."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"mental_state"))," (mental_state): mental state to check",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"has_desire_with_name"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"has_desire_with_name"))),(0,l.kt)("p",null,"check if the prediate is in the desire base."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"name"))," (string): name of the predicate to check",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"has_emotion"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"has_emotion"))),(0,l.kt)("p",null,"check if the emotion is in the belief base."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"emotion"))," (emotion): emotion to check",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"has_emotion_with_name"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"has_emotion_with_name"))),(0,l.kt)("p",null,"check if the emotion is in the emotion base."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"name"))," (string): name of the emotion to check",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"has_ideal"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"has_ideal"))),(0,l.kt)("p",null,"check if the predicates is in the ideal base."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"predicate"))," (predicate): predicate to check",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"has_ideal_mental_state"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"has_ideal_mental_state"))),(0,l.kt)("p",null,"check if the mental state is in the ideal base."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"mental_state"))," (mental_state): mental state to check",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"has_ideal_with_name"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"has_ideal_with_name"))),(0,l.kt)("p",null,"check if the predicate is in the ideal base."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"name"))," (string): name of the predicate to check",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"has_obligation"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"has_obligation"))),(0,l.kt)("p",null,"check if the predicates is in the obligation base."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"predicate"))," (predicate): predicate to check",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"has_social_link"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"has_social_link"))),(0,l.kt)("p",null,"check if the social link base."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"social_link"))," (social_link): social link to check",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"has_social_link_with_agent"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"has_social_link_with_agent"))),(0,l.kt)("p",null,"check if the social link base."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"agent"))," (agent): an agent with who I want to check if I have a social link",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"has_uncertainty"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"has_uncertainty"))),(0,l.kt)("p",null,"check if the predicates is in the uncertainty base."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"predicate"))," (predicate): predicate to check",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"has_uncertainty_mental_state"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"has_uncertainty_mental_state"))),(0,l.kt)("p",null,"check if the mental state is in the uncertainty base."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"mental_state"))," (mental_state): mental state to check",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"has_uncertainty_with_name"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"has_uncertainty_with_name"))),(0,l.kt)("p",null,"check if the predicate is in the uncertainty base."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"name"))," (string): name of the uncertainty to check",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"is_current_intention"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"is_current_intention"))),(0,l.kt)("p",null,"check if the predicates is the current intention (last entry of intention base)."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"predicate"))," (predicate): predicate to check",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"is_current_intention_mental_state"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"is_current_intention_mental_state"))),(0,l.kt)("p",null,"check if the mental state is the current intention (last entry of intention base)."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"mental_state"))," (mental_state): mental state to check",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"is_current_plan"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"is_current_plan"))),(0,l.kt)("p",null,"tell if the current plan has the same name as tested"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"name"))," (string): the name of the plan to test",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"remove_all_beliefs"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"remove_all_beliefs"))),(0,l.kt)("p",null,"removes the predicates from the belief base."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"predicate"))," (predicate): predicate to remove",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"remove_belief"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"remove_belief"))),(0,l.kt)("p",null,"removes the predicate from the belief base."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"predicate"))," (predicate): predicate to remove",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"remove_belief_mental_state"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"remove_belief_mental_state"))),(0,l.kt)("p",null,"removes the mental state from the belief base."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"mental_state"))," (mental_state): mental state to remove",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"remove_desire"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"remove_desire"))),(0,l.kt)("p",null,"removes the predicates from the desire base."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"predicate"))," (predicate): predicate to remove from desire base",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"remove_desire_mental_state"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"remove_desire_mental_state"))),(0,l.kt)("p",null,"removes the mental state from the desire base."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"mental_state"))," (mental_state): mental state to remove from desire base",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"remove_emotion"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"remove_emotion"))),(0,l.kt)("p",null,"removes the emotion from the emotion base."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"emotion"))," (emotion): emotion to remove",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"remove_ideal"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"remove_ideal"))),(0,l.kt)("p",null,"removes the predicates from the ideal base."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"predicate"))," (predicate): predicate to remove",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"remove_ideal_mental_state"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"remove_ideal_mental_state"))),(0,l.kt)("p",null,"removes the mental state from the ideal base."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"mental_state"))," (mental_state): metal state to remove",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"remove_intention"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"remove_intention"))),(0,l.kt)("p",null,"removes the predicates from the intention base."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"predicate"))," (predicate): intention's predicate to remove \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"desire_also"))," (boolean): removes also desire",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"remove_intention_mental_state"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"remove_intention_mental_state"))),(0,l.kt)("p",null,"removes the mental state from the intention base."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"mental_state"))," (mental_state): intention's mental state to remove \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"desire_also"))," (boolean): removes also desire",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"remove_obligation"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"remove_obligation"))),(0,l.kt)("p",null,"removes the predicates from the obligation base."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"predicate"))," (predicate): predicate to remove",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"remove_social_link"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"remove_social_link"))),(0,l.kt)("p",null,"removes the social link from the social relation base."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"social_link"))," (social_link): social link to remove",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"remove_social_link_with_agent"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"remove_social_link_with_agent"))),(0,l.kt)("p",null,"removes the social link from the social relation base."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"agent"))," (agent): an agent with who I get the social link to remove",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"remove_uncertainty"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"remove_uncertainty"))),(0,l.kt)("p",null,"removes the predicates from the uncertainty base."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"predicate"))," (predicate): predicate to remove",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"remove_uncertainty_mental_state"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"remove_uncertainty_mental_state"))),(0,l.kt)("p",null,"removes the mental state from the uncertainty base."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"mental_state"))," (mental_state): mental state to remove",(0,l.kt)("br",{parentName:"li"}),"")),(0,l.kt)("h4",{id:"replace_belief"},(0,l.kt)("strong",{parentName:"h4"},(0,l.kt)("inlineCode",{parentName:"strong"},"replace_belief"))),(0,l.kt)("p",null,"replace the old predicate by the new one."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns: bool \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"old_predicate"))," (predicate): predicate to remove \t\t\t"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"predicate"))," (predicate): predicate to add")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"sorted_tasks"},"sorted_tasks"),(0,l.kt)("h3",{id:"variables-6"},"Variables"),(0,l.kt)("h3",{id:"actions-6"},"Actions"),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"user_first"},"user_first"),(0,l.kt)("h3",{id:"variables-7"},"Variables"),(0,l.kt)("h3",{id:"actions-7"},"Actions"),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"user_last"},"user_last"),(0,l.kt)("h3",{id:"variables-8"},"Variables"),(0,l.kt)("h3",{id:"actions-8"},"Actions"),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"user_only"},"user_only"),(0,l.kt)("h3",{id:"variables-9"},"Variables"),(0,l.kt)("h3",{id:"actions-9"},"Actions"),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"weighted_tasks"},"weighted_tasks"),(0,l.kt)("h3",{id:"variables-10"},"Variables"),(0,l.kt)("h3",{id:"actions-10"},"Actions"))}g.isMDXComponent=!0}}]);