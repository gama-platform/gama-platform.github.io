"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[19070],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},f="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),f=p(n),u=r,h=f["".concat(s,".").concat(u)]||f[u]||d[u]||o;return n?a.createElement(h,i(i({ref:t},c),{},{components:n})):a.createElement(h,i({ref:t},c))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[f]="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},79858:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>l,metadata:()=>p,toc:()=>f});var a=n(87462),r=n(63366),o=(n(67294),n(3905)),i=["components"],l={"^title":"3D shapefile loading"},s=void 0,p={unversionedId:"3D_shapefile_loading",id:"3D_shapefile_loading",title:"3D_shapefile_loading",description:"Path: Library models/Data/Data Importation/models/3D shapefile Loading.gaml",source:"@site/../docs/3D_shapefile_loading.md",sourceDirName:".",slug:"/3D_shapefile_loading",permalink:"/wiki/next/3D_shapefile_loading",draft:!1,editUrl:"https://github.com/gama-platform/gama/wiki/3D_shapefile_loading/_edit",tags:[],version:"current",frontMatter:{"^title":"3D shapefile loading"}},c={},f=[],d={toc:f},u="wrapper";function h(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)(u,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("img",{width:"960",alt:"Annotation 2023-04-17 043654_3Dshapefile",src:"https://user-images.githubusercontent.com/4437331/232366411-191b0d4a-e2c6-49a8-a8a1-2c3747d9970f.png"}),(0,o.kt)("p",null,"Path: Library models/Data/Data Importation/models/3D shapefile Loading.gaml"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"\n/**\n* Name: 3D shapefile loading\n* Author:  \n* Description: Model which shows how to create a shape using a 3D Shapefile after this one has been loaded. \n* Tags: 3d, shapefile, load_file\n*/\nmodel shapefile_loading\n\nglobal {\n     \n    //file variable that will store the shape file : the \"true\" argument allows to specify that we want to take into account the 3D dimension of the data\n    file shape_file_gis_3d_objects <- shape_file('../includes/Mobilier.shp', true);\n    geometry shape <- envelope(shape_file_gis_3d_objects);\n    init {\n        create gis_3d_object from: shape_file_gis_3d_objects with:[location::location];\n    }\n}\n\nspecies gis_3d_object {\n    aspect base {\n        draw shape  color: #gray border: #darkgray width: 4;\n    }\n}\n\nexperiment display_shape type: gui {\n\n    output {\n        display city_display type: 3d axes:false background: #black{\n            species gis_3d_object aspect: base;\n        }\n\n    }\n}\n\n\n\n\n\n")))}h.isMDXComponent=!0}}]);