"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[45305],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>c});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},m="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,d=r(e,["components","mdxType","originalType","parentName"]),m=p(n),g=i,c=m["".concat(s,".").concat(g)]||m[g]||k[g]||o;return n?a.createElement(c,l(l({ref:t},d),{},{components:n})):a.createElement(c,l({ref:t},d))}));function c(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,l=new Array(o);l[0]=g;var r={};for(var s in t)hasOwnProperty.call(t,s)&&(r[s]=t[s]);r.originalType=e,r[m]="string"==typeof e?e:i,l[1]=r;for(var p=2;p<o;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},90944:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>c,frontMatter:()=>r,metadata:()=>p,toc:()=>m});var a=n(87462),i=n(63366),o=(n(67294),n(3905)),l=["components"],r={title:"Built-in Skills"},s=void 0,p={unversionedId:"BuiltInSkills",id:"version-1.8.2-RC2/BuiltInSkills",title:"Built-in Skills",description:"----",source:"@site/versioned_docs/version-1.8.2-RC2/BuiltInSkills.md",sourceDirName:".",slug:"/BuiltInSkills",permalink:"/wiki/1.8.2-RC2/BuiltInSkills",draft:!1,editUrl:"https://github.com/gama-platform/gama/wiki/BuiltInSkills/_edit",tags:[],version:"1.8.2-RC2",frontMatter:{title:"Built-in Skills"},sidebar:"main",previous:{title:"Built-in Species",permalink:"/wiki/1.8.2-RC2/BuiltInSpecies"},next:{title:"Built-in Architectures",permalink:"/wiki/1.8.2-RC2/BuiltInArchitectures"}},d={},m=[{value:"Introduction",id:"introduction",level:2},{value:"Table of Contents",id:"table-of-contents",level:2},{value:"<code>advanced_driving</code>",id:"advanced_driving",level:2},{value:"Variables",id:"variables",level:3},{value:"Actions",id:"actions",level:3},{value:"<strong><code>advanced_follow_driving</code></strong>",id:"advanced_follow_driving",level:4},{value:"Additional facets:",id:"additional-facets",level:5},{value:"Examples:",id:"examples",level:5},{value:"<strong><code>choose_lane</code></strong>",id:"choose_lane",level:4},{value:"Additional facets:",id:"additional-facets-1",level:5},{value:"<strong><code>compute_path</code></strong>",id:"compute_path",level:4},{value:"Additional facets:",id:"additional-facets-2",level:5},{value:"Examples:",id:"examples-1",level:5},{value:"<strong><code>drive</code></strong>",id:"drive",level:4},{value:"Examples:",id:"examples-2",level:5},{value:"<strong><code>drive_random</code></strong>",id:"drive_random",level:4},{value:"Additional facets:",id:"additional-facets-3",level:5},{value:"Examples:",id:"examples-3",level:5},{value:"<strong><code>external_factor_impact</code></strong>",id:"external_factor_impact",level:4},{value:"Additional facets:",id:"additional-facets-4",level:5},{value:"Examples:",id:"examples-4",level:5},{value:"<strong><code>force_move</code></strong>",id:"force_move",level:4},{value:"Additional facets:",id:"additional-facets-5",level:5},{value:"Examples:",id:"examples-5",level:5},{value:"<strong><code>goto_drive</code></strong>",id:"goto_drive",level:4},{value:"Additional facets:",id:"additional-facets-6",level:5},{value:"Examples:",id:"examples-6",level:5},{value:"<strong><code>lane_choice</code></strong>",id:"lane_choice",level:4},{value:"Additional facets:",id:"additional-facets-7",level:5},{value:"Examples:",id:"examples-7",level:5},{value:"<strong><code>on_entering_new_road</code></strong>",id:"on_entering_new_road",level:4},{value:"<strong><code>path_from_nodes</code></strong>",id:"path_from_nodes",level:4},{value:"Additional facets:",id:"additional-facets-8",level:5},{value:"Examples:",id:"examples-8",level:5},{value:"<strong><code>ready_to_cross</code></strong>",id:"ready_to_cross",level:4},{value:"Additional facets:",id:"additional-facets-9",level:5},{value:"Examples:",id:"examples-9",level:5},{value:"<strong><code>speed_choice</code></strong>",id:"speed_choice",level:4},{value:"Additional facets:",id:"additional-facets-10",level:5},{value:"Examples:",id:"examples-10",level:5},{value:"<strong><code>test_next_road</code></strong>",id:"test_next_road",level:4},{value:"Additional facets:",id:"additional-facets-11",level:5},{value:"Examples:",id:"examples-11",level:5},{value:"<strong><code>unregister</code></strong>",id:"unregister",level:4},{value:"Examples:",id:"examples-12",level:5},{value:"<code>driving</code>",id:"driving",level:2},{value:"Variables",id:"variables-1",level:3},{value:"Actions",id:"actions-1",level:3},{value:"<strong><code>follow_driving</code></strong>",id:"follow_driving",level:4},{value:"Additional facets:",id:"additional-facets-12",level:5},{value:"Examples:",id:"examples-13",level:5},{value:"<strong><code>goto_driving</code></strong>",id:"goto_driving",level:4},{value:"Additional facets:",id:"additional-facets-13",level:5},{value:"Examples:",id:"examples-14",level:5},{value:"<code>dynamic_body</code>",id:"dynamic_body",level:2},{value:"Variables",id:"variables-2",level:3},{value:"Actions",id:"actions-2",level:3},{value:"<strong><code>apply</code></strong>",id:"apply",level:4},{value:"Additional facets:",id:"additional-facets-14",level:5},{value:"<code>fipa</code>",id:"fipa",level:2},{value:"Variables",id:"variables-3",level:3},{value:"Actions",id:"actions-3",level:3},{value:"<strong><code>accept_proposal</code></strong>",id:"accept_proposal",level:4},{value:"Additional facets:",id:"additional-facets-15",level:5},{value:"<strong><code>agree</code></strong>",id:"agree",level:4},{value:"Additional facets:",id:"additional-facets-16",level:5},{value:"<strong><code>cancel</code></strong>",id:"cancel",level:4},{value:"Additional facets:",id:"additional-facets-17",level:5},{value:"<strong><code>cfp</code></strong>",id:"cfp",level:4},{value:"Additional facets:",id:"additional-facets-18",level:5},{value:"<strong><code>end_conversation</code></strong>",id:"end_conversation",level:4},{value:"Additional facets:",id:"additional-facets-19",level:5},{value:"<strong><code>failure</code></strong>",id:"failure",level:4},{value:"Additional facets:",id:"additional-facets-20",level:5},{value:"<strong><code>inform</code></strong>",id:"inform",level:4},{value:"Additional facets:",id:"additional-facets-21",level:5},{value:"<strong><code>propose</code></strong>",id:"propose",level:4},{value:"Additional facets:",id:"additional-facets-22",level:5},{value:"<strong><code>query</code></strong>",id:"query",level:4},{value:"Additional facets:",id:"additional-facets-23",level:5},{value:"<strong><code>refuse</code></strong>",id:"refuse",level:4},{value:"Additional facets:",id:"additional-facets-24",level:5},{value:"<strong><code>reject_proposal</code></strong>",id:"reject_proposal",level:4},{value:"Additional facets:",id:"additional-facets-25",level:5},{value:"<strong><code>reply</code></strong>",id:"reply",level:4},{value:"Additional facets:",id:"additional-facets-26",level:5},{value:"<strong><code>request</code></strong>",id:"request",level:4},{value:"Additional facets:",id:"additional-facets-27",level:5},{value:"<strong><code>send</code></strong>",id:"send",level:4},{value:"Additional facets:",id:"additional-facets-28",level:5},{value:"<strong><code>start_conversation</code></strong>",id:"start_conversation",level:4},{value:"Additional facets:",id:"additional-facets-29",level:5},{value:"<strong><code>subscribe</code></strong>",id:"subscribe",level:4},{value:"Additional facets:",id:"additional-facets-30",level:5},{value:"<code>messaging</code>",id:"messaging",level:2},{value:"Variables",id:"variables-4",level:3},{value:"Actions",id:"actions-4",level:3},{value:"<strong><code>send</code></strong>",id:"send-1",level:4},{value:"Additional facets:",id:"additional-facets-31",level:5},{value:"<code>moving</code>",id:"moving",level:2},{value:"Variables",id:"variables-5",level:3},{value:"Actions",id:"actions-5",level:3},{value:"<strong><code>follow</code></strong>",id:"follow",level:4},{value:"Additional facets:",id:"additional-facets-32",level:5},{value:"Examples:",id:"examples-15",level:5},{value:"<strong><code>goto</code></strong>",id:"goto",level:4},{value:"Additional facets:",id:"additional-facets-33",level:5},{value:"Examples:",id:"examples-16",level:5},{value:"<strong><code>move</code></strong>",id:"move",level:4},{value:"Additional facets:",id:"additional-facets-34",level:5},{value:"Examples:",id:"examples-17",level:5},{value:"<strong><code>wander</code></strong>",id:"wander",level:4},{value:"Additional facets:",id:"additional-facets-35",level:5},{value:"Examples:",id:"examples-18",level:5},{value:"<code>moving3D</code>",id:"moving3d",level:2},{value:"Variables",id:"variables-6",level:3},{value:"Actions",id:"actions-6",level:3},{value:"<strong><code>move</code></strong>",id:"move-1",level:4},{value:"Additional facets:",id:"additional-facets-36",level:5},{value:"Examples:",id:"examples-19",level:5},{value:"<code>network</code>",id:"network",level:2},{value:"Variables",id:"variables-7",level:3},{value:"Actions",id:"actions-7",level:3},{value:"<strong><code>connect</code></strong>",id:"connect",level:4},{value:"Additional facets:",id:"additional-facets-37",level:5},{value:"Examples:",id:"examples-20",level:5},{value:"<strong><code>execute</code></strong>",id:"execute",level:4},{value:"Additional facets:",id:"additional-facets-38",level:5},{value:"<strong><code>fetch_message</code></strong>",id:"fetch_message",level:4},{value:"<strong><code>fetch_message_from_network</code></strong>",id:"fetch_message_from_network",level:4},{value:"Examples:",id:"examples-21",level:5},{value:"<strong><code>has_more_message</code></strong>",id:"has_more_message",level:4},{value:"<strong><code>join_group</code></strong>",id:"join_group",level:4},{value:"Additional facets:",id:"additional-facets-39",level:5},{value:"Examples:",id:"examples-22",level:5},{value:"<strong><code>leave_group</code></strong>",id:"leave_group",level:4},{value:"Additional facets:",id:"additional-facets-40",level:5},{value:"Examples:",id:"examples-23",level:5},{value:"<code>skill_road</code>",id:"skill_road",level:2},{value:"Variables",id:"variables-8",level:3},{value:"Actions",id:"actions-8",level:3},{value:"<strong><code>register</code></strong>",id:"register",level:4},{value:"Additional facets:",id:"additional-facets-41",level:5},{value:"Examples:",id:"examples-24",level:5},{value:"<strong><code>unregister</code></strong>",id:"unregister-1",level:4},{value:"Additional facets:",id:"additional-facets-42",level:5},{value:"Examples:",id:"examples-25",level:5},{value:"<code>skill_road_node</code>",id:"skill_road_node",level:2},{value:"Variables",id:"variables-9",level:3},{value:"Actions",id:"actions-9",level:3},{value:"<code>SQLSKILL</code>",id:"sqlskill",level:2},{value:"Variables",id:"variables-10",level:3},{value:"Actions",id:"actions-10",level:3},{value:"<strong><code>executeUpdate</code></strong>",id:"executeupdate",level:4},{value:"Additional facets:",id:"additional-facets-43",level:5},{value:"<strong><code>getCurrentDateTime</code></strong>",id:"getcurrentdatetime",level:4},{value:"Additional facets:",id:"additional-facets-44",level:5},{value:"<strong><code>getDateOffset</code></strong>",id:"getdateoffset",level:4},{value:"Additional facets:",id:"additional-facets-45",level:5},{value:"<strong><code>insert</code></strong>",id:"insert",level:4},{value:"Additional facets:",id:"additional-facets-46",level:5},{value:"<strong><code>list2Matrix</code></strong>",id:"list2matrix",level:4},{value:"Additional facets:",id:"additional-facets-47",level:5},{value:"<strong><code>select</code></strong>",id:"select",level:4},{value:"Additional facets:",id:"additional-facets-48",level:5},{value:"<strong><code>testConnection</code></strong>",id:"testconnection",level:4},{value:"Additional facets:",id:"additional-facets-49",level:5},{value:"<strong><code>timeStamp</code></strong>",id:"timestamp",level:4},{value:"<code>static_body</code>",id:"static_body",level:2},{value:"Variables",id:"variables-11",level:3},{value:"Actions",id:"actions-11",level:3},{value:"<strong><code>contact_added_with</code></strong>",id:"contact_added_with",level:4},{value:"Additional facets:",id:"additional-facets-50",level:5},{value:"<strong><code>contact_removed_with</code></strong>",id:"contact_removed_with",level:4},{value:"Additional facets:",id:"additional-facets-51",level:5},{value:"<strong><code>update_body</code></strong>",id:"update_body",level:4}],k={toc:m},g="wrapper";function c(e){var t=e.components,n=(0,i.Z)(e,l);return(0,o.kt)(g,(0,a.Z)({},k,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("hr",null),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"This file is automatically generated from java files. Do Not Edit It.")),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"introduction"},"Introduction"),(0,o.kt)("p",null,"Skills are built-in modules, written in Java, that provide a set of related built-in variables and built-in actions (in addition to those already provided by GAMA) to the species that declare them. A declaration of skill is done by filling the skills attribute in the species definition:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"species my_species skills: [skill1, skill2] {\n    ...\n}\n")),(0,o.kt)("p",null,"Skills have been designed to be mutually compatible so that any combination of them will result in a functional species. An example of skill is the ",(0,o.kt)("inlineCode",{parentName:"p"},"moving")," skill."),(0,o.kt)("p",null,"So, for instance, if a species is declared as:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"species foo skills: [moving]{\n...\n}\n")),(0,o.kt)("p",null,"Its agents will automatically be provided with the following variables : ",(0,o.kt)("inlineCode",{parentName:"p"},"speed"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"heading"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"destination")," and the following actions: ",(0,o.kt)("inlineCode",{parentName:"p"},"move"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"goto"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"wander"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"follow")," in addition to those built-in in species and declared by the modeller. Most of these variables, except the ones marked read-only, can be customized and modified like normal variables by the modeller. For instance, one could want to set a maximum for the speed; this would be done by redeclaring it like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"float speed max:100 min:0;\n")),(0,o.kt)("p",null,"Or, to obtain a speed increasing at each simulation step:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"float speed max:100 min:0  <- 1 update: speed * 1.01;\n")),(0,o.kt)("p",null,"Or, to change the speed in a behavior:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"if speed = 5 {\n    speed <- 10;\n}\n")),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"table-of-contents"},"Table of Contents"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"#advanced_driving"},"advanced_driving"),", ",(0,o.kt)("a",{parentName:"p",href:"#driving"},"driving"),", ",(0,o.kt)("a",{parentName:"p",href:"#dynamic_body"},"dynamic_body"),", ",(0,o.kt)("a",{parentName:"p",href:"#fipa"},"fipa"),", ",(0,o.kt)("a",{parentName:"p",href:"#messaging"},"messaging"),", ",(0,o.kt)("a",{parentName:"p",href:"#moving"},"moving"),", ",(0,o.kt)("a",{parentName:"p",href:"#moving3d"},"moving3D"),", ",(0,o.kt)("a",{parentName:"p",href:"#network"},"network"),", ",(0,o.kt)("a",{parentName:"p",href:"#skill_road"},"skill_road"),", ",(0,o.kt)("a",{parentName:"p",href:"#skill_road_node"},"skill_road_node"),", ",(0,o.kt)("a",{parentName:"p",href:"#sqlskill"},"SQLSKILL"),", ",(0,o.kt)("a",{parentName:"p",href:"#static_body"},"static_body"),", "),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"advanced_driving"},(0,o.kt)("inlineCode",{parentName:"h2"},"advanced_driving")),(0,o.kt)("h3",{id:"variables"},"Variables"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"acc_bias"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"float"),"): the bias term used for asymmetric lane changing, parameter 'a_bias' in MOBIL   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"acc_gain_threshold"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"float"),"): the minimum acceleration gain for the vehicle to switch to another lane, introduced to prevent frantic lane changing. Known as the parameter 'a_th' in the MOBIL lane changing model   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"acceleration"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"float"),"): the current acceleration of the vehicle (in m/s^2)   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"allowed_lanes"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"list"),"): a list containing possible lane index values for the attribute lowest_lane   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"current_index"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"int"),"): the index of the current edge (road) in the path   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"current_lane"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"int"),"): the current lane on which the agent is   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"current_path"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"path"),"): the path which the agent is currently following   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"current_road"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"agent"),"): the road which the vehicle is currently on   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"current_target"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"agent"),"): the current target of the agent   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"delta_idm"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"float"),"): the exponent used in the computation of free-road acceleration in the Intelligent Driver Model   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"distance_to_current_target"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"float"),"): euclidean distance to the current target node   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"distance_to_goal"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"float"),"): euclidean distance to the endpoint of the current segment   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"final_target"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"agent"),"): the final target of the agent   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"follower"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"agent"),"): the vehicle following this vehicle   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"ignore_oneway"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"boolean"),"): if set to ",(0,o.kt)("inlineCode",{parentName:"li"},"true"),", the vehicle will be able to violate one-way traffic rule   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"lane_change_cooldown"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"float"),"): the duration that a vehicle must wait before changing lanes again   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"lane_change_limit"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"int"),"): the maximum number of lanes that the vehicle can change during a simulation step   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"leading_distance"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"float"),"): the distance to the leading vehicle   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"leading_speed"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"float"),"): the speed of the leading vehicle   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"leading_vehicle"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"agent"),"): the vehicle which is right ahead of the current vehicle.\nIf this is set to nil, the leading vehicle does not exist or might be very far away.   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"linked_lane_limit"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"int"),"): the maximum number of linked lanes that the vehicle can use; the default value is -1, i.e. the vehicle can use all available linked lanes   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"lowest_lane"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"int"),"): the lane with the smallest index that the vehicle is in   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"max_acceleration"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"float"),"): the maximum acceleration of the vehicle. Known as the parameter 'a' in the Intelligent Driver Model   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"max_deceleration"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"float"),"): the maximum deceleration of the vehicle. Known as the parameter 'b' in the Intelligent Driver Model   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"max_safe_deceleration"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"float"),"): the maximum deceleration that the vehicle is willing to induce on its back vehicle when changing lanes. Known as the parameter 'b_save' in the MOBIL lane changing model   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"max_speed"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"float"),"): the maximum speed that the vehicle can achieve. Known as the parameter 'v0' in the Intelligent Driver Model   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"min_safety_distance"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"float"),"): the minimum distance of the vehicle's front bumper to the leading vehicle's rear bumper, known as the parameter s0 in the Intelligent Driver Model   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"min_security_distance"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"float"),"): the minimal distance to another vehicle   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"next_road"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"agent"),"): the road which the vehicle will enter next   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"num_lanes_occupied"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"int"),"): the number of lanes that the vehicle occupies   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"on_linked_road"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"boolean"),"): is the agent on the linked road?   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"politeness_factor"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"float"),"): determines the politeness level of the vehicle when changing lanes. Known as the parameter 'p' in the MOBIL lane changing model   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"proba_block_node"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"float"),"): probability to block a node (do not let other vehicle cross the crossroad), within one second   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"proba_lane_change_down"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"float"),"): probability to change to a lower lane (right lane if right side driving) to gain acceleration, within one second   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"proba_lane_change_up"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"float"),"): probability to change to a upper lane (left lane if right side driving) to gain acceleration, within one second   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"proba_respect_priorities"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"float"),"): probability to respect priority (right or left) laws, within one second   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"proba_respect_stops"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"list"),"): probability to respect stop laws - one value for each type of stop, within one second   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"proba_use_linked_road"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"float"),"): probability to change to a linked lane to gain acceleration, within one second   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"real_speed"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"float"),"): the actual speed of the agent (in meter/second)   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"right_side_driving"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"boolean"),"): are vehicles driving on the right size of the road?   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"safety_distance_coeff"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"float"),"): the coefficient for the computation of the the min distance between two vehicles (according to the vehicle speed - security_distance =max(min_security_distance, security_distance_coeff ",(0,o.kt)("inlineCode",{parentName:"li"},"*")," min(self.real_speed, other.real_speed) )   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"security_distance_coeff"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"float"),"): the coefficient for the computation of the the min distance between two vehicles (according to the vehicle speed - safety_distance =max(min_safety_distance, safety_distance_coeff ",(0,o.kt)("inlineCode",{parentName:"li"},"*")," min(self.real_speed, other.real_speed) )   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"segment_index_on_road"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"int"),"): current segment index of the agent on the current road   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"speed"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"float"),"): the speed of the agent (in meter/second)   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"speed_coeff"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"float"),"): speed coefficient for the speed that the vehicle want to reach (according to the max speed of the road)   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"targets"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"list"),"): the current list of points that the agent has to reach (path)   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"time_headway"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"float"),"): the time gap that to the leading vehicle that the driver must maintain. Known as the parameter 'T' in the Intelligent Driver Model   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"time_since_lane_change"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"float"),"): the elapsed time since the last lane change   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"using_linked_road"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"boolean"),"): indicates if the vehicle is occupying at least one lane on the linked road   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"vehicle_length"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"float"),"): the length of the vehicle (in meters)   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"violating_oneway"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"boolean"),"): indicates if the vehicle is moving in the wrong direction on an one-way (unlinked) road ")),(0,o.kt)("h3",{id:"actions"},"Actions"),(0,o.kt)("h4",{id:"advanced_follow_driving"},(0,o.kt)("strong",{parentName:"h4"},(0,o.kt)("inlineCode",{parentName:"strong"},"advanced_follow_driving"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"moves the agent towards along the path passed in the arguments while considering the other agents in the network (only for graph topology)")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returned type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"float"),"  : the remaining time"),(0,o.kt)("h5",{id:"additional-facets"},"Additional facets:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"path"))," (path): a path to be followed. \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"target"))," (point): the target to reach \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"speed"))," (float): the speed to use for this move (replaces the current value of speed) \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"time"))," (float): time to travel")),(0,o.kt)("h5",{id:"examples"},"Examples:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"do osm_follow path: the_path on: road_network;\n")),(0,o.kt)("h4",{id:"choose_lane"},(0,o.kt)("strong",{parentName:"h4"},(0,o.kt)("inlineCode",{parentName:"strong"},"choose_lane"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Override this if you want to manually choose a lane when entering new road. By default, the vehicle tries to stay in the current lane. If the new road has fewer lanes than the current one and the current lane index is too big, it tries to enter the most uppermost lane.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returned type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"int"),"  : an integer representing the lane index"),(0,o.kt)("h5",{id:"additional-facets-1"},"Additional facets:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"new_road"))," (agent): the new road that's the vehicle is going to enter",(0,o.kt)("br",{parentName:"li"}),"")),(0,o.kt)("h4",{id:"compute_path"},(0,o.kt)("strong",{parentName:"h4"},(0,o.kt)("inlineCode",{parentName:"strong"},"compute_path"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Action to compute the shortest path to the target node, or shortest path based on the provided list of nodes")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returned type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"path"),"  : the computed path, or nil if no valid path is found"),(0,o.kt)("h5",{id:"additional-facets-2"},"Additional facets:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"graph"))," (graph): the graph representing the road network \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"target"))," (agent): the target node to reach \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"source"))," (agent): the source node (optional, if not defined, closest node to the agent location) \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"nodes"))," (list): the nodes forming the resulting path")),(0,o.kt)("h5",{id:"examples-1"},"Examples:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"do compute_path graph: road_network target: target_node; \ndo compute_path graph: road_network nodes: [node1, node5, node10];\n")),(0,o.kt)("h4",{id:"drive"},(0,o.kt)("strong",{parentName:"h4"},(0,o.kt)("inlineCode",{parentName:"strong"},"drive"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"action to drive toward the target")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returned type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"bool")),(0,o.kt)("h5",{id:"examples-2"},"Examples:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"do drive;\n")),(0,o.kt)("h4",{id:"drive_random"},(0,o.kt)("strong",{parentName:"h4"},(0,o.kt)("inlineCode",{parentName:"strong"},"drive_random"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"action to drive by chosen randomly the next road")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returned type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"bool")),(0,o.kt)("h5",{id:"additional-facets-3"},"Additional facets:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"graph"))," (graph): a graph representing the road network \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"proba_roads"))," (map): a map containing for each road (key), the probability to be selected as next road (value)")),(0,o.kt)("h5",{id:"examples-3"},"Examples:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"do drive_random init_node: some_node;\n")),(0,o.kt)("h4",{id:"external_factor_impact"},(0,o.kt)("strong",{parentName:"h4"},(0,o.kt)("inlineCode",{parentName:"strong"},"external_factor_impact"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"action that allows to define how the remaining time is impacted by external factor")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returned type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"float"),"  : the remaining time"),(0,o.kt)("h5",{id:"additional-facets-4"},"Additional facets:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"new_road"))," (agent): the road on which to the vehicle wants to go \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"remaining_time"))," (float): the remaining time")),(0,o.kt)("h5",{id:"examples-4"},"Examples:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"do external_factor_impact new_road: a_road remaining_time: 0.5;\n")),(0,o.kt)("h4",{id:"force_move"},(0,o.kt)("strong",{parentName:"h4"},(0,o.kt)("inlineCode",{parentName:"strong"},"force_move"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"action to drive by chosen randomly the next road")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returned type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"float")),(0,o.kt)("h5",{id:"additional-facets-5"},"Additional facets:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"lane"))," (int): the lane on which to make the agent move \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"acceleration"))," (float): acceleration of the vehicle \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"time"))," (float): time of move")),(0,o.kt)("h5",{id:"examples-5"},"Examples:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"do drive_random init_node: some_node;\n")),(0,o.kt)("h4",{id:"goto_drive"},(0,o.kt)("strong",{parentName:"h4"},(0,o.kt)("inlineCode",{parentName:"strong"},"goto_drive"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"moves the agent towards the target passed in the arguments.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returned type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"path"),"  : optional: the path followed by the agent."),(0,o.kt)("h5",{id:"additional-facets-6"},"Additional facets:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"target"))," (geometry): the entity towards which to move. \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"speed"))," (float): the speed to use for this move (replaces the current value of speed) \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"on"))," (any type): graph, topology, list of geometries or map of geometries that restrain this move \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"recompute_path"))," (boolean): if false, the path is not recompute even if the graph is modified (by default: true) \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"return_path"))," (boolean): if true, return the path followed (by default: false) \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"following"))," (path): Path to follow.")),(0,o.kt)("h5",{id:"examples-6"},"Examples:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"do goto_drive target: one_of road on: road_network;\n")),(0,o.kt)("h4",{id:"lane_choice"},(0,o.kt)("strong",{parentName:"h4"},(0,o.kt)("inlineCode",{parentName:"strong"},"lane_choice"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"action to choose a lane")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returned type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"int"),"  : the chosen lane, return -1 if no lane can be taken"),(0,o.kt)("h5",{id:"additional-facets-7"},"Additional facets:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"new_road"))," (agent): the road on which to choose the lane")),(0,o.kt)("h5",{id:"examples-7"},"Examples:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"do lane_choice new_road: a_road;\n")),(0,o.kt)("h4",{id:"on_entering_new_road"},(0,o.kt)("strong",{parentName:"h4"},(0,o.kt)("inlineCode",{parentName:"strong"},"on_entering_new_road"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"override this if you want to do something when the vehicle enters a new road (e.g. adjust parameters)")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returned type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"void")),(0,o.kt)("h4",{id:"path_from_nodes"},(0,o.kt)("strong",{parentName:"h4"},(0,o.kt)("inlineCode",{parentName:"strong"},"path_from_nodes"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"action to compute a path from a list of nodes according to a given graph")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returned type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"path"),"  : the computed path, return nil if no path can be taken"),(0,o.kt)("h5",{id:"additional-facets-8"},"Additional facets:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"graph"))," (graph): the graph representing the road network \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"nodes"))," (list): the list of nodes composing the path")),(0,o.kt)("h5",{id:"examples-8"},"Examples:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"do compute_path_from_nodes graph: road_network nodes: [node1, node5, node10];\n")),(0,o.kt)("h4",{id:"ready_to_cross"},(0,o.kt)("strong",{parentName:"h4"},(0,o.kt)("inlineCode",{parentName:"strong"},"ready_to_cross"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"action to test if the vehicle cross a road node to move to a new road")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returned type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"bool"),"  : true if the vehicle can cross the road node, false otherwise"),(0,o.kt)("h5",{id:"additional-facets-9"},"Additional facets:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"node"))," (agent): the road node to test \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"new_road"))," (agent): the road to test")),(0,o.kt)("h5",{id:"examples-9"},"Examples:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"do is_ready_next_road new_road: a_road lane: 0;\n")),(0,o.kt)("h4",{id:"speed_choice"},(0,o.kt)("strong",{parentName:"h4"},(0,o.kt)("inlineCode",{parentName:"strong"},"speed_choice"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"action to choose a speed")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returned type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"float"),"  : the chosen speed"),(0,o.kt)("h5",{id:"additional-facets-10"},"Additional facets:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"new_road"))," (agent): the road on which to choose the speed")),(0,o.kt)("h5",{id:"examples-10"},"Examples:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"do speed_choice new_road: the_road;\n")),(0,o.kt)("h4",{id:"test_next_road"},(0,o.kt)("strong",{parentName:"h4"},(0,o.kt)("inlineCode",{parentName:"strong"},"test_next_road"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"action to test if the vehicle can take the given road")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returned type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"bool"),"  : true (the vehicle can take the road) or false (the vehicle cannot take the road)"),(0,o.kt)("h5",{id:"additional-facets-11"},"Additional facets:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"new_road"))," (agent): the road to test")),(0,o.kt)("h5",{id:"examples-11"},"Examples:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"do test_next_road new_road: a_road;\n")),(0,o.kt)("h4",{id:"unregister"},(0,o.kt)("strong",{parentName:"h4"},(0,o.kt)("inlineCode",{parentName:"strong"},"unregister"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"remove the vehicle from its current roads")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returned type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"bool")),(0,o.kt)("h5",{id:"examples-12"},"Examples:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"do unregister\n")),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"driving"},(0,o.kt)("inlineCode",{parentName:"h2"},"driving")),(0,o.kt)("h3",{id:"variables-1"},"Variables"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"lanes_attribute"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"string"),"): the name of the attribut of the road agent that determine the number of road lanes   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"living_space"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"float"),"): the min distance between the agent and an obstacle (in meter)   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"obstacle_species"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"list"),"): the list of species that are considered as obstacles   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"speed"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"float"),"): the speed of the agent (in meter/second)   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"tolerance"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"float"),"): the tolerance distance used for the computation (in meter) ")),(0,o.kt)("h3",{id:"actions-1"},"Actions"),(0,o.kt)("h4",{id:"follow_driving"},(0,o.kt)("strong",{parentName:"h4"},(0,o.kt)("inlineCode",{parentName:"strong"},"follow_driving"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"moves the agent along a given path passed in the arguments while considering the other agents in the network.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returned type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"path"),"  : optional: the path followed by the agent."),(0,o.kt)("h5",{id:"additional-facets-12"},"Additional facets:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"speed"))," (float): the speed to use for this move (replaces the current value of speed) \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"path"))," (path): a path to be followed. \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"return_path"))," (boolean): if true, return the path followed (by default: false) \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"move_weights"))," (map): Weigths used for the moving. \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"living_space"))," (float): min distance between the agent and an obstacle (replaces the current value of living_space) \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"tolerance"))," (float): tolerance distance used for the computation (replaces the current value of tolerance) \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"lanes_attribute"))," (string): the name of the attribut of the road agent that determine the number of road lanes (replaces the current value of lanes_attribute)")),(0,o.kt)("h5",{id:"examples-13"},"Examples:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"do follow speed: speed * 2 path: road_path;\n")),(0,o.kt)("h4",{id:"goto_driving"},(0,o.kt)("strong",{parentName:"h4"},(0,o.kt)("inlineCode",{parentName:"strong"},"goto_driving"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"moves the agent towards the target passed in the arguments while considering the other agents in the network (only for graph topology)")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returned type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"path"),"  : optional: the path followed by the agent."),(0,o.kt)("h5",{id:"additional-facets-13"},"Additional facets:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"target"))," (geometry): the location or entity towards which to move. \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"speed"))," (float): the speed to use for this move (replaces the current value of speed) \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"on"))," (any type): list, agent, graph, geometry that restrains this move (the agent moves inside this geometry) \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"return_path"))," (boolean): if true, return the path followed (by default: false) \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"move_weights"))," (map): Weigths used for the moving. \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"living_space"))," (float): min distance between the agent and an obstacle (replaces the current value of living_space) \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"tolerance"))," (float): tolerance distance used for the computation (replaces the current value of tolerance) \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"lanes_attribute"))," (string): the name of the attribut of the road agent that determine the number of road lanes (replaces the current value of lanes_attribute)")),(0,o.kt)("h5",{id:"examples-14"},"Examples:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"do gotoTraffic target: one_of (list (species (self))) speed: speed * 2 on: road_network living_space: 2.0;\n")),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"dynamic_body"},(0,o.kt)("inlineCode",{parentName:"h2"},"dynamic_body")),(0,o.kt)("h3",{id:"variables-2"},"Variables"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"angular_damping"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"float"),"): Between 0 and 1. an angular decelaration coefficient that occurs even without contact   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"angular_velocity"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"point"),"): The angular velocity of the agent in the three directions, expressed as a point.   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"contact_damping"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"float"),"): Between 0 and 1. a decelaration coefficient that occurs in case of contact. Only available in the native Bullet library (no effect on the Java implementation)   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"damping"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"float"),"): Between 0 and 1. a linear decelaration coefficient that occurs even without contact   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"velocity"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"point"),"): The linear velocity of the agent in the three directions, expressed as a point. ")),(0,o.kt)("h3",{id:"actions-2"},"Actions"),(0,o.kt)("h4",{id:"apply"},(0,o.kt)("strong",{parentName:"h4"},(0,o.kt)("inlineCode",{parentName:"strong"},"apply"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"An action that allows to apply different effects to the object, like forces, impulses, etc.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returned type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"unknown")),(0,o.kt)("h5",{id:"additional-facets-14"},"Additional facets:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"clearance"))," (boolean): If true clears all forces applied to the agent and clears its veolicity as well \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"impulse"))," (point): An idealised change of momentum. Adds to the velocity of the object. This is the kind of push that you would use on a pool billiard ball. \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"force"))," (point): Move (push) the object once with a certain moment, expressed as a point (vector). Adds to the existing forces. \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"torque"))," (point): Rotate (twist) the object once around its axes, expressed as a point (vector)\n")),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"fipa"},(0,o.kt)("inlineCode",{parentName:"h2"},"fipa")),(0,o.kt)("p",null,"The fipa skill offers some primitives and built-in variables which enable agent to communicate with each other using the FIPA interaction protocol."),(0,o.kt)("h3",{id:"variables-3"},"Variables"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"accept_proposals"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"list"),"): A list of 'accept_proposal' performative messages in the agent's mailbox   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"agrees"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"list"),"): A list of 'agree' performative messages.   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"cancels"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"list"),"): A list of 'cancel' performative messages.   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"cfps"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"list"),"): A list of 'cfp' (call for proposal) performative messages.   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"conversations"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"list"),"): A list containing the current conversations of agent. Ended conversations are automatically removed from this list.   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"failures"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"list"),"): A list of 'failure' performative messages.   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"informs"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"list"),"): A list of 'inform' performative messages.   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"proposes"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"list"),"): A list of 'propose' performative messages .   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"queries"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"list"),"): A list of 'query' performative messages.   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"refuses"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"list"),"): A list of 'propose' performative messages.   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"reject_proposals"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"list"),"): A list of 'reject_proposal' performative messages.   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"requests"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"list"),"): A list of 'request' performative messages.   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"requestWhens"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"list"),"): A list of 'request-when' performative messages.   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"subscribes"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"list"),"): A list of 'subscribe' performative messages. ")),(0,o.kt)("h3",{id:"actions-3"},"Actions"),(0,o.kt)("h4",{id:"accept_proposal"},(0,o.kt)("strong",{parentName:"h4"},(0,o.kt)("inlineCode",{parentName:"strong"},"accept_proposal"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Replies a message with an 'accept_proposal' performative message.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returned type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"unknown")),(0,o.kt)("h5",{id:"additional-facets-15"},"Additional facets:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"message"))," (24): The message to be replied \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"contents"))," (list): The content of the replying message",(0,o.kt)("br",{parentName:"li"}),"")),(0,o.kt)("h4",{id:"agree"},(0,o.kt)("strong",{parentName:"h4"},(0,o.kt)("inlineCode",{parentName:"strong"},"agree"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Replies a message with an 'agree' performative message.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returned type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"unknown")),(0,o.kt)("h5",{id:"additional-facets-16"},"Additional facets:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"message"))," (24): The message to be replied \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"contents"))," (list): The content of the replying message",(0,o.kt)("br",{parentName:"li"}),"")),(0,o.kt)("h4",{id:"cancel"},(0,o.kt)("strong",{parentName:"h4"},(0,o.kt)("inlineCode",{parentName:"strong"},"cancel"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Replies a message with a 'cancel' peformative message.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returned type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"unknown")),(0,o.kt)("h5",{id:"additional-facets-17"},"Additional facets:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"message"))," (24): The message to be replied \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"contents"))," (list): The content of the replying message",(0,o.kt)("br",{parentName:"li"}),"")),(0,o.kt)("h4",{id:"cfp"},(0,o.kt)("strong",{parentName:"h4"},(0,o.kt)("inlineCode",{parentName:"strong"},"cfp"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Replies a message with a 'cfp' performative message.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returned type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"unknown")),(0,o.kt)("h5",{id:"additional-facets-18"},"Additional facets:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"message"))," (24): The message to be replied \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"contents"))," (list): The content of the replying message",(0,o.kt)("br",{parentName:"li"}),"")),(0,o.kt)("h4",{id:"end_conversation"},(0,o.kt)("strong",{parentName:"h4"},(0,o.kt)("inlineCode",{parentName:"strong"},"end_conversation"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Reply a message with an 'end_conversation' peprformative message. This message marks the end of a conversation. In a 'no-protocol' conversation, it is the responsible of the modeler to explicitly send this message to mark the end of a conversation/interaction protocol. Please note that if the contents of the messages of the conversation are not read, then this command has no effect (i.e. it  must be read by at least one of the agents in the conversation)")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returned type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"unknown")),(0,o.kt)("h5",{id:"additional-facets-19"},"Additional facets:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"message"))," (24): The message to be replied \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"contents"))," (list): The content of the replying message",(0,o.kt)("br",{parentName:"li"}),"")),(0,o.kt)("h4",{id:"failure"},(0,o.kt)("strong",{parentName:"h4"},(0,o.kt)("inlineCode",{parentName:"strong"},"failure"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Replies a message with a 'failure' performative message.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returned type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"unknown")),(0,o.kt)("h5",{id:"additional-facets-20"},"Additional facets:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"message"))," (24): The message to be replied \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"contents"))," (list): The content of the replying message",(0,o.kt)("br",{parentName:"li"}),"")),(0,o.kt)("h4",{id:"inform"},(0,o.kt)("strong",{parentName:"h4"},(0,o.kt)("inlineCode",{parentName:"strong"},"inform"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Replies a message with an 'inform' performative message.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returned type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"unknown")),(0,o.kt)("h5",{id:"additional-facets-21"},"Additional facets:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"message"))," (24): The message to be replied \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"contents"))," (list): The content of the replying message",(0,o.kt)("br",{parentName:"li"}),"")),(0,o.kt)("h4",{id:"propose"},(0,o.kt)("strong",{parentName:"h4"},(0,o.kt)("inlineCode",{parentName:"strong"},"propose"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Replies a message with a 'propose' performative message.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returned type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"unknown")),(0,o.kt)("h5",{id:"additional-facets-22"},"Additional facets:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"message"))," (24): The message to be replied \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"contents"))," (list): The content of the replying message",(0,o.kt)("br",{parentName:"li"}),"")),(0,o.kt)("h4",{id:"query"},(0,o.kt)("strong",{parentName:"h4"},(0,o.kt)("inlineCode",{parentName:"strong"},"query"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Replies a message with a 'query' performative message.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returned type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"unknown")),(0,o.kt)("h5",{id:"additional-facets-23"},"Additional facets:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"message"))," (24): The message to be replied \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"contents"))," (list): The content of the replying message",(0,o.kt)("br",{parentName:"li"}),"")),(0,o.kt)("h4",{id:"refuse"},(0,o.kt)("strong",{parentName:"h4"},(0,o.kt)("inlineCode",{parentName:"strong"},"refuse"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Replies a message with a 'refuse' performative message.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returned type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"unknown")),(0,o.kt)("h5",{id:"additional-facets-24"},"Additional facets:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"message"))," (24): The message to be replied \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"contents"))," (list): The contents of the replying message",(0,o.kt)("br",{parentName:"li"}),"")),(0,o.kt)("h4",{id:"reject_proposal"},(0,o.kt)("strong",{parentName:"h4"},(0,o.kt)("inlineCode",{parentName:"strong"},"reject_proposal"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Replies a message with a 'reject_proposal' performative message.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returned type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"unknown")),(0,o.kt)("h5",{id:"additional-facets-25"},"Additional facets:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"message"))," (24): The message to be replied \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"contents"))," (list): The content of the replying message",(0,o.kt)("br",{parentName:"li"}),"")),(0,o.kt)("h4",{id:"reply"},(0,o.kt)("strong",{parentName:"h4"},(0,o.kt)("inlineCode",{parentName:"strong"},"reply"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Replies a message. This action should be only used to reply a message in a 'no-protocol' conversation and with a 'user defined performative'. For performatives supported by GAMA (i.e., standard FIPA performatives), please use the 'action' with the same name of 'performative'. For example, to reply a message with a 'request' performative message, the modeller should use the 'request' action.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returned type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"unknown")),(0,o.kt)("h5",{id:"additional-facets-26"},"Additional facets:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"message"))," (24): The message to be replied \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"performative"))," (string): The performative of the replying message \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"contents"))," (list): The content of the replying message",(0,o.kt)("br",{parentName:"li"}),"")),(0,o.kt)("h4",{id:"request"},(0,o.kt)("strong",{parentName:"h4"},(0,o.kt)("inlineCode",{parentName:"strong"},"request"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Replies a message with a 'request' performative message.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returned type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"unknown")),(0,o.kt)("h5",{id:"additional-facets-27"},"Additional facets:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"message"))," (24): The message to be replied \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"contents"))," (list): The content of the replying message",(0,o.kt)("br",{parentName:"li"}),"")),(0,o.kt)("h4",{id:"send"},(0,o.kt)("strong",{parentName:"h4"},(0,o.kt)("inlineCode",{parentName:"strong"},"send"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Starts a conversation/interaction protocol.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returned type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"msi.gaml.extensions.fipa.FIPAMessage")),(0,o.kt)("h5",{id:"additional-facets-28"},"Additional facets:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"to"))," (list): A list of receiver agents \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"contents"))," (list): The content of the message. A list of any GAML type \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"performative"))," (string): A string, representing the message performative \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"protocol"))," (string): A string representing the name of interaction protocol",(0,o.kt)("br",{parentName:"li"}),"")),(0,o.kt)("h4",{id:"start_conversation"},(0,o.kt)("strong",{parentName:"h4"},(0,o.kt)("inlineCode",{parentName:"strong"},"start_conversation"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Starts a conversation/interaction protocol.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returned type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"msi.gaml.extensions.fipa.FIPAMessage")),(0,o.kt)("h5",{id:"additional-facets-29"},"Additional facets:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"to"))," (list): A list of receiver agents \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"contents"))," (list): The content of the message. A list of any GAML type \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"performative"))," (string): A string, representing the message performative \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"protocol"))," (string): A string representing the name of interaction protocol",(0,o.kt)("br",{parentName:"li"}),"")),(0,o.kt)("h4",{id:"subscribe"},(0,o.kt)("strong",{parentName:"h4"},(0,o.kt)("inlineCode",{parentName:"strong"},"subscribe"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Replies a message with a 'subscribe' performative message.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returned type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"unknown")),(0,o.kt)("h5",{id:"additional-facets-30"},"Additional facets:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"message"))," (24): The message to be replied \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"contents"))," (list): The content of the replying message\n")),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"messaging"},(0,o.kt)("inlineCode",{parentName:"h2"},"messaging")),(0,o.kt)("p",null,"A simple skill that provides agents with a mailbox than can be filled with messages"),(0,o.kt)("h3",{id:"variables-4"},"Variables"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"mailbox"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"list"),"): The list of messages that can be consulted by the agent ")),(0,o.kt)("h3",{id:"actions-4"},"Actions"),(0,o.kt)("h4",{id:"send-1"},(0,o.kt)("strong",{parentName:"h4"},(0,o.kt)("inlineCode",{parentName:"strong"},"send"))),(0,o.kt)("hr",null),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returned type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"message")),(0,o.kt)("h5",{id:"additional-facets-31"},"Additional facets:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"to"))," (any type): The agent, or server, to which this message will be sent to \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"contents"))," (any type): The contents of the message, an arbitrary object\n")),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"moving"},(0,o.kt)("inlineCode",{parentName:"h2"},"moving")),(0,o.kt)("p",null,"The moving skill is intended to define the minimal set of behaviours required for agents that are able to move on different topologies"),(0,o.kt)("h3",{id:"variables-5"},"Variables"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"current_edge"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"geometry"),"): Represents the agent/geometry on which the agent is located (only used with a graph)   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"current_path"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"path"),"): Represents the path on which the agent is moving on (goto action on a graph)   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"destination"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"point"),"): Represents the next location of the agent if it keeps its current speed and heading (read-only). ",(0,o.kt)("strong",{parentName:"li"}," Only correct in continuous topologies and may return nil values if the destination is outside the environment "),"   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"heading"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"float"),"): Represents the absolute heading of the agent in degrees.   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"location"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"point"),"): Represents the current position of the agent   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"real_speed"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"float"),"): Represents the actual speed of the agent (in meter/second)   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"speed"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"float"),"): Represents the speed of the agent (in meter/second) ")),(0,o.kt)("h3",{id:"actions-5"},"Actions"),(0,o.kt)("h4",{id:"follow"},(0,o.kt)("strong",{parentName:"h4"},(0,o.kt)("inlineCode",{parentName:"strong"},"follow"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"moves the agent along a given path passed in the arguments.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returned type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"path"),"  : optional: the path followed by the agent."),(0,o.kt)("h5",{id:"additional-facets-32"},"Additional facets:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"speed"))," (float): the speed to use for this move (replaces the current value of speed) \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"path"))," (path): a path to be followed. \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"move_weights"))," (map): Weights used for the moving. \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"return_path"))," (boolean): if true, return the path followed (by default: false)")),(0,o.kt)("h5",{id:"examples-15"},"Examples:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"do follow speed: speed * 2 path: road_path;\n")),(0,o.kt)("h4",{id:"goto"},(0,o.kt)("strong",{parentName:"h4"},(0,o.kt)("inlineCode",{parentName:"strong"},"goto"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"moves the agent towards the target passed in the arguments.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returned type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"path"),"  : optional: the path followed by the agent."),(0,o.kt)("h5",{id:"additional-facets-33"},"Additional facets:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"target"))," (geometry): the location or entity towards which to move. \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"speed"))," (float): the speed to use for this move (replaces the current value of speed) \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"on"))," (any type): graph, topology, list of geometries or map of geometries that restrain this move \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"recompute_path"))," (boolean): if false, the path is not recompute even if the graph is modified (by default: true) \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"return_path"))," (boolean): if true, return the path followed (by default: false) \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"move_weights"))," (map): Weights used for the moving.")),(0,o.kt)("h5",{id:"examples-16"},"Examples:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"do goto target: (one_of road).location speed: speed * 2 on: road_network;\n")),(0,o.kt)("h4",{id:"move"},(0,o.kt)("strong",{parentName:"h4"},(0,o.kt)("inlineCode",{parentName:"strong"},"move"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"moves the agent forward, the distance being computed with respect to its speed and heading. The value of the corresponding variables are used unless arguments are passed.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returned type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"path")),(0,o.kt)("h5",{id:"additional-facets-34"},"Additional facets:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"speed"))," (float): the speed to use for this move (replaces the current value of speed) \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"heading"))," (float): the angle (in degree) of the target direction. \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"bounds"))," (geometry): the geometry (the localized entity geometry) that restrains this move (the agent moves inside this geometry")),(0,o.kt)("h5",{id:"examples-17"},"Examples:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"do move speed: speed - 10 heading: heading + rnd (30) bounds: agentA;\n")),(0,o.kt)("h4",{id:"wander"},(0,o.kt)("strong",{parentName:"h4"},(0,o.kt)("inlineCode",{parentName:"strong"},"wander"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Moves the agent towards a random location at the maximum distance (with respect to its speed). The heading of the agent is chosen randomly if no amplitude is specified. This action changes the value of heading.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returned type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"bool")),(0,o.kt)("h5",{id:"additional-facets-35"},"Additional facets:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"speed"))," (float): the speed to use for this move (replaces the current value of speed) \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"amplitude"))," (float): a restriction placed on the random heading choice. The new heading is chosen in the range (heading - amplitude/2, heading+amplitude/2) \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"bounds"))," (geometry): the geometry (the localized entity geometry) that restrains this move (the agent moves inside this geometry) \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"on"))," (graph): the graph that restrains this move (the agent moves on the graph \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"proba_edges"))," (map): When the agent moves on a graph, the probability to choose another edge. If not defined, each edge has the same probability to be chosen")),(0,o.kt)("h5",{id:"examples-18"},"Examples:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"do wander speed: speed - 10 amplitude: 120 bounds: agentA;\n")),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"moving3d"},(0,o.kt)("inlineCode",{parentName:"h2"},"moving3D")),(0,o.kt)("p",null,"The moving skill 3D is intended to define the minimal set of behaviours required for agents that are able to move on different topologies"),(0,o.kt)("h3",{id:"variables-6"},"Variables"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"destination"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"point"),"): continuously updated destination of the agent with respect to its speed and heading (read-only)   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"heading"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"float"),"): the absolute heading of the agent in degrees (in the range 0-359)   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"pitch"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"float"),"): the absolute pitch of the agent in degrees (in the range 0-359)   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"roll"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"float"),"): the absolute roll of the agent in degrees (in the range 0-359)   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"speed"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"float"),"): the speed of the agent (in meter/second) ")),(0,o.kt)("h3",{id:"actions-6"},"Actions"),(0,o.kt)("h4",{id:"move-1"},(0,o.kt)("strong",{parentName:"h4"},(0,o.kt)("inlineCode",{parentName:"strong"},"move"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"moves the agent forward, the distance being computed with respect to its speed and heading. The value of the corresponding variables are used unless arguments are passed.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returned type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"path")),(0,o.kt)("h5",{id:"additional-facets-36"},"Additional facets:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"speed"))," (float): the speed to use for this move (replaces the current value of speed) \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"heading"))," (int): int, optional, the direction to take for this move (replaces the current value of heading) \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"pitch"))," (int): int, optional, the direction to take for this move (replaces the current value of pitch) \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"roll"))," (int): int, optional, the direction to take for this move (replaces the current value of roll) \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"bounds"))," (geometry): the geometry (the localized entity geometry) that restrains this move (the agent moves inside this geometry")),(0,o.kt)("h5",{id:"examples-19"},"Examples:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"do move speed: speed - 10 heading: heading + rnd (30) bounds: agentA;\n")),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"network"},(0,o.kt)("inlineCode",{parentName:"h2"},"network")),(0,o.kt)("p",null,"The network skill provides new features to let agents exchange message through network. Sending and receiving data is done with the messaging skill's actions."),(0,o.kt)("h3",{id:"variables-7"},"Variables"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"network_groups"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"list"),"): The set of groups the agent belongs to   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"network_name"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"string"),"): Net ID of the agent   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"network_server"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"list"),"): The list of all the servers to which the agent is connected ")),(0,o.kt)("h3",{id:"actions-7"},"Actions"),(0,o.kt)("h4",{id:"connect"},(0,o.kt)("strong",{parentName:"h4"},(0,o.kt)("inlineCode",{parentName:"strong"},"connect"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Action used by a networking agent to connect to a server or to create a server.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returned type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"bool")),(0,o.kt)("h5",{id:"additional-facets-37"},"Additional facets:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"protocol"))," (string): protocol type (MQTT (by default), TCP, UDP, websocket, arduino): the possible value ares 'udp_server', 'udp_emitter', 'tcp_server', 'tcp_client', 'websocket_server', 'websocket_client', 'arduino', otherwise the MQTT protocol is used. \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"port"))," (int): Port number \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"raw"))," (boolean): message type raw or rich \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"with_name"))," (string): ID of the agent (its name) for the simulation \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"login"))," (string): login for the connection to the server \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"password"))," (string): password associated to the login \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"force_network_use"))," (boolean): force the use of the network even interaction between local agents \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"to"))," (string): server URL (localhost or a server URL) \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"size_packet"))," (int): For UDP connection, it sets the maximum size of received packets (default = 1024bits).")),(0,o.kt)("h5",{id:"examples-20"},"Examples:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},' do connect  with_name:"any_name"; \n do connect to:"localhost" port:9876 with_name:"any_name"; \n do connect to:"localhost" protocol:"MQTT" port:9876 with_name:"any_name"; \n do connect to:"localhost" protocol:"udp_server" port:9876 with_name:"Server";  \n do connect to:"localhost" protocol:"udp_client" port:9876 with_name:"Client"; \n do connect to:"localhost" protocol:"udp_server" port:9877 size_packet: 4096; \n do connect to:"localhost" protocol:"tcp_client" port:9876; \n do connect to:"localhost" protocol:"tcp_server" port:9876 raw:true;\n')),(0,o.kt)("h4",{id:"execute"},(0,o.kt)("strong",{parentName:"h4"},(0,o.kt)("inlineCode",{parentName:"strong"},"execute"))),(0,o.kt)("hr",null),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returned type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"string"),"  : The error message if any"),(0,o.kt)("h5",{id:"additional-facets-38"},"Additional facets:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"command"))," (string): command to execute",(0,o.kt)("br",{parentName:"li"}),"")),(0,o.kt)("h4",{id:"fetch_message"},(0,o.kt)("strong",{parentName:"h4"},(0,o.kt)("inlineCode",{parentName:"strong"},"fetch_message"))),(0,o.kt)("hr",null),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returned type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"message")),(0,o.kt)("h4",{id:"fetch_message_from_network"},(0,o.kt)("strong",{parentName:"h4"},(0,o.kt)("inlineCode",{parentName:"strong"},"fetch_message_from_network"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Fetch all messages from network to mailbox. Use this in specific case only, this action is done at the end of each step.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returned type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"bool"),"  : nothing"),(0,o.kt)("h5",{id:"examples-21"},"Examples:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"do fetch_message_from_network;//forces gama to get all the new messages since the begining of the cycle\nloop while:has_more_message(){ \n        message mess <- fetch_message();\n        write message.contents;\n}\n")),(0,o.kt)("h4",{id:"has_more_message"},(0,o.kt)("strong",{parentName:"h4"},(0,o.kt)("inlineCode",{parentName:"strong"},"has_more_message"))),(0,o.kt)("hr",null),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returned type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"bool")),(0,o.kt)("h4",{id:"join_group"},(0,o.kt)("strong",{parentName:"h4"},(0,o.kt)("inlineCode",{parentName:"strong"},"join_group"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},'Allow an agent to join a group of agents in order to broadcast messages to other membersor to receive messages sent by other members. Note that all members of the group called : "ALL".')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returned type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"bool")),(0,o.kt)("h5",{id:"additional-facets-39"},"Additional facets:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"with_name"))," (string): name of the group")),(0,o.kt)("h5",{id:"examples-22"},"Examples:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'do join_group with_name:"group name"; \ndo join_group with_name:"group name";\ndo send to:"group name" contents:"I am new in this group";\n')),(0,o.kt)("h4",{id:"leave_group"},(0,o.kt)("strong",{parentName:"h4"},(0,o.kt)("inlineCode",{parentName:"strong"},"leave_group"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"leave a group of agents. The leaving agent will not receive any message from the group. Overwhise, it can send messages to the left group")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returned type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"bool")),(0,o.kt)("h5",{id:"additional-facets-40"},"Additional facets:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"with_name"))," (string): name of the group the agent wants to leave")),(0,o.kt)("h5",{id:"examples-23"},"Examples:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},' do leave_group with_name:"my_group";\n')),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"skill_road"},(0,o.kt)("inlineCode",{parentName:"h2"},"skill_road")),(0,o.kt)("h3",{id:"variables-8"},"Variables"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"agents_on"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"list"),"): for each lane of the road, the list of agents for each segment   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"all_agents"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"list"),"): the list of agents on the road   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"linked_road"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"-199"),"): the linked road: the lanes of this linked road will be usable by drivers on the road   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"maxspeed"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"float"),"): the maximal speed on the road   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"num_lanes"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"int"),"): the number of lanes   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"num_segments"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"int"),"): the number of road segments   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"segment_lengths"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"list"),"): stores the length of each road segment. The index of each element corresponds to the segment index.   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"source_node"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"agent"),"): the source node of the road   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"target_node"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"agent"),"): the target node of the road   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"vehicle_ordering"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"list"),"): provides information about the ordering of vehicle on any given lane ")),(0,o.kt)("h3",{id:"actions-8"},"Actions"),(0,o.kt)("h4",{id:"register"},(0,o.kt)("strong",{parentName:"h4"},(0,o.kt)("inlineCode",{parentName:"strong"},"register"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"register the agent on the road at the given lane")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returned type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"bool")),(0,o.kt)("h5",{id:"additional-facets-41"},"Additional facets:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"agent"))," (agent): the agent to register on the road. \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"lane"))," (int): the lane index on which to register; if lane index >= number of lanes, then register on the linked road")),(0,o.kt)("h5",{id:"examples-24"},"Examples:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"do register agent: the_driver lane: 0\n")),(0,o.kt)("h4",{id:"unregister-1"},(0,o.kt)("strong",{parentName:"h4"},(0,o.kt)("inlineCode",{parentName:"strong"},"unregister"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"unregister the agent on the road")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returned type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"bool")),(0,o.kt)("h5",{id:"additional-facets-42"},"Additional facets:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"agent"))," (agent): the agent to unregister on the road.")),(0,o.kt)("h5",{id:"examples-25"},"Examples:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"do unregister agent: the_driver\n")),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"skill_road_node"},(0,o.kt)("inlineCode",{parentName:"h2"},"skill_road_node")),(0,o.kt)("h3",{id:"variables-9"},"Variables"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"block"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"map"),"): define the list of agents blocking the node, and for each agent, the list of concerned roads   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"priority_roads"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"list"),"): the list of priority roads   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"roads_in"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"list"),"): the list of input roads   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"roads_out"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"list"),"): the list of output roads   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"stop"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"list"),"): define for each type of stop, the list of concerned roads ")),(0,o.kt)("h3",{id:"actions-9"},"Actions"),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"sqlskill"},(0,o.kt)("inlineCode",{parentName:"h2"},"SQLSKILL")),(0,o.kt)("p",null,"This skill allows agents to be provided with actions and attributes in order to connect to SQL databases"),(0,o.kt)("h3",{id:"variables-10"},"Variables"),(0,o.kt)("h3",{id:"actions-10"},"Actions"),(0,o.kt)("h4",{id:"executeupdate"},(0,o.kt)("strong",{parentName:"h4"},(0,o.kt)("inlineCode",{parentName:"strong"},"executeUpdate"))),(0,o.kt)("hr",null),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returned type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"int")),(0,o.kt)("h5",{id:"additional-facets-43"},"Additional facets:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"params"))," (map): Connection parameters \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"updateComm"))," (string): SQL commands such as Create, Update, Delete, Drop with question mark \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"values"))," (list): List of values that are used to replace question mark",(0,o.kt)("br",{parentName:"li"}),"")),(0,o.kt)("h4",{id:"getcurrentdatetime"},(0,o.kt)("strong",{parentName:"h4"},(0,o.kt)("inlineCode",{parentName:"strong"},"getCurrentDateTime"))),(0,o.kt)("hr",null),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returned type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"string")),(0,o.kt)("h5",{id:"additional-facets-44"},"Additional facets:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"dateFormat"))," (string): date format examples: 'yyyy-MM-dd' , 'yyyy-MM-dd HH:mm:ss'",(0,o.kt)("br",{parentName:"li"}),"")),(0,o.kt)("h4",{id:"getdateoffset"},(0,o.kt)("strong",{parentName:"h4"},(0,o.kt)("inlineCode",{parentName:"strong"},"getDateOffset"))),(0,o.kt)("hr",null),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returned type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"string")),(0,o.kt)("h5",{id:"additional-facets-45"},"Additional facets:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"dateFormat"))," (string): date format examples: 'yyyy-MM-dd' , 'yyyy-MM-dd HH:mm:ss' \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"dateStr"))," (string): Start date \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"offset"))," (string): number on day to increase or decrease",(0,o.kt)("br",{parentName:"li"}),"")),(0,o.kt)("h4",{id:"insert"},(0,o.kt)("strong",{parentName:"h4"},(0,o.kt)("inlineCode",{parentName:"strong"},"insert"))),(0,o.kt)("hr",null),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returned type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"int")),(0,o.kt)("h5",{id:"additional-facets-46"},"Additional facets:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"params"))," (map): Connection parameters \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"into"))," (string): Table name \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"columns"))," (list): List of column name of table \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"values"))," (list): List of values that are used to insert into table. Columns and values must have same size",(0,o.kt)("br",{parentName:"li"}),"")),(0,o.kt)("h4",{id:"list2matrix"},(0,o.kt)("strong",{parentName:"h4"},(0,o.kt)("inlineCode",{parentName:"strong"},"list2Matrix"))),(0,o.kt)("hr",null),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returned type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"matrix")),(0,o.kt)("h5",{id:"additional-facets-47"},"Additional facets:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"param"))," (list): Param: a list of records and metadata \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"getName"))," (boolean): getType: a boolean value, optional parameter \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"getType"))," (boolean): getType: a boolean value, optional parameter",(0,o.kt)("br",{parentName:"li"}),"")),(0,o.kt)("h4",{id:"select"},(0,o.kt)("strong",{parentName:"h4"},(0,o.kt)("inlineCode",{parentName:"strong"},"select"))),(0,o.kt)("hr",null),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returned type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"list")),(0,o.kt)("h5",{id:"additional-facets-48"},"Additional facets:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"params"))," (map): Connection parameters \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"select"))," (string): select string with question marks \t\t\t"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"values"))," (list): List of values that are used to replace question marks",(0,o.kt)("br",{parentName:"li"}),"")),(0,o.kt)("h4",{id:"testconnection"},(0,o.kt)("strong",{parentName:"h4"},(0,o.kt)("inlineCode",{parentName:"strong"},"testConnection"))),(0,o.kt)("hr",null),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returned type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"bool")),(0,o.kt)("h5",{id:"additional-facets-49"},"Additional facets:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"params"))," (map): Connection parameters",(0,o.kt)("br",{parentName:"li"}),"")),(0,o.kt)("h4",{id:"timestamp"},(0,o.kt)("strong",{parentName:"h4"},(0,o.kt)("inlineCode",{parentName:"strong"},"timeStamp"))),(0,o.kt)("hr",null),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returned type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"float")),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"static_body"},(0,o.kt)("inlineCode",{parentName:"h2"},"static_body")),(0,o.kt)("h3",{id:"variables-11"},"Variables"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"aabb"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"geometry"),"): The axis-aligned bounding box. A box used to evaluate the probability of contacts between objects. Can be displayed as any other GAMA shapes/geometries in order to verify that the physical representation of the agent corresponds to its geometry in the model   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"friction"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"float"),"): Between 0 and 1. The coefficient of friction of the agent (how much it decelerates the agents in contact with him). Default is 0.5   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"mass"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"float"),"): The mass of the agent. Should be equal to 0.0 for static, motionless agents   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"restitution"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"float"),"): Between 0 and 1. The coefficient of restitution of the agent (defines the 'bounciness' of the agent). Default is 0   "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"rotation"))," (",(0,o.kt)("inlineCode",{parentName:"li"},"pair"),"): The rotation of the physical body, expressed as a pair which key is the angle in degrees and value the axis around which it is measured ")),(0,o.kt)("h3",{id:"actions-11"},"Actions"),(0,o.kt)("h4",{id:"contact_added_with"},(0,o.kt)("strong",{parentName:"h4"},(0,o.kt)("inlineCode",{parentName:"strong"},"contact_added_with"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"This action can be redefined in order for the agent to implement a specific behavior when it comes into contact (collision) with another agent. It is automatically called by the physics simulation engine on both colliding agents. The default built-in behavior does nothing.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returned type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"unknown")),(0,o.kt)("h5",{id:"additional-facets-50"},"Additional facets:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"other"))," (agent): represents the other agent with which a collision has been detected",(0,o.kt)("br",{parentName:"li"}),"")),(0,o.kt)("h4",{id:"contact_removed_with"},(0,o.kt)("strong",{parentName:"h4"},(0,o.kt)("inlineCode",{parentName:"strong"},"contact_removed_with"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"This action can be redefined in order for the agent to implement a specific behavior when a previous contact with another agent is removed. It is automatically called by the physics simulation engine on both colliding agents. The default built-in behavior does nothing.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returned type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"unknown")),(0,o.kt)("h5",{id:"additional-facets-51"},"Additional facets:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"other"))," (agent): represents the other agent with which a collision has been detected",(0,o.kt)("br",{parentName:"li"}),"")),(0,o.kt)("h4",{id:"update_body"},(0,o.kt)("strong",{parentName:"h4"},(0,o.kt)("inlineCode",{parentName:"strong"},"update_body"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"This action must be called when the geometry of the agent changes in the simulation world and this change must be propagated to the physical world. The change of location (in either worlds) or the rotation due to physical forces do not count as changes, as they are already taken into account. However, a rotation in the simulation world need to be handled by calling this action. As it involves long operations (removing the agent from the physical world, then reinserting it with its new shape), this action should not be called too often.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returned type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"unknown")))}c.isMDXComponent=!0}}]);