"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[95457],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>f});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),s=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},d=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=s(r),u=a,f=c["".concat(p,".").concat(u)]||c[u]||m[u]||o;return r?n.createElement(f,i(i({ref:t},d),{},{components:r})):n.createElement(f,i({ref:t},d))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[c]="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},66166:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>p,default:()=>f,frontMatter:()=>l,metadata:()=>s,toc:()=>c});var n=r(87462),a=r(63366),o=(r(67294),r(3905)),i=["components"],l={title:"7. Automatic Road Repair"},p=void 0,s={unversionedId:"RoadTrafficModel_step7",id:"RoadTrafficModel_step7",title:"7. Automatic Road Repair",description:"This 7th step illustrates how to select in a list of elements that optimizes a given function.",source:"@site/../docs/RoadTrafficModel_step7.md",sourceDirName:".",slug:"/RoadTrafficModel_step7",permalink:"/wiki/next/RoadTrafficModel_step7",draft:!1,editUrl:"https://github.com/gama-platform/gama/wiki/RoadTrafficModel_step7/_edit",tags:[],version:"current",frontMatter:{title:"7. Automatic Road Repair"}},d={},c=[{value:"Formulation",id:"formulation",level:2},{value:"Model Definition",id:"model-definition",level:2},{value:"parameters",id:"parameters",level:3},{value:"road repairing",id:"road-repairing",level:3},{value:"Complete Model",id:"complete-model",level:2}],m={toc:c},u="wrapper";function f(e){var t=e.components,r=(0,a.Z)(e,i);return(0,o.kt)(u,(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"This 7th step illustrates how to select in a list of elements that optimizes a given function."),(0,o.kt)("h2",{id:"formulation"},"Formulation"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Add a new parameter, ",(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"repair_time")),", that is equal to 2."),(0,o.kt)("li",{parentName:"ul"},"Every ",(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"repair_time")),", the ",(0,o.kt)("inlineCode",{parentName:"li"},"road")," with the highest ",(0,o.kt)("inlineCode",{parentName:"li"},"destruction_coeff")," value is repaired (set its ",(0,o.kt)("inlineCode",{parentName:"li"},"destruction_coeff")," to 1).")),(0,o.kt)("h2",{id:"model-definition"},"Model Definition"),(0,o.kt)("h3",{id:"parameters"},"parameters"),(0,o.kt)("p",null,"We add a new parameter: the ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"strong"},"repair_time")),"."),(0,o.kt)("p",null,"In the global section, we define the ",(0,o.kt)("inlineCode",{parentName:"p"},"repair_time")," variable:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"int repair_time <- 2 ;\n")),(0,o.kt)("p",null,"In the experiment section, we define the associated parameter:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'parameter "Number of steps between two road repairs" var: repair_time category: "Road" ;\n')),(0,o.kt)("h3",{id:"road-repairing"},"road repairing"),(0,o.kt)("p",null,"We have to add a reflex method in the global section that is triggered every ",(0,o.kt)("inlineCode",{parentName:"p"},"repair_time")," hours. This reflex selects, thanks to the ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"strong"},"with_max_of"))," operator the ",(0,o.kt)("inlineCode",{parentName:"p"},"road")," agent with the highest ",(0,o.kt)("inlineCode",{parentName:"p"},"destruction_coeff")," value, then sets this value at 1."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"global {\n    ...\n    reflex repair_road when: every(repair_time #hour) {\n    road the_road_to_repair <- road with_max_of (each.destruction_coeff) ;\n    ask the_road_to_repair {\n        destruction_coeff <- 1.0 ;\n    }\n    }\n}\n")),(0,o.kt)("h2",{id:"complete-model"},"Complete Model"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-gaml",metastring:"reference",reference:!0},"https://github.com/gama-platform/gama/blob/GAMA_1.9.0/msi.gama.models/models/Tutorials/Road%20Traffic/models/Model%2007.gaml\n")))}f.isMDXComponent=!0}}]);