"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[91200],{28453:(e,t,i)=>{i.d(t,{R:()=>o,x:()=>r});var n=i(96540);const s={},a=n.createContext(s);function o(e){const t=n.useContext(a);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),n.createElement(a.Provider,{value:t},e.children)}},72239:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>c,frontMatter:()=>o,metadata:()=>n,toc:()=>u});const n=JSON.parse('{"id":"Save-and-restore-simulations","title":"Save and Restore simulations","description":"[//]: # (startConcept|use_saveSimulation)","source":"@site/versioned_docs/version-1.8.1/Save-and-restore-simulations.md","sourceDirName":".","slug":"/Save-and-restore-simulations","permalink":"/wiki/1.8.1/Save-and-restore-simulations","draft":false,"unlisted":false,"editUrl":"https://github.com/gama-platform/gama/wiki/Save-and-restore-simulations/_edit","tags":[],"version":"1.8.1","frontMatter":{"title":"Save and Restore simulations"},"sidebar":"main","previous":{"title":"Using Comodel","permalink":"/wiki/1.8.1/Comodel"},"next":{"title":"Using network","permalink":"/wiki/1.8.1/UsingNetwork"}}');var s=i(74848),a=i(28453);const o={title:"Save and Restore simulations"},r=void 0,l={},u=[{value:"Save a simulation",id:"save-a-simulation",level:2},{value:"Restore a simulation",id:"restore-a-simulation",level:2},{value:"Saved simulation file type: gsim",id:"saved-simulation-file-type-gsim",level:2},{value:"Other serialization operators",id:"other-serialization-operators",level:2}];function d(e){const t={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:"Last version of GAMA has introduced new features to save the state of a simulation at a given simulation cycle. This has two main applications:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"The possibility to step forward and backward in a simulation,"}),"\n",(0,s.jsx)(t.li,{children:"The possibility to save the state of a simulation in a file and to restore a simulation from this file."}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"save-a-simulation",children:"Save a simulation"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:'experiment saveSimu type: gui {\n\n\treflex store when: cycle = 5 {\t\t\n\t\twrite "================ START SAVE + self " + " - " + cycle ;\t\t\n\t\twrite "Save of simulation : " + saveSimulation(\'saveSimu.gsim\');\n\t\twrite "================ END SAVE + self " + " - " + cycle ;\t\t\t\n\t}\t\n\t\n\toutput {\n\t\tdisplay main_display {\n\t\t\tspecies road aspect: geom;\n\t\t\tspecies people aspect: base;\t\t\t\t\t\t\n\t\t}\n\t}\t\n}\n'})}),"\n",(0,s.jsx)(t.h2,{id:"restore-a-simulation",children:"Restore a simulation"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:'experiment reloadSavedSimuOnly type: gui {\n\t\n\taction _init_ {\n\t\tcreate simulation from: saved_simulation_file("saveSimu.gsim");\t\n\t}\n\n\toutput {\n\t\tdisplay main_display {\n\t\t\tspecies road aspect: geom;\n\t\t\tspecies people aspect: base;\t\t\t\t\t\t\n\t\t}\n\t}\t\n}\n'})}),"\n",(0,s.jsx)(t.h2,{id:"saved-simulation-file-type-gsim",children:"Saved simulation file type: gsim"}),"\n",(0,s.jsx)(t.h2,{id:"other-serialization-operators",children:"Other serialization operators"})]})}function c(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);