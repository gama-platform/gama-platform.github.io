"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[99525],{85090:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>t,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"OperatorsBC","title":"Operators (B to C)","description":"----","source":"@site/versioned_docs/version-1.9.1/OperatorsBC.md","sourceDirName":".","slug":"/OperatorsBC","permalink":"/wiki/1.9.1/OperatorsBC","draft":false,"unlisted":false,"editUrl":"https://github.com/gama-platform/gama/wiki/OperatorsBC/_edit","tags":[],"version":"1.9.1","frontMatter":{"title":"Operators (B to C)"},"sidebar":"main","previous":{"title":"Operators (A to A)","permalink":"/wiki/1.9.1/OperatorsAA"},"next":{"title":"Operators (D to H)","permalink":"/wiki/1.9.1/OperatorsDH"}}');var i=s(74848),l=s(28453);const a={title:"Operators (B to C)"},o=void 0,t={},c=[{value:"Definition",id:"definition",level:2},{value:"Priority between operators",id:"priority-between-operators",level:2},{value:"Using actions as operators",id:"using-actions-as-operators",level:2},{value:"Table of Contents",id:"table-of-contents",level:2},{value:"Operators by categories",id:"operators-by-categories",level:2},{value:"3D",id:"3d",level:3},{value:"Arithmetic operators",id:"arithmetic-operators",level:3},{value:"BDI",id:"bdi",level:3},{value:"Casting operators",id:"casting-operators",level:3},{value:"Color-related operators",id:"color-related-operators",level:3},{value:"Comparison operators",id:"comparison-operators",level:3},{value:"Containers-related operators",id:"containers-related-operators",level:3},{value:"Date-related operators",id:"date-related-operators",level:3},{value:"Dates",id:"dates",level:3},{value:"Displays",id:"displays",level:3},{value:"edge",id:"edge",level:3},{value:"EDP-related operators",id:"edp-related-operators",level:3},{value:"Files-related operators",id:"files-related-operators",level:3},{value:"GamaMetaType",id:"gamametatype",level:3},{value:"Gen*",id:"gen",level:3},{value:"Graphs-related operators",id:"graphs-related-operators",level:3},{value:"Grid-related operators",id:"grid-related-operators",level:3},{value:"ImageOperators",id:"imageoperators",level:3},{value:"Iterator operators",id:"iterator-operators",level:3},{value:"List-related operators",id:"list-related-operators",level:3},{value:"Logical operators",id:"logical-operators",level:3},{value:"Map comparaison operators",id:"map-comparaison-operators",level:3},{value:"Map-related operators",id:"map-related-operators",level:3},{value:"Matrix-related operators",id:"matrix-related-operators",level:3},{value:"multicriteria operators",id:"multicriteria-operators",level:3},{value:"Path-related operators",id:"path-related-operators",level:3},{value:"Pedestrian",id:"pedestrian",level:3},{value:"Points-related operators",id:"points-related-operators",level:3},{value:"Random operators",id:"random-operators",level:3},{value:"ReverseOperators",id:"reverseoperators",level:3},{value:"Shape",id:"shape",level:3},{value:"Spatial operators",id:"spatial-operators",level:3},{value:"Spatial properties operators",id:"spatial-properties-operators",level:3},{value:"Spatial queries operators",id:"spatial-queries-operators",level:3},{value:"Spatial relations operators",id:"spatial-relations-operators",level:3},{value:"Spatial statistical operators",id:"spatial-statistical-operators",level:3},{value:"Spatial transformations operators",id:"spatial-transformations-operators",level:3},{value:"Species-related operators",id:"species-related-operators",level:3},{value:"Statistical operators",id:"statistical-operators",level:3},{value:"Strings-related operators",id:"strings-related-operators",level:3},{value:"SubModel",id:"submodel",level:3},{value:"System",id:"system",level:3},{value:"Time-related operators",id:"time-related-operators",level:3},{value:"Types-related operators",id:"types-related-operators",level:3},{value:"User control operators",id:"user-control-operators",level:3},{value:"Operators",id:"operators",level:2},{value:"<code>BDIPlan</code>",id:"bdiplan",level:3},{value:"Possible uses:",id:"possible-uses",level:4},{value:"Result:",id:"result",level:4},{value:"<code>before</code>",id:"before",level:3},{value:"Possible uses:",id:"possible-uses-1",level:4},{value:"Result:",id:"result-1",level:4},{value:"Examples:",id:"examples",level:4},{value:"<code>beta</code>",id:"beta",level:3},{value:"Possible uses:",id:"possible-uses-2",level:4},{value:"Result:",id:"result-2",level:4},{value:"Comment:",id:"comment",level:4},{value:"Examples:",id:"examples-1",level:4},{value:"<code>beta_index</code>",id:"beta_index",level:3},{value:"Possible uses:",id:"possible-uses-3",level:4},{value:"Result:",id:"result-3",level:4},{value:"Examples:",id:"examples-2",level:4},{value:"<code>between</code>",id:"between",level:3},{value:"Possible uses:",id:"possible-uses-4",level:4},{value:"Result:",id:"result-4",level:4},{value:"Special cases:",id:"special-cases",level:4},{value:"Examples:",id:"examples-3",level:4},{value:"<code>betweenness_centrality</code>",id:"betweenness_centrality",level:3},{value:"Possible uses:",id:"possible-uses-5",level:4},{value:"Result:",id:"result-5",level:4},{value:"Examples:",id:"examples-4",level:4},{value:"<code>biggest_cliques_of</code>",id:"biggest_cliques_of",level:3},{value:"Possible uses:",id:"possible-uses-6",level:4},{value:"Result:",id:"result-6",level:4},{value:"Examples:",id:"examples-5",level:4},{value:"<code>binomial</code>",id:"binomial",level:3},{value:"Possible uses:",id:"possible-uses-7",level:4},{value:"Result:",id:"result-7",level:4},{value:"Comment:",id:"comment-1",level:4},{value:"Examples:",id:"examples-6",level:4},{value:"<code>binomial_coeff</code>",id:"binomial_coeff",level:3},{value:"Possible uses:",id:"possible-uses-8",level:4},{value:"Result:",id:"result-8",level:4},{value:"Examples:",id:"examples-7",level:4},{value:"<code>binomial_complemented</code>",id:"binomial_complemented",level:3},{value:"Possible uses:",id:"possible-uses-9",level:4},{value:"Result:",id:"result-9",level:4},{value:"Examples:",id:"examples-8",level:4},{value:"<code>binomial_sum</code>",id:"binomial_sum",level:3},{value:"Possible uses:",id:"possible-uses-10",level:4},{value:"Result:",id:"result-10",level:4},{value:"Examples:",id:"examples-9",level:4},{value:"<code>blend</code>",id:"blend",level:3},{value:"Possible uses:",id:"possible-uses-11",level:4},{value:"Result:",id:"result-11",level:4},{value:"Special cases:",id:"special-cases-1",level:4},{value:"Examples:",id:"examples-10",level:4},{value:"<code>blend</code>",id:"blend-1",level:3},{value:"Possible uses:",id:"possible-uses-12",level:4},{value:"Result:",id:"result-12",level:4},{value:"Examples:",id:"examples-11",level:4},{value:"<code>blurred</code>",id:"blurred",level:3},{value:"Possible uses:",id:"possible-uses-13",level:4},{value:"Result:",id:"result-13",level:4},{value:"<code>bool</code>",id:"bool",level:3},{value:"Possible uses:",id:"possible-uses-14",level:4},{value:"Result:",id:"result-14",level:4},{value:"<code>box</code>",id:"box",level:3},{value:"Possible uses:",id:"possible-uses-15",level:4},{value:"Result:",id:"result-15",level:4},{value:"Comment:",id:"comment-2",level:4},{value:"Special cases:",id:"special-cases-2",level:4},{value:"Examples:",id:"examples-12",level:4},{value:"<code>brewer_colors</code>",id:"brewer_colors",level:3},{value:"Possible uses:",id:"possible-uses-16",level:4},{value:"Result:",id:"result-16",level:4},{value:"Examples:",id:"examples-13",level:4},{value:"<code>brewer_palettes</code>",id:"brewer_palettes",level:3},{value:"Possible uses:",id:"possible-uses-17",level:4},{value:"Result:",id:"result-17",level:4},{value:"Examples:",id:"examples-14",level:4},{value:"<code>brighter</code>",id:"brighter",level:3},{value:"Possible uses:",id:"possible-uses-18",level:4},{value:"Result:",id:"result-18",level:4},{value:"<code>buffer</code>",id:"buffer",level:3},{value:"<code>build</code>",id:"build",level:3},{value:"Possible uses:",id:"possible-uses-19",level:4},{value:"Result:",id:"result-19",level:4},{value:"Examples:",id:"examples-15",level:4},{value:"<code>capitalize</code>",id:"capitalize",level:3},{value:"Possible uses:",id:"possible-uses-20",level:4},{value:"Result:",id:"result-20",level:4},{value:"Examples:",id:"examples-16",level:4},{value:"<code>cartesian_product</code>",id:"cartesian_product",level:3},{value:"Possible uses:",id:"possible-uses-21",level:4},{value:"<code>ceil</code>",id:"ceil",level:3},{value:"Possible uses:",id:"possible-uses-22",level:4},{value:"Result:",id:"result-21",level:4},{value:"Examples:",id:"examples-17",level:4},{value:"<code>cell_at</code>",id:"cell_at",level:3},{value:"Possible uses:",id:"possible-uses-23",level:4},{value:"<code>cells_in</code>",id:"cells_in",level:3},{value:"Possible uses:",id:"possible-uses-24",level:4},{value:"<code>cells_overlapping</code>",id:"cells_overlapping",level:3},{value:"Possible uses:",id:"possible-uses-25",level:4},{value:"<code>centroid</code>",id:"centroid",level:3},{value:"Possible uses:",id:"possible-uses-26",level:4},{value:"Result:",id:"result-22",level:4},{value:"Examples:",id:"examples-18",level:4},{value:"<code>char</code>",id:"char",level:3},{value:"Possible uses:",id:"possible-uses-27",level:4},{value:"Special cases:",id:"special-cases-3",level:4},{value:"<code>chi_square</code>",id:"chi_square",level:3},{value:"Possible uses:",id:"possible-uses-28",level:4},{value:"Result:",id:"result-23",level:4},{value:"Examples:",id:"examples-19",level:4},{value:"<code>chi_square_complemented</code>",id:"chi_square_complemented",level:3},{value:"Possible uses:",id:"possible-uses-29",level:4},{value:"Result:",id:"result-24",level:4},{value:"Examples:",id:"examples-20",level:4},{value:"<code>choose</code>",id:"choose",level:3},{value:"Possible uses:",id:"possible-uses-30",level:4},{value:"Result:",id:"result-25",level:4},{value:"<code>circle</code>",id:"circle",level:3},{value:"Possible uses:",id:"possible-uses-31",level:4},{value:"Result:",id:"result-26",level:4},{value:"Comment:",id:"comment-3",level:4},{value:"Special cases:",id:"special-cases-4",level:4},{value:"Examples:",id:"examples-21",level:4},{value:"<code>clean</code>",id:"clean",level:3},{value:"Possible uses:",id:"possible-uses-32",level:4},{value:"Result:",id:"result-27",level:4},{value:"Comment:",id:"comment-4",level:4},{value:"Examples:",id:"examples-22",level:4},{value:"<code>clean_network</code>",id:"clean_network",level:3},{value:"Possible uses:",id:"possible-uses-33",level:4},{value:"Result:",id:"result-28",level:4},{value:"Comment:",id:"comment-5",level:4},{value:"Examples:",id:"examples-23",level:4},{value:"<code>clipped_with</code>",id:"clipped_with",level:3},{value:"Possible uses:",id:"possible-uses-34",level:4},{value:"Result:",id:"result-29",level:4},{value:"<code>closest_points_with</code>",id:"closest_points_with",level:3},{value:"Possible uses:",id:"possible-uses-35",level:4},{value:"Result:",id:"result-30",level:4},{value:"Examples:",id:"examples-24",level:4},{value:"<code>closest_to</code>",id:"closest_to",level:3},{value:"Possible uses:",id:"possible-uses-36",level:4},{value:"Result:",id:"result-31",level:4},{value:"Comment:",id:"comment-6",level:4},{value:"Examples:",id:"examples-25",level:4},{value:"<code>collect</code>",id:"collect",level:3},{value:"Possible uses:",id:"possible-uses-37",level:4},{value:"Result:",id:"result-32",level:4},{value:"Comment:",id:"comment-7",level:4},{value:"Special cases:",id:"special-cases-5",level:4},{value:"Examples:",id:"examples-26",level:4},{value:"<code>column_at</code>",id:"column_at",level:3},{value:"Possible uses:",id:"possible-uses-38",level:4},{value:"Result:",id:"result-33",level:4},{value:"Examples:",id:"examples-27",level:4},{value:"<code>columns_list</code>",id:"columns_list",level:3},{value:"Possible uses:",id:"possible-uses-39",level:4},{value:"Result:",id:"result-34",level:4},{value:"Examples:",id:"examples-28",level:4},{value:"<code>command</code>",id:"command",level:3},{value:"Possible uses:",id:"possible-uses-40",level:4},{value:"Result:",id:"result-35",level:4},{value:"<code>cone</code>",id:"cone",level:3},{value:"Possible uses:",id:"possible-uses-41",level:4},{value:"Result:",id:"result-36",level:4},{value:"Comment:",id:"comment-8",level:4},{value:"Special cases:",id:"special-cases-6",level:4},{value:"Examples:",id:"examples-29",level:4},{value:"<code>cone3D</code>",id:"cone3d",level:3},{value:"Possible uses:",id:"possible-uses-42",level:4},{value:"Result:",id:"result-37",level:4},{value:"Comment:",id:"comment-9",level:4},{value:"Special cases:",id:"special-cases-7",level:4},{value:"Examples:",id:"examples-30",level:4},{value:"<code>connected_components_of</code>",id:"connected_components_of",level:3},{value:"Possible uses:",id:"possible-uses-43",level:4},{value:"Result:",id:"result-38",level:4},{value:"Examples:",id:"examples-31",level:4},{value:"<code>connectivity_index</code>",id:"connectivity_index",level:3},{value:"Possible uses:",id:"possible-uses-44",level:4},{value:"Result:",id:"result-39",level:4},{value:"Examples:",id:"examples-32",level:4},{value:"<code>container</code>",id:"container",level:3},{value:"Possible uses:",id:"possible-uses-45",level:4},{value:"Result:",id:"result-40",level:4},{value:"<code>contains</code>",id:"contains",level:3},{value:"Possible uses:",id:"possible-uses-46",level:4},{value:"Result:",id:"result-41",level:4},{value:"Comment:",id:"comment-10",level:4},{value:"Special cases:",id:"special-cases-8",level:4},{value:"Examples:",id:"examples-33",level:4},{value:"<code>contains_all</code>",id:"contains_all",level:3},{value:"Possible uses:",id:"possible-uses-47",level:4},{value:"Result:",id:"result-42",level:4},{value:"Comment:",id:"comment-11",level:4},{value:"Special cases:",id:"special-cases-9",level:4},{value:"Examples:",id:"examples-34",level:4},{value:"<code>contains_any</code>",id:"contains_any",level:3},{value:"Possible uses:",id:"possible-uses-48",level:4},{value:"Result:",id:"result-43",level:4},{value:"Comment:",id:"comment-12",level:4},{value:"Special cases:",id:"special-cases-10",level:4},{value:"Examples:",id:"examples-35",level:4},{value:"<code>contains_edge</code>",id:"contains_edge",level:3},{value:"Possible uses:",id:"possible-uses-49",level:4},{value:"Result:",id:"result-44",level:4},{value:"Special cases:",id:"special-cases-11",level:4},{value:"Examples:",id:"examples-36",level:4},{value:"<code>contains_key</code>",id:"contains_key",level:3},{value:"Possible uses:",id:"possible-uses-50",level:4},{value:"Result:",id:"result-45",level:4},{value:"Comment:",id:"comment-13",level:4},{value:"Special cases:",id:"special-cases-12",level:4},{value:"<code>contains_node</code>",id:"contains_node",level:3},{value:"<code>contains_value</code>",id:"contains_value",level:3},{value:"<code>contains_vertex</code>",id:"contains_vertex",level:3},{value:"Possible uses:",id:"possible-uses-51",level:4},{value:"Result:",id:"result-46",level:4},{value:"Special cases:",id:"special-cases-13",level:4},{value:"Examples:",id:"examples-37",level:4},{value:"<code>conversation</code>",id:"conversation",level:3},{value:"Possible uses:",id:"possible-uses-52",level:4},{value:"Result:",id:"result-47",level:4},{value:"<code>convex_hull</code>",id:"convex_hull",level:3},{value:"Possible uses:",id:"possible-uses-53",level:4},{value:"Result:",id:"result-48",level:4},{value:"Examples:",id:"examples-38",level:4},{value:"<code>copy</code>",id:"copy",level:3},{value:"Possible uses:",id:"possible-uses-54",level:4},{value:"Result:",id:"result-49",level:4},{value:"<code>copy_between</code>",id:"copy_between",level:3},{value:"Possible uses:",id:"possible-uses-55",level:4},{value:"Result:",id:"result-50",level:4},{value:"Special cases:",id:"special-cases-14",level:4},{value:"Examples:",id:"examples-39",level:4},{value:"<code>copy_file</code>",id:"copy_file",level:3},{value:"Possible uses:",id:"possible-uses-56",level:4},{value:"Result:",id:"result-51",level:4},{value:"Examples:",id:"examples-40",level:4},{value:"<code>copy_from_clipboard</code>",id:"copy_from_clipboard",level:3},{value:"Possible uses:",id:"possible-uses-57",level:4},{value:"Result:",id:"result-52",level:4},{value:"Examples:",id:"examples-41",level:4},{value:"<code>copy_to_clipboard</code>",id:"copy_to_clipboard",level:3},{value:"Possible uses:",id:"possible-uses-58",level:4},{value:"Result:",id:"result-53",level:4},{value:"Examples:",id:"examples-42",level:4},{value:"<code>copy_to_clipboard</code>",id:"copy_to_clipboard-1",level:3},{value:"Possible uses:",id:"possible-uses-59",level:4},{value:"Result:",id:"result-54",level:4},{value:"Examples:",id:"examples-43",level:4},{value:"<code>correlation</code>",id:"correlation",level:3},{value:"Possible uses:",id:"possible-uses-60",level:4},{value:"Result:",id:"result-55",level:4},{value:"Examples:",id:"examples-44",level:4},{value:"<code>cos</code>",id:"cos",level:3},{value:"Possible uses:",id:"possible-uses-61",level:4},{value:"Result:",id:"result-56",level:4},{value:"Special cases:",id:"special-cases-15",level:4},{value:"Examples:",id:"examples-45",level:4},{value:"<code>cos_rad</code>",id:"cos_rad",level:3},{value:"Possible uses:",id:"possible-uses-62",level:4},{value:"Result:",id:"result-57",level:4},{value:"Special cases:",id:"special-cases-16",level:4},{value:"Examples:",id:"examples-46",level:4},{value:"<code>count</code>",id:"count",level:3},{value:"Possible uses:",id:"possible-uses-63",level:4},{value:"Result:",id:"result-58",level:4},{value:"Comment:",id:"comment-14",level:4},{value:"Special cases:",id:"special-cases-17",level:4},{value:"Examples:",id:"examples-47",level:4},{value:"<code>covariance</code>",id:"covariance",level:3},{value:"Possible uses:",id:"possible-uses-64",level:4},{value:"Result:",id:"result-59",level:4},{value:"Examples:",id:"examples-48",level:4},{value:"<code>covering</code>",id:"covering",level:3},{value:"Possible uses:",id:"possible-uses-65",level:4},{value:"Result:",id:"result-60",level:4},{value:"Examples:",id:"examples-49",level:4},{value:"<code>covers</code>",id:"covers",level:3},{value:"Possible uses:",id:"possible-uses-66",level:4},{value:"Result:",id:"result-61",level:4},{value:"Special cases:",id:"special-cases-18",level:4},{value:"Examples:",id:"examples-50",level:4},{value:"<code>create_map</code>",id:"create_map",level:3},{value:"Possible uses:",id:"possible-uses-67",level:4},{value:"Result:",id:"result-62",level:4},{value:"Special cases:",id:"special-cases-19",level:4},{value:"Examples:",id:"examples-51",level:4},{value:"<code>cropped_to</code>",id:"cropped_to",level:3},{value:"<code>cross</code>",id:"cross",level:3},{value:"Possible uses:",id:"possible-uses-68",level:4},{value:"Result:",id:"result-63",level:4},{value:"Examples:",id:"examples-52",level:4},{value:"<code>crosses</code>",id:"crosses",level:3},{value:"Possible uses:",id:"possible-uses-69",level:4},{value:"Result:",id:"result-64",level:4},{value:"Special cases:",id:"special-cases-20",level:4},{value:"Examples:",id:"examples-53",level:4},{value:"<code>crossing</code>",id:"crossing",level:3},{value:"Possible uses:",id:"possible-uses-70",level:4},{value:"Result:",id:"result-65",level:4},{value:"Examples:",id:"examples-54",level:4},{value:"<code>crs</code>",id:"crs",level:3},{value:"Possible uses:",id:"possible-uses-71",level:4},{value:"Result:",id:"result-66",level:4},{value:"Examples:",id:"examples-55",level:4},{value:"<code>CRS_transform</code>",id:"crs_transform",level:3},{value:"Possible uses:",id:"possible-uses-72",level:4},{value:"Special cases:",id:"special-cases-21",level:4},{value:"<code>csv_file</code>",id:"csv_file",level:3},{value:"Possible uses:",id:"possible-uses-73",level:4},{value:"Result:",id:"result-67",level:4},{value:"Special cases:",id:"special-cases-22",level:4},{value:"<code>cube</code>",id:"cube",level:3},{value:"Possible uses:",id:"possible-uses-74",level:4},{value:"Result:",id:"result-68",level:4},{value:"Comment:",id:"comment-15",level:4},{value:"Special cases:",id:"special-cases-23",level:4},{value:"Examples:",id:"examples-56",level:4},{value:"<code>curve</code>",id:"curve",level:3},{value:"Possible uses:",id:"possible-uses-75",level:4},{value:"Result:",id:"result-69",level:4},{value:"Special cases:",id:"special-cases-24",level:4},{value:"<code>cylinder</code>",id:"cylinder",level:3},{value:"Possible uses:",id:"possible-uses-76",level:4},{value:"Result:",id:"result-70",level:4},{value:"Comment:",id:"comment-16",level:4},{value:"Special cases:",id:"special-cases-25",level:4},{value:"Examples:",id:"examples-57",level:4}];function d(e){const r={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.strong,{children:"This file is automatically generated from java files. Do Not Edit It."})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h2,{id:"definition",children:"Definition"}),"\n",(0,i.jsx)(r.p,{children:"Operators in the GAML language are used to compose complex expressions. An operator performs a function on one, two, or n operands (which are other expressions and thus may be themselves composed of operators) and returns the result of this function."}),"\n",(0,i.jsxs)(r.p,{children:["Most of them use a classical prefixed functional syntax (i.e. ",(0,i.jsx)(r.code,{children:"operator_name(operand1, operand2, operand3)"}),", see below), with the exception of arithmetic (e.g. ",(0,i.jsx)(r.code,{children:"+"}),", ",(0,i.jsx)(r.code,{children:"/"}),"), logical (",(0,i.jsx)(r.code,{children:"and"}),", ",(0,i.jsx)(r.code,{children:"or"}),"), comparison (e.g. ",(0,i.jsx)(r.code,{children:">"}),", ",(0,i.jsx)(r.code,{children:"<"}),"), access (",(0,i.jsx)(r.code,{children:"."}),", ",(0,i.jsx)(r.code,{children:"[..]"}),") and pair (",(0,i.jsx)(r.code,{children:"::"}),") operators, which require an infixed notation (i.e. ",(0,i.jsx)(r.code,{children:"operand1 operator_symbol operand1"}),")."]}),"\n",(0,i.jsxs)(r.p,{children:["The ternary functional if-else operator, ",(0,i.jsx)(r.code,{children:"? :"}),", uses a special infixed syntax composed with two symbols (e.g. ",(0,i.jsx)(r.code,{children:"operand1 ? operand2 : operand3"}),"). Two unary operators (",(0,i.jsx)(r.code,{children:"-"})," and ",(0,i.jsx)(r.code,{children:"!"}),") use a traditional prefixed syntax that does not require parentheses unless the operand is itself a complex expression (e.g. ",(0,i.jsx)(r.code,{children:" - 10"}),", ",(0,i.jsx)(r.code,{children:"! (operand1 or operand2)"}),")."]}),"\n",(0,i.jsxs)(r.p,{children:["Finally, special constructor operators (",(0,i.jsx)(r.code,{children:"{...}"})," for constructing points, ",(0,i.jsx)(r.code,{children:"[...]"})," for constructing lists and maps) will require their operands to be placed between their two symbols (e.g. ",(0,i.jsx)(r.code,{children:"{1,2,3}"}),", ",(0,i.jsx)(r.code,{children:"[operand1, operand2, ..., operandn]"})," or ",(0,i.jsx)(r.code,{children:"[key1::value1, key2::value2... keyn::valuen]"}),")."]}),"\n",(0,i.jsx)(r.p,{children:"With the exception of these special cases above, the following rules apply to the syntax of operators:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:["if they only have one operand, the functional prefixed syntax is mandatory (e.g. ",(0,i.jsx)(r.code,{children:"operator_name(operand1)"}),")"]}),"\n",(0,i.jsxs)(r.li,{children:["if they have two arguments, either the functional prefixed syntax (e.g. ",(0,i.jsx)(r.code,{children:"operator_name(operand1, operand2)"}),") or the infixed syntax (e.g. ",(0,i.jsx)(r.code,{children:"operand1 operator_name operand2"}),") can be used."]}),"\n",(0,i.jsxs)(r.li,{children:["if they have more than two arguments, either the functional prefixed syntax (e.g. ",(0,i.jsx)(r.code,{children:"operator_name(operand1, operand2, ..., operand)"}),") or a special infixed syntax with the first operand on the left-hand side of the operator name (e.g. ",(0,i.jsx)(r.code,{children:"operand1 operator_name(operand2, ..., operand)"}),") can be used."]}),"\n"]}),"\n",(0,i.jsx)(r.p,{children:"All of these alternative syntaxes are completely equivalent."}),"\n",(0,i.jsxs)(r.p,{children:["Operators in GAML are purely functional, i.e. they are guaranteed to not have any side effects on their operands. For instance, the ",(0,i.jsx)(r.code,{children:"shuffle"})," operator, which randomizes the positions of elements in a list, does not modify its list operand but returns a new shuffled list."]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h2,{id:"priority-between-operators",children:"Priority between operators"}),"\n",(0,i.jsx)(r.p,{children:"The priority of operators determines, in the case of complex expressions composed of several operators, which one(s) will be evaluated first."}),"\n",(0,i.jsx)(r.p,{children:"GAML follows in general the traditional priorities attributed to arithmetic, boolean, comparison operators, with some twists. Namely:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:["the constructor operators, like ",(0,i.jsx)(r.code,{children:"::"}),", used to compose pairs of operands, have the lowest priority of all operators (e.g. ",(0,i.jsx)(r.code,{children:"a > b :: b > c"})," will return a pair of boolean values, which means that the two comparisons are evaluated before the operator applies. Similarly, ",(0,i.jsx)(r.code,{children:"[a > 10, b > 5]"})," will return a list of boolean values."]}),"\n",(0,i.jsxs)(r.li,{children:["it is followed by the ",(0,i.jsx)(r.code,{children:"?:"})," operator, the functional if-else (e.g. ",(0,i.jsx)(r.code,{children:" a > b ? a + 10 : a - 10"})," will return the result of the if-else)."]}),"\n",(0,i.jsxs)(r.li,{children:["next are the logical operators, ",(0,i.jsx)(r.code,{children:"and"})," and ",(0,i.jsx)(r.code,{children:"or"})," (e.g. ",(0,i.jsx)(r.code,{children:"a > b or b > c"})," will return the value of the test)"]}),"\n",(0,i.jsxs)(r.li,{children:["next are the comparison operators (i.e. ",(0,i.jsx)(r.code,{children:">"}),", ",(0,i.jsx)(r.code,{children:"<"}),", ",(0,i.jsx)(r.code,{children:"<="}),", ",(0,i.jsx)(r.code,{children:">="}),", ",(0,i.jsx)(r.code,{children:"="}),", ",(0,i.jsx)(r.code,{children:"!="}),")"]}),"\n",(0,i.jsx)(r.li,{children:"next the arithmetic operators in their logical order (multiplicative operators have a higher priority than additive operators)"}),"\n",(0,i.jsxs)(r.li,{children:["next the unary operators ",(0,i.jsx)(r.code,{children:"-"})," and ",(0,i.jsx)(r.code,{children:"!"})]}),"\n",(0,i.jsxs)(r.li,{children:["next the access operators ",(0,i.jsx)(r.code,{children:"."})," and ",(0,i.jsx)(r.code,{children:"[]"})," (e.g. ",(0,i.jsx)(r.code,{children:"{1,2,3}.x > 20 + {4,5,6}.y"})," will return the result of the comparison between the x and y ordinates of the two points)"]}),"\n",(0,i.jsx)(r.li,{children:"and finally the functional operators, which have the highest priority of all."}),"\n"]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h2,{id:"using-actions-as-operators",children:"Using actions as operators"}),"\n",(0,i.jsx)(r.p,{children:"Actions defined in species can be used as operators, provided they are called on the correct agent. The syntax is that of normal functional operators, but the agent that will perform the action must be added as the first operand."}),"\n",(0,i.jsx)(r.p,{children:"For instance, if the following species is defined:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"species spec1 {\n        int min(int x, int y) {\n                return x > y ? x : y;\n        }\n}\n"})}),"\n",(0,i.jsxs)(r.p,{children:["Any agent instance of spec1 can use ",(0,i.jsx)(r.code,{children:"min"})," as an operator (if the action conflicts with an existing operator, a warning will be emitted). For instance, in the same model, the following line is perfectly acceptable:"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"global {\n        init {\n                create spec1;\n                spec1 my_agent <- spec1[0];\n                int the_min <- my_agent min(10,20); // or min(my_agent, 10, 20);\n        }\n}\n"})}),"\n",(0,i.jsxs)(r.p,{children:["If the action doesn't have any operands, the syntax to use is ",(0,i.jsx)(r.code,{children:"my_agent the_action()"}),". Finally, if it does not return a value, it might still be used but is considering as returning a value of type ",(0,i.jsx)(r.code,{children:"unknown"})," (e.g. ",(0,i.jsx)(r.code,{children:"unknown result <- my_agent the_action(op1, op2);"}),")."]}),"\n",(0,i.jsx)(r.p,{children:"Note that due to the fact that actions are written by modelers, the general functional contract is not respected in that case: actions might perfectly have side effects on their operands (including the agent)."}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h2,{id:"operators-by-categories",children:"Operators by categories"}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"3d",children:"3D"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.a,{href:"OperatorsBC#box",children:"box"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#cone3d",children:"cone3D"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#cube",children:"cube"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#cylinder",children:"cylinder"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#hexagon",children:"hexagon"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#pyramid",children:"pyramid"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#set_z",children:"set_z"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#sphere",children:"sphere"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#teapot",children:"teapot"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"arithmetic-operators",children:"Arithmetic operators"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.a,{href:"OperatorsAA#-",children:"-"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#/",children:"/"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#%5E",children:"^"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#*",children:"*"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#+",children:"+"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#abs",children:"abs"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#acos",children:"acos"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#asin",children:"asin"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#atan",children:"atan"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#atan2",children:"atan2"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#ceil",children:"ceil"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#cos",children:"cos"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#cos_rad",children:"cos_rad"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#div",children:"div"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#even",children:"even"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#exp",children:"exp"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#fact",children:"fact"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#floor",children:"floor"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#hypot",children:"hypot"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#is_finite",children:"is_finite"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#is_number",children:"is_number"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#ln",children:"ln"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#log",children:"log"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#mod",children:"mod"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#round",children:"round"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#signum",children:"signum"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#sin",children:"sin"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#sin_rad",children:"sin_rad"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#sqrt",children:"sqrt"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#tan",children:"tan"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#tan_rad",children:"tan_rad"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#tanh",children:"tanh"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#with_precision",children:"with_precision"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"bdi",children:"BDI"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.a,{href:"OperatorsAA#add_values",children:"add_values"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#and",children:"and"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#eval_when",children:"eval_when"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#get_about",children:"get_about"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#get_agent",children:"get_agent"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#get_agent_cause",children:"get_agent_cause"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#get_belief_op",children:"get_belief_op"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#get_belief_with_name_op",children:"get_belief_with_name_op"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#get_beliefs_op",children:"get_beliefs_op"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#get_beliefs_with_name_op",children:"get_beliefs_with_name_op"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#get_current_intention_op",children:"get_current_intention_op"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#get_decay",children:"get_decay"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#get_desire_op",children:"get_desire_op"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#get_desire_with_name_op",children:"get_desire_with_name_op"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#get_desires_op",children:"get_desires_op"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#get_desires_with_name_op",children:"get_desires_with_name_op"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#get_dominance",children:"get_dominance"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#get_familiarity",children:"get_familiarity"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#get_ideal_op",children:"get_ideal_op"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#get_ideal_with_name_op",children:"get_ideal_with_name_op"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#get_ideals_op",children:"get_ideals_op"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#get_ideals_with_name_op",children:"get_ideals_with_name_op"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#get_intensity",children:"get_intensity"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#get_intention_op",children:"get_intention_op"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#get_intention_with_name_op",children:"get_intention_with_name_op"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#get_intentions_op",children:"get_intentions_op"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#get_intentions_with_name_op",children:"get_intentions_with_name_op"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#get_lifetime",children:"get_lifetime"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#get_liking",children:"get_liking"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#get_modality",children:"get_modality"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#get_obligation_op",children:"get_obligation_op"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#get_obligation_with_name_op",children:"get_obligation_with_name_op"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#get_obligations_op",children:"get_obligations_op"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#get_obligations_with_name_op",children:"get_obligations_with_name_op"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#get_plan_name",children:"get_plan_name"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#get_predicate",children:"get_predicate"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#get_solidarity",children:"get_solidarity"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#get_strength",children:"get_strength"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#get_super_intention",children:"get_super_intention"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#get_trust",children:"get_trust"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#get_truth",children:"get_truth"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#get_uncertainties_op",children:"get_uncertainties_op"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#get_uncertainties_with_name_op",children:"get_uncertainties_with_name_op"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#get_uncertainty_op",children:"get_uncertainty_op"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#get_uncertainty_with_name_op",children:"get_uncertainty_with_name_op"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#get_values",children:"get_values"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#has_belief_op",children:"has_belief_op"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#has_belief_with_name_op",children:"has_belief_with_name_op"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#has_desire_op",children:"has_desire_op"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#has_desire_with_name_op",children:"has_desire_with_name_op"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#has_ideal_op",children:"has_ideal_op"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#has_ideal_with_name_op",children:"has_ideal_with_name_op"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#has_intention_op",children:"has_intention_op"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#has_intention_with_name_op",children:"has_intention_with_name_op"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#has_obligation_op",children:"has_obligation_op"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#has_obligation_with_name_op",children:"has_obligation_with_name_op"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#has_uncertainty_op",children:"has_uncertainty_op"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#has_uncertainty_with_name_op",children:"has_uncertainty_with_name_op"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#new_emotion",children:"new_emotion"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#new_mental_state",children:"new_mental_state"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#new_predicate",children:"new_predicate"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#new_social_link",children:"new_social_link"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#not",children:"not"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#or",children:"or"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#set_about",children:"set_about"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#set_agent",children:"set_agent"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#set_agent_cause",children:"set_agent_cause"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#set_decay",children:"set_decay"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#set_dominance",children:"set_dominance"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#set_familiarity",children:"set_familiarity"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#set_intensity",children:"set_intensity"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#set_lifetime",children:"set_lifetime"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#set_liking",children:"set_liking"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#set_modality",children:"set_modality"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#set_predicate",children:"set_predicate"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#set_solidarity",children:"set_solidarity"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#set_strength",children:"set_strength"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#set_trust",children:"set_trust"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#set_truth",children:"set_truth"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#with_values",children:"with_values"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"casting-operators",children:"Casting operators"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.a,{href:"OperatorsAA#as",children:"as"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#as_int",children:"as_int"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#as_matrix",children:"as_matrix"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#field_with",children:"field_with"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#font",children:"font"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#is",children:"is"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#is_skill",children:"is_skill"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#list_with",children:"list_with"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#matrix_with",children:"matrix_with"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#species_of",children:"species_of"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#to_gaml",children:"to_gaml"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#to_geojson",children:"to_geojson"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#to_list",children:"to_list"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#with_size",children:"with_size"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#with_style",children:"with_style"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"color-related-operators",children:"Color-related operators"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.a,{href:"OperatorsAA#-",children:"-"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#/",children:"/"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#*",children:"*"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#+",children:"+"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#blend",children:"blend"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#brewer_colors",children:"brewer_colors"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#brewer_palettes",children:"brewer_palettes"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#gradient",children:"gradient"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#grayscale",children:"grayscale"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#hsb",children:"hsb"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#mean",children:"mean"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#median",children:"median"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#palette",children:"palette"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#rgb",children:"rgb"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#rnd_color",children:"rnd_color"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#scale",children:"scale"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#sum",children:"sum"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#to_hsb",children:"to_hsb"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"comparison-operators",children:"Comparison operators"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.a,{href:"OperatorsAA#!=",children:"!="}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#%3C",children:"<"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#%3C=",children:"<="}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#=",children:"="}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#%3E",children:">"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#%3E=",children:">="}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#between",children:"between"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"containers-related-operators",children:"Containers-related operators"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.a,{href:"OperatorsAA#-",children:"-"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#::",children:"::"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#+",children:"+"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#accumulate",children:"accumulate"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#all_match",children:"all_match"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#among",children:"among"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#as_json_string",children:"as_json_string"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#at",children:"at"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#cartesian_product",children:"cartesian_product"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#collect",children:"collect"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#contains",children:"contains"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#contains_all",children:"contains_all"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#contains_any",children:"contains_any"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#contains_key",children:"contains_key"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#count",children:"count"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#empty",children:"empty"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#every",children:"every"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#first",children:"first"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#first_with",children:"first_with"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#get",children:"get"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#group_by",children:"group_by"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#in",children:"in"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#index_by",children:"index_by"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#inter",children:"inter"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#interleave",children:"interleave"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#internal_integrated_value",children:"internal_integrated_value"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#last",children:"last"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#last_with",children:"last_with"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#length",children:"length"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#max",children:"max"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#max_of",children:"max_of"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#mean",children:"mean"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#mean_of",children:"mean_of"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#median",children:"median"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#min",children:"min"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#min_of",children:"min_of"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#mul",children:"mul"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#none_matches",children:"none_matches"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#one_matches",children:"one_matches"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#one_of",children:"one_of"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#product_of",children:"product_of"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#range",children:"range"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#remove_duplicates",children:"remove_duplicates"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#reverse",children:"reverse"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#shuffle",children:"shuffle"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#sort_by",children:"sort_by"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#split",children:"split"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#split_in",children:"split_in"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#split_using",children:"split_using"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#sum",children:"sum"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#sum_of",children:"sum_of"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#union",children:"union"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#variance_of",children:"variance_of"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#where",children:"where"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#with_max_of",children:"with_max_of"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#with_min_of",children:"with_min_of"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"date-related-operators",children:"Date-related operators"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.a,{href:"OperatorsAA#-",children:"-"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#!=",children:"!="}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#+",children:"+"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#%3C",children:"<"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#%3C=",children:"<="}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#=",children:"="}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#%3E",children:">"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#%3E=",children:">="}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#after",children:"after"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#before",children:"before"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#between",children:"between"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#every",children:"every"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#milliseconds_between",children:"milliseconds_between"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#minus_days",children:"minus_days"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#minus_hours",children:"minus_hours"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#minus_minutes",children:"minus_minutes"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#minus_months",children:"minus_months"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#minus_ms",children:"minus_ms"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#minus_weeks",children:"minus_weeks"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#minus_years",children:"minus_years"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#months_between",children:"months_between"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#plus_days",children:"plus_days"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#plus_hours",children:"plus_hours"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#plus_minutes",children:"plus_minutes"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#plus_months",children:"plus_months"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#plus_ms",children:"plus_ms"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#plus_weeks",children:"plus_weeks"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#plus_years",children:"plus_years"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#since",children:"since"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#to",children:"to"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#until",children:"until"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#years_between",children:"years_between"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"dates",children:"Dates"}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"displays",children:"Displays"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.a,{href:"OperatorsDH#horizontal",children:"horizontal"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#stack",children:"stack"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#vertical",children:"vertical"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"edge",children:"edge"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.a,{href:"OperatorsDH#edge_between",children:"edge_between"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#strahler",children:"strahler"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"edp-related-operators",children:"EDP-related operators"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.a,{href:"OperatorsDH#diff",children:"diff"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#diff2",children:"diff2"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"files-related-operators",children:"Files-related operators"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.a,{href:"OperatorsBC#copy_file",children:"copy_file"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#crs",children:"crs"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#csv_file",children:"csv_file"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#delete_file",children:"delete_file"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#dxf_file",children:"dxf_file"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#evaluate_sub_model",children:"evaluate_sub_model"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#file_exists",children:"file_exists"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#folder",children:"folder"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#folder_exists",children:"folder_exists"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#gaml_file",children:"gaml_file"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#geojson_file",children:"geojson_file"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#get",children:"get"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#gif_file",children:"gif_file"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#gml_file",children:"gml_file"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#graph6_file",children:"graph6_file"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#graphdimacs_file",children:"graphdimacs_file"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#graphdot_file",children:"graphdot_file"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#graphgexf_file",children:"graphgexf_file"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#graphgml_file",children:"graphgml_file"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#graphml_file",children:"graphml_file"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#graphtsplib_file",children:"graphtsplib_file"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#grid_file",children:"grid_file"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#image_file",children:"image_file"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#is_csv",children:"is_csv"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#is_dxf",children:"is_dxf"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#is_gaml",children:"is_gaml"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#is_geojson",children:"is_geojson"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#is_gif",children:"is_gif"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#is_gml",children:"is_gml"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#is_graph6",children:"is_graph6"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#is_graphdimacs",children:"is_graphdimacs"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#is_graphdot",children:"is_graphdot"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#is_graphgexf",children:"is_graphgexf"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#is_graphgml",children:"is_graphgml"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#is_graphml",children:"is_graphml"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#is_graphtsplib",children:"is_graphtsplib"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#is_grid",children:"is_grid"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#is_image",children:"is_image"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#is_json",children:"is_json"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#is_obj",children:"is_obj"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#is_osm",children:"is_osm"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#is_pgm",children:"is_pgm"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#is_property",children:"is_property"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#is_saved_simulation",children:"is_saved_simulation"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#is_shape",children:"is_shape"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#is_svg",children:"is_svg"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#is_text",children:"is_text"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#is_threeds",children:"is_threeds"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#is_xml",children:"is_xml"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#json_file",children:"json_file"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#new_folder",children:"new_folder"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#obj_file",children:"obj_file"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#osm_file",children:"osm_file"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#pgm_file",children:"pgm_file"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#property_file",children:"property_file"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#read",children:"read"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#rename_file",children:"rename_file"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#saved_simulation_file",children:"saved_simulation_file"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#shape_file",children:"shape_file"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#step_sub_model",children:"step_sub_model"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#svg_file",children:"svg_file"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#text_file",children:"text_file"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#threeds_file",children:"threeds_file"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#unzip",children:"unzip"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#writable",children:"writable"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#xml_file",children:"xml_file"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#zip",children:"zip"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"gamametatype",children:"GamaMetaType"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.a,{href:"OperatorsSZ#type_of",children:"type_of"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"gen",children:"Gen*"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.a,{href:"OperatorsAA#add_attribute",children:"add_attribute"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#add_census_file",children:"add_census_file"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#add_mapper",children:"add_mapper"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#add_marginals",children:"add_marginals"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#add_range_attribute",children:"add_range_attribute"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#with_generation_algo",children:"with_generation_algo"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"graphs-related-operators",children:"Graphs-related operators"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.a,{href:"OperatorsAA#add_edge",children:"add_edge"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#add_node",children:"add_node"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#adjacency",children:"adjacency"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#agent_from_geometry",children:"agent_from_geometry"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#all_pairs_shortest_path",children:"all_pairs_shortest_path"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#alpha_index",children:"alpha_index"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#as_distance_graph",children:"as_distance_graph"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#as_edge_graph",children:"as_edge_graph"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#as_intersection_graph",children:"as_intersection_graph"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#as_path",children:"as_path"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#as_spatial_graph",children:"as_spatial_graph"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#beta_index",children:"beta_index"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#betweenness_centrality",children:"betweenness_centrality"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#biggest_cliques_of",children:"biggest_cliques_of"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#connected_components_of",children:"connected_components_of"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#connectivity_index",children:"connectivity_index"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#contains_edge",children:"contains_edge"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#contains_vertex",children:"contains_vertex"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#degree_of",children:"degree_of"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#directed",children:"directed"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#edge",children:"edge"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#edge_between",children:"edge_between"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#edge_betweenness",children:"edge_betweenness"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#edges",children:"edges"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#gamma_index",children:"gamma_index"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#generate_barabasi_albert",children:"generate_barabasi_albert"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#generate_complete_graph",children:"generate_complete_graph"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#generate_random_graph",children:"generate_random_graph"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#generate_watts_strogatz",children:"generate_watts_strogatz"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#girvan_newman_clustering",children:"girvan_newman_clustering"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#grid_cells_to_graph",children:"grid_cells_to_graph"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#in_degree_of",children:"in_degree_of"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#in_edges_of",children:"in_edges_of"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#k_spanning_tree_clustering",children:"k_spanning_tree_clustering"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#label_propagation_clustering",children:"label_propagation_clustering"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#layout_circle",children:"layout_circle"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#layout_force",children:"layout_force"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#layout_force_fr",children:"layout_force_FR"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#layout_force_fr_indexed",children:"layout_force_FR_indexed"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#layout_grid",children:"layout_grid"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#load_shortest_paths",children:"load_shortest_paths"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#main_connected_component",children:"main_connected_component"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#max_flow_between",children:"max_flow_between"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#maximal_cliques_of",children:"maximal_cliques_of"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#nb_cycles",children:"nb_cycles"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#neighbors_of",children:"neighbors_of"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#node",children:"node"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#nodes",children:"nodes"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#out_degree_of",children:"out_degree_of"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#out_edges_of",children:"out_edges_of"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#path_between",children:"path_between"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#paths_between",children:"paths_between"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#predecessors_of",children:"predecessors_of"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#remove_node_from",children:"remove_node_from"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#rewire_n",children:"rewire_n"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#source_of",children:"source_of"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#spatial_graph",children:"spatial_graph"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#strahler",children:"strahler"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#successors_of",children:"successors_of"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#sum",children:"sum"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#target_of",children:"target_of"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#undirected",children:"undirected"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#use_cache",children:"use_cache"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#weight_of",children:"weight_of"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#with_k_shortest_path_algorithm",children:"with_k_shortest_path_algorithm"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#with_shortest_path_algorithm",children:"with_shortest_path_algorithm"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#with_weights",children:"with_weights"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"grid-related-operators",children:"Grid-related operators"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.a,{href:"OperatorsAA#as_4_grid",children:"as_4_grid"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#as_grid",children:"as_grid"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#as_hexagonal_grid",children:"as_hexagonal_grid"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#cell_at",children:"cell_at"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#cells_in",children:"cells_in"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#cells_overlapping",children:"cells_overlapping"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#field",children:"field"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#grid_at",children:"grid_at"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#neighbors_of",children:"neighbors_of"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#path_between",children:"path_between"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#points_in",children:"points_in"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#values_in",children:"values_in"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"imageoperators",children:"ImageOperators"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.a,{href:"OperatorsAA#*",children:"*"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#antialiased",children:"antialiased"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#blend",children:"blend"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#blurred",children:"blurred"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#brighter",children:"brighter"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#clipped_with",children:"clipped_with"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#darker",children:"darker"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#grayscale",children:"grayscale"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#horizontal_flip",children:"horizontal_flip"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#image",children:"image"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#matrix",children:"matrix"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#rotated_by",children:"rotated_by"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#sharpened",children:"sharpened"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#snapshot",children:"snapshot"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#tinted_with",children:"tinted_with"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#vertical_flip",children:"vertical_flip"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#with_height",children:"with_height"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#with_size",children:"with_size"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#with_width",children:"with_width"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"iterator-operators",children:"Iterator operators"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.a,{href:"OperatorsAA#accumulate",children:"accumulate"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#all_match",children:"all_match"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#as_map",children:"as_map"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#collect",children:"collect"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#count",children:"count"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#create_map",children:"create_map"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#first_with",children:"first_with"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#frequency_of",children:"frequency_of"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#group_by",children:"group_by"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#index_by",children:"index_by"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#last_with",children:"last_with"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#max_of",children:"max_of"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#mean_of",children:"mean_of"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#min_of",children:"min_of"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#none_matches",children:"none_matches"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#one_matches",children:"one_matches"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#product_of",children:"product_of"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#sort_by",children:"sort_by"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#sum_of",children:"sum_of"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#variance_of",children:"variance_of"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#where",children:"where"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#where",children:"where"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#where",children:"where"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#with_max_of",children:"with_max_of"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#with_min_of",children:"with_min_of"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"list-related-operators",children:"List-related operators"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.a,{href:"OperatorsAA#all_indexes_of",children:"all_indexes_of"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#copy_between",children:"copy_between"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#index_of",children:"index_of"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#last_index_of",children:"last_index_of"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"logical-operators",children:"Logical operators"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.a,{href:"OperatorsAA#:",children:":"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#!",children:"!"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#?",children:"?"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#add_3dmodel",children:"add_3Dmodel"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#add_geometry",children:"add_geometry"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#add_icon",children:"add_icon"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#and",children:"and"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#or",children:"or"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#xor",children:"xor"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"map-comparaison-operators",children:"Map comparaison operators"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.a,{href:"OperatorsDH#fuzzy_kappa",children:"fuzzy_kappa"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#fuzzy_kappa_sim",children:"fuzzy_kappa_sim"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#kappa",children:"kappa"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#kappa_sim",children:"kappa_sim"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#percent_absolute_deviation",children:"percent_absolute_deviation"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"map-related-operators",children:"Map-related operators"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.a,{href:"OperatorsAA#as_map",children:"as_map"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#create_map",children:"create_map"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#index_of",children:"index_of"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#last_index_of",children:"last_index_of"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"matrix-related-operators",children:"Matrix-related operators"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.a,{href:"OperatorsAA#-",children:"-"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#/",children:"/"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#.",children:"."}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#*",children:"*"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#+",children:"+"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#append_horizontally",children:"append_horizontally"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#append_vertically",children:"append_vertically"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#column_at",children:"column_at"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#columns_list",children:"columns_list"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#determinant",children:"determinant"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#eigenvalues",children:"eigenvalues"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#index_of",children:"index_of"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#inverse",children:"inverse"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#last_index_of",children:"last_index_of"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#row_at",children:"row_at"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#rows_list",children:"rows_list"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#shuffle",children:"shuffle"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#trace",children:"trace"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#transpose",children:"transpose"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"multicriteria-operators",children:"multicriteria operators"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.a,{href:"OperatorsDH#electre_dm",children:"electre_DM"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#evidence_theory_dm",children:"evidence_theory_DM"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#fuzzy_choquet_dm",children:"fuzzy_choquet_DM"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#promethee_dm",children:"promethee_DM"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#weighted_means_dm",children:"weighted_means_DM"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"path-related-operators",children:"Path-related operators"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.a,{href:"OperatorsAA#agent_from_geometry",children:"agent_from_geometry"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#all_pairs_shortest_path",children:"all_pairs_shortest_path"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#as_path",children:"as_path"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#load_shortest_paths",children:"load_shortest_paths"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#max_flow_between",children:"max_flow_between"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#path_between",children:"path_between"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#path_to",children:"path_to"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#paths_between",children:"paths_between"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#use_cache",children:"use_cache"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"pedestrian",children:"Pedestrian"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.a,{href:"OperatorsDH#generate_pedestrian_network",children:"generate_pedestrian_network"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"points-related-operators",children:"Points-related operators"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.a,{href:"OperatorsAA#-",children:"-"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#/",children:"/"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#*",children:"*"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#+",children:"+"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#%3C",children:"<"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#%3C=",children:"<="}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#%3E",children:">"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#%3E=",children:">="}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#add_point",children:"add_point"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#angle_between",children:"angle_between"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#any_location_in",children:"any_location_in"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#centroid",children:"centroid"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#closest_points_with",children:"closest_points_with"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#farthest_point_to",children:"farthest_point_to"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#grid_at",children:"grid_at"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#norm",children:"norm"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#points_along",children:"points_along"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#points_at",children:"points_at"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#points_on",children:"points_on"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"random-operators",children:"Random operators"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.a,{href:"OperatorsBC#binomial",children:"binomial"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#flip",children:"flip"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#gamma_density",children:"gamma_density"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#gamma_rnd",children:"gamma_rnd"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#gamma_trunc_rnd",children:"gamma_trunc_rnd"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#gauss",children:"gauss"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#generate_terrain",children:"generate_terrain"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#lognormal_density",children:"lognormal_density"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#lognormal_rnd",children:"lognormal_rnd"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#lognormal_trunc_rnd",children:"lognormal_trunc_rnd"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#poisson",children:"poisson"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#rnd",children:"rnd"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#rnd_choice",children:"rnd_choice"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#sample",children:"sample"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#shuffle",children:"shuffle"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#skew_gauss",children:"skew_gauss"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#truncated_gauss",children:"truncated_gauss"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#weibull_density",children:"weibull_density"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#weibull_rnd",children:"weibull_rnd"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#weibull_trunc_rnd",children:"weibull_trunc_rnd"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"reverseoperators",children:"ReverseOperators"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.a,{href:"OperatorsNR#restore_simulation",children:"restore_simulation"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#restore_simulation_from_file",children:"restore_simulation_from_file"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#save_simulation",children:"save_simulation"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#serialize",children:"serialize"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#serialize_agent",children:"serialize_agent"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"shape",children:"Shape"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.a,{href:"OperatorsAA#arc",children:"arc"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#box",children:"box"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#circle",children:"circle"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#cone",children:"cone"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#cone3d",children:"cone3D"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#cross",children:"cross"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#cube",children:"cube"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#curve",children:"curve"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#cylinder",children:"cylinder"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#ellipse",children:"ellipse"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#elliptical_arc",children:"elliptical_arc"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#envelope",children:"envelope"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#geometry_collection",children:"geometry_collection"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#hexagon",children:"hexagon"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#line",children:"line"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#link",children:"link"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#plan",children:"plan"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#polygon",children:"polygon"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#polyhedron",children:"polyhedron"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#pyramid",children:"pyramid"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#rectangle",children:"rectangle"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#sphere",children:"sphere"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#square",children:"square"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#squircle",children:"squircle"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#teapot",children:"teapot"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#triangle",children:"triangle"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"spatial-operators",children:"Spatial operators"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.a,{href:"OperatorsAA#-",children:"-"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#*",children:"*"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#+",children:"+"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#add_point",children:"add_point"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#agent_closest_to",children:"agent_closest_to"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#agent_farthest_to",children:"agent_farthest_to"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#agents_at_distance",children:"agents_at_distance"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#agents_covering",children:"agents_covering"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#agents_crossing",children:"agents_crossing"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#agents_inside",children:"agents_inside"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#agents_overlapping",children:"agents_overlapping"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#agents_partially_overlapping",children:"agents_partially_overlapping"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#agents_touching",children:"agents_touching"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#angle_between",children:"angle_between"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#any_location_in",children:"any_location_in"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#arc",children:"arc"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#around",children:"around"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#as_4_grid",children:"as_4_grid"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#as_driving_graph",children:"as_driving_graph"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#as_grid",children:"as_grid"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#as_hexagonal_grid",children:"as_hexagonal_grid"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#at_distance",children:"at_distance"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#at_location",children:"at_location"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#box",children:"box"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#centroid",children:"centroid"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#circle",children:"circle"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#clean",children:"clean"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#clean_network",children:"clean_network"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#closest_points_with",children:"closest_points_with"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#closest_to",children:"closest_to"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#cone",children:"cone"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#cone3d",children:"cone3D"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#convex_hull",children:"convex_hull"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#covering",children:"covering"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#covers",children:"covers"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#cross",children:"cross"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#crosses",children:"crosses"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#crossing",children:"crossing"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#crs",children:"crs"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#crs_transform",children:"CRS_transform"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#cube",children:"cube"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#curve",children:"curve"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#cylinder",children:"cylinder"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#direction_between",children:"direction_between"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#disjoint_from",children:"disjoint_from"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#distance_between",children:"distance_between"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#distance_to",children:"distance_to"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#ellipse",children:"ellipse"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#elliptical_arc",children:"elliptical_arc"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#envelope",children:"envelope"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#farthest_point_to",children:"farthest_point_to"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#farthest_to",children:"farthest_to"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#geometry_collection",children:"geometry_collection"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#gini",children:"gini"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#hexagon",children:"hexagon"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#hierarchical_clustering",children:"hierarchical_clustering"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#idw",children:"IDW"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#inside",children:"inside"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#inter",children:"inter"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#intersects",children:"intersects"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#inverse_rotation",children:"inverse_rotation"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#k_nearest_neighbors",children:"k_nearest_neighbors"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#line",children:"line"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#link",children:"link"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#masked_by",children:"masked_by"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#moran",children:"moran"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#neighbors_at",children:"neighbors_at"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#neighbors_of",children:"neighbors_of"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#normalized_rotation",children:"normalized_rotation"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#overlapping",children:"overlapping"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#overlaps",children:"overlaps"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#partially_overlapping",children:"partially_overlapping"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#partially_overlaps",children:"partially_overlaps"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#path_between",children:"path_between"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#path_to",children:"path_to"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#plan",children:"plan"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#points_along",children:"points_along"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#points_at",children:"points_at"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#points_on",children:"points_on"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#polygon",children:"polygon"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#polyhedron",children:"polyhedron"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#pyramid",children:"pyramid"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#rectangle",children:"rectangle"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#rotated_by",children:"rotated_by"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#rotation_composition",children:"rotation_composition"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#round",children:"round"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#scaled_to",children:"scaled_to"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#set_z",children:"set_z"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#simple_clustering_by_distance",children:"simple_clustering_by_distance"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#simplification",children:"simplification"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#skeletonize",children:"skeletonize"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#smooth",children:"smooth"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#sphere",children:"sphere"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#split_at",children:"split_at"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#split_geometry",children:"split_geometry"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#split_lines",children:"split_lines"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#square",children:"square"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#squircle",children:"squircle"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#teapot",children:"teapot"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#to_gama_crs",children:"to_GAMA_CRS"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#to_rectangles",children:"to_rectangles"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#to_segments",children:"to_segments"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#to_squares",children:"to_squares"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#to_sub_geometries",children:"to_sub_geometries"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#touches",children:"touches"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#touching",children:"touching"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#towards",children:"towards"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#transformed_by",children:"transformed_by"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#translated_by",children:"translated_by"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#triangle",children:"triangle"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#triangulate",children:"triangulate"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#union",children:"union"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#using",children:"using"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#voronoi",children:"voronoi"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#with_precision",children:"with_precision"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#without_holes",children:"without_holes"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"spatial-properties-operators",children:"Spatial properties operators"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.a,{href:"OperatorsBC#covers",children:"covers"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#crosses",children:"crosses"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#intersects",children:"intersects"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#partially_overlaps",children:"partially_overlaps"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#touches",children:"touches"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"spatial-queries-operators",children:"Spatial queries operators"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.a,{href:"OperatorsAA#agent_closest_to",children:"agent_closest_to"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#agent_farthest_to",children:"agent_farthest_to"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#agents_at_distance",children:"agents_at_distance"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#agents_covering",children:"agents_covering"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#agents_crossing",children:"agents_crossing"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#agents_inside",children:"agents_inside"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#agents_overlapping",children:"agents_overlapping"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#agents_partially_overlapping",children:"agents_partially_overlapping"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#agents_touching",children:"agents_touching"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#at_distance",children:"at_distance"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#closest_to",children:"closest_to"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#covering",children:"covering"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#crossing",children:"crossing"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#farthest_to",children:"farthest_to"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#inside",children:"inside"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#neighbors_at",children:"neighbors_at"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#neighbors_of",children:"neighbors_of"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#overlapping",children:"overlapping"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#partially_overlapping",children:"partially_overlapping"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#touching",children:"touching"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"spatial-relations-operators",children:"Spatial relations operators"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.a,{href:"OperatorsDH#direction_between",children:"direction_between"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#distance_between",children:"distance_between"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#distance_to",children:"distance_to"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#path_between",children:"path_between"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#path_to",children:"path_to"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#towards",children:"towards"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"spatial-statistical-operators",children:"Spatial statistical operators"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.a,{href:"OperatorsDH#hierarchical_clustering",children:"hierarchical_clustering"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#k_nearest_neighbors",children:"k_nearest_neighbors"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#simple_clustering_by_distance",children:"simple_clustering_by_distance"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"spatial-transformations-operators",children:"Spatial transformations operators"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.a,{href:"OperatorsAA#-",children:"-"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#*",children:"*"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#+",children:"+"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#as_4_grid",children:"as_4_grid"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#as_grid",children:"as_grid"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#as_hexagonal_grid",children:"as_hexagonal_grid"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#at_location",children:"at_location"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#clean",children:"clean"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#clean_network",children:"clean_network"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#convex_hull",children:"convex_hull"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#crs_transform",children:"CRS_transform"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#inverse_rotation",children:"inverse_rotation"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#normalized_rotation",children:"normalized_rotation"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#rotated_by",children:"rotated_by"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#rotation_composition",children:"rotation_composition"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#scaled_to",children:"scaled_to"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#simplification",children:"simplification"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#skeletonize",children:"skeletonize"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#smooth",children:"smooth"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#split_geometry",children:"split_geometry"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#split_lines",children:"split_lines"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#to_gama_crs",children:"to_GAMA_CRS"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#to_rectangles",children:"to_rectangles"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#to_segments",children:"to_segments"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#to_squares",children:"to_squares"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#to_sub_geometries",children:"to_sub_geometries"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#transformed_by",children:"transformed_by"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#translated_by",children:"translated_by"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#triangulate",children:"triangulate"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#voronoi",children:"voronoi"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#with_precision",children:"with_precision"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#without_holes",children:"without_holes"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"species-related-operators",children:"Species-related operators"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.a,{href:"OperatorsIM#index_of",children:"index_of"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#last_index_of",children:"last_index_of"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#of_generic_species",children:"of_generic_species"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#of_species",children:"of_species"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"statistical-operators",children:"Statistical operators"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.a,{href:"OperatorsAA#auto_correlation",children:"auto_correlation"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#beta",children:"beta"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#binomial_coeff",children:"binomial_coeff"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#binomial_complemented",children:"binomial_complemented"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#binomial_sum",children:"binomial_sum"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#build",children:"build"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#chi_square",children:"chi_square"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#chi_square_complemented",children:"chi_square_complemented"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#correlation",children:"correlation"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#covariance",children:"covariance"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#dbscan",children:"dbscan"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#distribution_of",children:"distribution_of"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#distribution2d_of",children:"distribution2d_of"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#dtw",children:"dtw"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#durbin_watson",children:"durbin_watson"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#frequency_of",children:"frequency_of"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#gamma",children:"gamma"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#gamma_distribution",children:"gamma_distribution"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#gamma_distribution_complemented",children:"gamma_distribution_complemented"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#geometric_mean",children:"geometric_mean"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#gini",children:"gini"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#harmonic_mean",children:"harmonic_mean"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#hierarchical_clustering",children:"hierarchical_clustering"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#incomplete_beta",children:"incomplete_beta"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#incomplete_gamma",children:"incomplete_gamma"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#incomplete_gamma_complement",children:"incomplete_gamma_complement"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#k_nearest_neighbors",children:"k_nearest_neighbors"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#kmeans",children:"kmeans"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#kurtosis",children:"kurtosis"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#log_gamma",children:"log_gamma"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#max",children:"max"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#mean",children:"mean"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#mean_deviation",children:"mean_deviation"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#median",children:"median"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#min",children:"min"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#moment",children:"moment"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#moran",children:"moran"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#morrisanalysis",children:"morrisAnalysis"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#mul",children:"mul"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#normal_area",children:"normal_area"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#normal_density",children:"normal_density"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#normal_inverse",children:"normal_inverse"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#predict",children:"predict"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#pvalue_for_fstat",children:"pValue_for_fStat"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#pvalue_for_tstat",children:"pValue_for_tStat"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#quantile",children:"quantile"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#quantile_inverse",children:"quantile_inverse"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#rank_interpolated",children:"rank_interpolated"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#residuals",children:"residuals"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#rms",children:"rms"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#rsquare",children:"rSquare"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#simple_clustering_by_distance",children:"simple_clustering_by_distance"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#skewness",children:"skewness"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#sobolanalysis",children:"sobolAnalysis"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#split",children:"split"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#split_in",children:"split_in"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#split_using",children:"split_using"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#standard_deviation",children:"standard_deviation"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#student_area",children:"student_area"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#student_t_inverse",children:"student_t_inverse"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#sum",children:"sum"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#t_test",children:"t_test"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#variance",children:"variance"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"strings-related-operators",children:"Strings-related operators"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.a,{href:"OperatorsAA#+",children:"+"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#%3C",children:"<"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#%3C=",children:"<="}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#%3E",children:">"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#%3E=",children:">="}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#at",children:"at"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#capitalize",children:"capitalize"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#char",children:"char"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#contains",children:"contains"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#contains_all",children:"contains_all"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#contains_any",children:"contains_any"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#copy_between",children:"copy_between"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#date",children:"date"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#empty",children:"empty"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#first",children:"first"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#in",children:"in"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#indented_by",children:"indented_by"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#index_of",children:"index_of"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#is_number",children:"is_number"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#last",children:"last"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#last_index_of",children:"last_index_of"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#length",children:"length"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#lower_case",children:"lower_case"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#regex_matches",children:"regex_matches"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#replace",children:"replace"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#replace_regex",children:"replace_regex"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#reverse",children:"reverse"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#sample",children:"sample"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#shuffle",children:"shuffle"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#split_with",children:"split_with"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#string",children:"string"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#upper_case",children:"upper_case"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"submodel",children:"SubModel"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.a,{href:"OperatorsIM#load_sub_model",children:"load_sub_model"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"system",children:"System"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.a,{href:"OperatorsAA#.",children:"."}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#choose",children:"choose"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#command",children:"command"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#copy",children:"copy"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#copy_from_clipboard",children:"copy_from_clipboard"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#copy_to_clipboard",children:"copy_to_clipboard"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#copy_to_clipboard",children:"copy_to_clipboard"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#dead",children:"dead"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#enter",children:"enter"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#eval_gaml",children:"eval_gaml"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#every",children:"every"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#is_error",children:"is_error"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#is_reachable",children:"is_reachable"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#is_warning",children:"is_warning"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#play_sound",children:"play_sound"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#user_confirm",children:"user_confirm"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#user_input_dialog",children:"user_input_dialog"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#wizard",children:"wizard"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#wizard_page",children:"wizard_page"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"time-related-operators",children:"Time-related operators"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.a,{href:"OperatorsDH#date",children:"date"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#string",children:"string"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"types-related-operators",children:"Types-related operators"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.a,{href:"OperatorsAA#action",children:"action"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#agent",children:"agent"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#attributes",children:"attributes"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#bdiplan",children:"BDIPlan"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#bool",children:"bool"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#container",children:"container"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#conversation",children:"conversation"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#directory",children:"directory"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#emotion",children:"emotion"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#file",children:"file"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#float",children:"float"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#gaml_type",children:"gaml_type"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#gen_population_generator",children:"gen_population_generator"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#gen_range",children:"gen_range"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#geometry",children:"geometry"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#graph",children:"graph"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#int",children:"int"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#kml",children:"kml"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#list",children:"list"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#map",children:"map"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#matrix",children:"matrix"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#mental_state",children:"mental_state"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#message",children:"message"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#norm",children:"Norm"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#pair",children:"pair"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#path",children:"path"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#point",children:"point"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#predicate",children:"predicate"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#regression",children:"regression"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#rgb",children:"rgb"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#sanction",children:"Sanction"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#skill",children:"skill"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#social_link",children:"social_link"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#species",children:"species"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#topology",children:"topology"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#unknown",children:"unknown"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"user-control-operators",children:"User control operators"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.a,{href:"OperatorsBC#choose",children:"choose"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#enter",children:"enter"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#user_confirm",children:"user_confirm"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#user_input_dialog",children:"user_input_dialog"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#wizard",children:"wizard"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#wizard_page",children:"wizard_page"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h2,{id:"operators",children:"Operators"}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"bdiplan",children:(0,i.jsx)(r.code,{children:"BDIPlan"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"BDIPlan"})})," (",(0,i.jsx)(r.code,{children:"any"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"BDIPlan"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"casts the operand in a BDIPlan object."}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"before",children:(0,i.jsx)(r.code,{children:"before"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-1",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"before"})})," (",(0,i.jsx)(r.code,{children:"date"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"bool"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"any expression"})," ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"before"})})," ",(0,i.jsx)(r.code,{children:"date"})," ---\x3e  ",(0,i.jsx)(r.code,{children:"bool"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"before"})})," (",(0,i.jsx)(r.code,{children:"any expression"})," , ",(0,i.jsx)(r.code,{children:"date"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"bool"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-1",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"Returns true if the current_date of the model is strictly before the date passed in argument. Synonym of 'current_date < argument'"}),"\n",(0,i.jsx)(r.h4,{id:"examples",children:"Examples:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"reflex when: before(starting_date) {} \t// this reflex will never be run\n"})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"beta",children:(0,i.jsx)(r.code,{children:"beta"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-2",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"float"})," ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"beta"})})," ",(0,i.jsx)(r.code,{children:"float"})," ---\x3e  ",(0,i.jsx)(r.code,{children:"float"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"beta"})})," (",(0,i.jsx)(r.code,{children:"float"})," , ",(0,i.jsx)(r.code,{children:"float"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"float"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-2",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"Returns the beta function with arguments a, b."}),"\n",(0,i.jsx)(r.h4,{id:"comment",children:"Comment:"}),"\n",(0,i.jsx)(r.p,{children:"Checked on R. beta(4,5)"}),"\n",(0,i.jsx)(r.h4,{id:"examples-1",children:"Examples:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"float var0 <- beta(4,5) with_precision(4); // var0 equals 0.0036\n"})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"beta_index",children:(0,i.jsx)(r.code,{children:"beta_index"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-3",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"beta_index"})})," (",(0,i.jsx)(r.code,{children:"graph"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"float"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-3",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"returns the beta index of the graph (Measures the level of connectivity in a graph and is expressed by the relationship between the number of links (e) over the number of nodes (v) : beta = e/v."}),"\n",(0,i.jsx)(r.h4,{id:"examples-2",children:"Examples:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"graph graphEpidemio <- graph([]); \nfloat var1 <- beta_index(graphEpidemio); // var1 equals the beta index of the graph\n"})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"See also:"})," ",(0,i.jsx)(r.a,{href:"OperatorsAA#alpha_index",children:"alpha_index"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#gamma_index",children:"gamma_index"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#nb_cycles",children:"nb_cycles"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#connectivity_index",children:"connectivity_index"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"between",children:(0,i.jsx)(r.code,{children:"between"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-4",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"date"})," ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"between"})})," ",(0,i.jsx)(r.code,{children:"date"})," ---\x3e  ",(0,i.jsx)(r.code,{children:"bool"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"between"})})," (",(0,i.jsx)(r.code,{children:"date"})," , ",(0,i.jsx)(r.code,{children:"date"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"bool"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"between"})})," (",(0,i.jsx)(r.code,{children:"date"}),", ",(0,i.jsx)(r.code,{children:"date"}),", ",(0,i.jsx)(r.code,{children:"date"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"bool"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"between"})})," (",(0,i.jsx)(r.code,{children:"int"}),", ",(0,i.jsx)(r.code,{children:"int"}),", ",(0,i.jsx)(r.code,{children:"int"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"bool"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"between"})})," (",(0,i.jsx)(r.code,{children:"any expression"}),", ",(0,i.jsx)(r.code,{children:"date"}),", ",(0,i.jsx)(r.code,{children:"date"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"bool"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"between"})})," (",(0,i.jsx)(r.code,{children:"float"}),", ",(0,i.jsx)(r.code,{children:"float"}),", ",(0,i.jsx)(r.code,{children:"float"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"bool"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-4",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"returns true the first operand is bigger than the second operand and smaller than the third operand"}),"\n",(0,i.jsx)(r.h4,{id:"special-cases",children:"Special cases:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"returns true if the first operand is between the two dates passed in arguments (both exclusive). Can be combined with 'every' to express a frequency between two dates"}),"\n"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"bool var0 <- (date('2016-01-01') between(date('2000-01-01'), date('2020-02-02'))); // var0 equals true \n// will return true every new day between these two dates, taking the first one as the starting point \nevery(#day between(date('2000-01-01'), date('2020-02-02'))) \n"})}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"With only 2 date operands, it returns true if the current_date is between the 2 date  operands."}),"\n"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"bool var3 <- between(date('2000-01-01'), date('2020-02-02')); // var3 equals false\n"})}),"\n",(0,i.jsx)(r.h4,{id:"examples-3",children:"Examples:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"bool var4 <- between(5, 1, 10); // var4 equals true \nbool var5 <- between(5.0, 1.0, 10.0); // var5 equals true\n"})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"betweenness_centrality",children:(0,i.jsx)(r.code,{children:"betweenness_centrality"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-5",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"betweenness_centrality"})})," (",(0,i.jsx)(r.code,{children:"graph"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"map"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-5",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"returns a map containing for each vertex (key), its betweenness centrality (value): number of shortest paths passing through each vertex"}),"\n",(0,i.jsx)(r.h4,{id:"examples-4",children:"Examples:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"graph graphEpidemio <- graph([]); \nmap var1 <- betweenness_centrality(graphEpidemio); // var1 equals the betweenness centrality index of the graph\n"})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"biggest_cliques_of",children:(0,i.jsx)(r.code,{children:"biggest_cliques_of"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-6",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"biggest_cliques_of"})})," (",(0,i.jsx)(r.code,{children:"graph"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"list<list>"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-6",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"returns the biggest cliques of a graph using the Bron-Kerbosch clique detection algorithm"}),"\n",(0,i.jsx)(r.h4,{id:"examples-5",children:"Examples:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"graph my_graph <- graph([]); \nlist<list> var1 <- biggest_cliques_of (my_graph); // var1 equals the list of the biggest cliques as list\n"})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"See also:"})," ",(0,i.jsx)(r.a,{href:"OperatorsIM#maximal_cliques_of",children:"maximal_cliques_of"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"binomial",children:(0,i.jsx)(r.code,{children:"binomial"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-7",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"int"})," ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"binomial"})})," ",(0,i.jsx)(r.code,{children:"float"})," ---\x3e  ",(0,i.jsx)(r.code,{children:"int"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"binomial"})})," (",(0,i.jsx)(r.code,{children:"int"})," , ",(0,i.jsx)(r.code,{children:"float"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"int"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-7",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"A value from a random variable following a binomial distribution. The operands represent the number of experiments n and the success probability p."}),"\n",(0,i.jsx)(r.h4,{id:"comment-1",children:"Comment:"}),"\n",(0,i.jsx)(r.p,{children:"The binomial distribution is the discrete probability distribution of the number of successes in a sequence of n independent yes/no experiments, each of which yields success with probability p, cf. Binomial distribution on Wikipedia."}),"\n",(0,i.jsx)(r.h4,{id:"examples-6",children:"Examples:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"int var0 <- binomial(15,0.6); // var0 equals a random positive integer\n"})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"See also:"})," ",(0,i.jsx)(r.a,{href:"OperatorsDH#gamma_rnd",children:"gamma_rnd"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#gauss_rnd",children:"gauss_rnd"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#lognormal_rnd",children:"lognormal_rnd"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#poisson",children:"poisson"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#rnd",children:"rnd"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#skew_gauss",children:"skew_gauss"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#truncated_gauss",children:"truncated_gauss"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#weibull_rnd",children:"weibull_rnd"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"binomial_coeff",children:(0,i.jsx)(r.code,{children:"binomial_coeff"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-8",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"int"})," ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"binomial_coeff"})})," ",(0,i.jsx)(r.code,{children:"int"})," ---\x3e  ",(0,i.jsx)(r.code,{children:"float"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"binomial_coeff"})})," (",(0,i.jsx)(r.code,{children:"int"})," , ",(0,i.jsx)(r.code,{children:"int"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"float"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-8",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"Returns n choose k as a double. Note the integerization of the double return value."}),"\n",(0,i.jsx)(r.h4,{id:"examples-7",children:"Examples:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"float var0 <- binomial_coeff(10,2); // var0 equals 45\n"})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"binomial_complemented",children:(0,i.jsx)(r.code,{children:"binomial_complemented"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-9",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"binomial_complemented"})})," (",(0,i.jsx)(r.code,{children:"int"}),", ",(0,i.jsx)(r.code,{children:"int"}),", ",(0,i.jsx)(r.code,{children:"float"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"float"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-9",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"Returns the sum of the terms k+1 through n of the Binomial probability density, where n is the number of trials and P is the probability of success in the range 0 to 1."}),"\n",(0,i.jsx)(r.h4,{id:"examples-8",children:"Examples:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"float var0 <- binomial_complemented(10,5,0.5) with_precision(2); // var0 equals 0.38\n"})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"binomial_sum",children:(0,i.jsx)(r.code,{children:"binomial_sum"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-10",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"binomial_sum"})})," (",(0,i.jsx)(r.code,{children:"int"}),", ",(0,i.jsx)(r.code,{children:"int"}),", ",(0,i.jsx)(r.code,{children:"float"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"float"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-10",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"Returns the sum of the terms 0 through k of the Binomial probability density, where n is the number of trials and p is the probability of success in the range 0 to 1."}),"\n",(0,i.jsx)(r.h4,{id:"examples-9",children:"Examples:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"float var0 <- binomial_sum(5,10,0.5) with_precision(2); // var0 equals 0.62\n"})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"blend",children:(0,i.jsx)(r.code,{children:"blend"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-11",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"rgb"})," ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"blend"})})," ",(0,i.jsx)(r.code,{children:"rgb"})," ---\x3e  ",(0,i.jsx)(r.code,{children:"rgb"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"blend"})})," (",(0,i.jsx)(r.code,{children:"rgb"})," , ",(0,i.jsx)(r.code,{children:"rgb"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"rgb"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"blend"})})," (",(0,i.jsx)(r.code,{children:"rgb"}),", ",(0,i.jsx)(r.code,{children:"rgb"}),", ",(0,i.jsx)(r.code,{children:"float"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"rgb"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-11",children:"Result:"}),"\n",(0,i.jsxs)(r.p,{children:["Blend two colors with an optional ratio (c1 ",(0,i.jsx)(r.code,{children:"*"})," r + c2 ",(0,i.jsx)(r.code,{children:"*"})," (1 - r)) between 0 and 1"]}),"\n",(0,i.jsx)(r.h4,{id:"special-cases-1",children:"Special cases:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"If the ratio is omitted, an even blend is done"}),"\n"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"rgb var0 <- blend(#red, #blue); // var0 equals to a color very close to the purple\n"})}),"\n",(0,i.jsx)(r.h4,{id:"examples-10",children:"Examples:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"rgb var1 <- blend(#red, #blue, 0.3); // var1 equals to a color between the purple and the blue\n"})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"See also:"})," ",(0,i.jsx)(r.a,{href:"OperatorsNR#rgb",children:"rgb"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#hsb",children:"hsb"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"blend-1",children:(0,i.jsx)(r.code,{children:"blend"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-12",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"blend"})})," (",(0,i.jsx)(r.code,{children:"image"}),", ",(0,i.jsx)(r.code,{children:"image"}),", ",(0,i.jsx)(r.code,{children:"float"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"image"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-12",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"Blend two images with an optional ratio between 0 and 1 (determines the transparency of the second image, applied as an overlay to the first). The size of the resulting image is that of the first parameter. The original image is left untouched"}),"\n",(0,i.jsx)(r.h4,{id:"examples-11",children:"Examples:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"image var0 <- blend(img1, img2, 0.3); // var0 equals to a composed image with the two\n"})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"blurred",children:(0,i.jsx)(r.code,{children:"blurred"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-13",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"blurred"})})," (",(0,i.jsx)(r.code,{children:"image"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"image"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-13",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"Application of a blurrying filter to the image passed in parameter. This operation can be applied multiple times. The original image is left untouched"}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"bool",children:(0,i.jsx)(r.code,{children:"bool"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-14",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"bool"})})," (",(0,i.jsx)(r.code,{children:"any"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"bool"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-14",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"casts the operand in a bool object."}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"box",children:(0,i.jsx)(r.code,{children:"box"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-15",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"box"})})," (",(0,i.jsx)(r.code,{children:"point"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"geometry"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"box"})})," (",(0,i.jsx)(r.code,{children:"float"}),", ",(0,i.jsx)(r.code,{children:"float"}),", ",(0,i.jsx)(r.code,{children:"float"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"geometry"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-15",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"A box geometry which side sizes are given by the operands."}),"\n",(0,i.jsx)(r.h4,{id:"comment-2",children:"Comment:"}),"\n",(0,i.jsx)(r.p,{children:"the center of the box is by default the location of the current agent in which has been called this operator.the center of the box is by default the location of the current agent in which has been called this operator."}),"\n",(0,i.jsx)(r.h4,{id:"special-cases-2",children:"Special cases:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"returns nil if the operand is nil."}),"\n",(0,i.jsx)(r.li,{children:"returns nil if the operand is nil."}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"examples-12",children:"Examples:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"geometry var0 <- box({10, 5 , 5}); // var0 equals a geometry as a rectangle with width = 10, height = 5 depth= 5. \nfloat var1 <-  (box({10, 10 , 5}) at_location point(50,50,0)).location.y; // var1 equals 50.0 \ngeometry var2 <- box(10, 5 , 5); // var2 equals a geometry as a rectangle with width = 10, height = 5 depth= 5.\n"})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"See also:"})," ",(0,i.jsx)(r.a,{href:"OperatorsAA#around",children:"around"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#circle",children:"circle"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#sphere",children:"sphere"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#cone",children:"cone"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#line",children:"line"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#link",children:"link"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#norm",children:"norm"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#point",children:"point"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#polygon",children:"polygon"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#polyline",children:"polyline"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#square",children:"square"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#cube",children:"cube"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#triangle",children:"triangle"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"brewer_colors",children:(0,i.jsx)(r.code,{children:"brewer_colors"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-16",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"brewer_colors"})})," (",(0,i.jsx)(r.code,{children:"string"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"list<rgb>"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"string"})," ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"brewer_colors"})})," ",(0,i.jsx)(r.code,{children:"int"})," ---\x3e  ",(0,i.jsx)(r.code,{children:"list<rgb>"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"brewer_colors"})})," (",(0,i.jsx)(r.code,{children:"string"})," , ",(0,i.jsx)(r.code,{children:"int"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"list<rgb>"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-16",children:"Result:"}),"\n",(0,i.jsxs)(r.p,{children:["Build a list of colors of a given type (see website ",(0,i.jsx)(r.a,{href:"http://colorbrewer2.org/",children:"http://colorbrewer2.org/"}),") with a given number of classes\nBuild a list of colors of a given type (see website ",(0,i.jsx)(r.a,{href:"http://colorbrewer2.org/",children:"http://colorbrewer2.org/"}),"). The list of palettes can be obtained by calling brewer_palettes. This list can be safely modified afterwards (adding or removing colors)"]}),"\n",(0,i.jsx)(r.h4,{id:"examples-13",children:"Examples:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:'list<rgb> var0 <- list<rgb> colors <- brewer_colors("Pastel1", 5);; // var0 equals a list of 5 sequential colors in the palette named \'Pastel1\'. The list of palettes can be obtained by calling brewer_palettes \nlist<rgb> var1 <- list<rgb> colors <- brewer_colors("OrRd");; // var1 equals a list of 6 blue colors\n'})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"See also:"})," ",(0,i.jsx)(r.a,{href:"OperatorsBC#brewer_palettes",children:"brewer_palettes"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"brewer_palettes",children:(0,i.jsx)(r.code,{children:"brewer_palettes"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-17",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"brewer_palettes"})})," (",(0,i.jsx)(r.code,{children:"int"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"list<string>"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"int"})," ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"brewer_palettes"})})," ",(0,i.jsx)(r.code,{children:"int"})," ---\x3e  ",(0,i.jsx)(r.code,{children:"list<string>"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"brewer_palettes"})})," (",(0,i.jsx)(r.code,{children:"int"})," , ",(0,i.jsx)(r.code,{children:"int"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"list<string>"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-17",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"returns the list a palette with a given min number of classes and max number of classes)\nreturns the list a palette with a given min number of classes)"}),"\n",(0,i.jsx)(r.h4,{id:"examples-14",children:"Examples:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"list<string> var0 <- list<string> palettes <- brewer_palettes(5,10);; // var0 equals a list of palettes that are composed of a min of 5 colors and a max of 10 colors \nlist<string> var1 <- list<string> palettes <- brewer_palettes(3);; // var1 equals a list of palettes that are composed of a min of 3 colors\n"})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"See also:"})," ",(0,i.jsx)(r.a,{href:"OperatorsBC#brewer_colors",children:"brewer_colors"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"brighter",children:(0,i.jsx)(r.code,{children:"brighter"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-18",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"brighter"})})," (",(0,i.jsx)(r.code,{children:"image"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"image"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-18",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"Used to return an image 10% brigther. This operation can be applied multiple times in a row if greater than 10% changes in brightness are desired."}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"buffer",children:(0,i.jsx)(r.code,{children:"buffer"})}),"\n",(0,i.jsxs)(r.p,{children:["Same signification as ",(0,i.jsx)(r.a,{href:"OperatorsAA#+",children:"+"})]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"build",children:(0,i.jsx)(r.code,{children:"build"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-19",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"build"})})," (",(0,i.jsx)(r.code,{children:"matrix"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"regression"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-19",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"returns the regression build from the matrix data (a row = an instance, the first value of each line is the y value) while using the given ordinary least squares method. Usage: build(data)"}),"\n",(0,i.jsx)(r.h4,{id:"examples-15",children:"Examples:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"build(matrix([[1.0,2.0,3.0,4.0],[2.0,3.0,4.0,2.0]]))\n"})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"capitalize",children:(0,i.jsx)(r.code,{children:"capitalize"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-20",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"capitalize"})})," (",(0,i.jsx)(r.code,{children:"string"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"string"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-20",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"Returns a string where the first letter is capitalized"}),"\n",(0,i.jsx)(r.h4,{id:"examples-16",children:"Examples:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"string var0 <- capitalize(\"abc\"); // var0 equals 'Abc'\n"})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"See also:"})," ",(0,i.jsx)(r.a,{href:"OperatorsIM#lower_case",children:"lower_case"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#upper_case",children:"upper_case"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"cartesian_product",children:(0,i.jsx)(r.code,{children:"cartesian_product"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-21",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"cartesian_product"})})," (",(0,i.jsx)(r.code,{children:"list"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"unknown"})]}),"\n"]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"ceil",children:(0,i.jsx)(r.code,{children:"ceil"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-22",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"ceil"})})," (",(0,i.jsx)(r.code,{children:"float"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"float"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-21",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"Maps the operand to the smallest following integer, i.e. the smallest integer not less than x."}),"\n",(0,i.jsx)(r.h4,{id:"examples-17",children:"Examples:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"float var0 <- ceil(3); // var0 equals 3.0 \nfloat var1 <- ceil(3.5); // var1 equals 4.0 \nfloat var2 <- ceil(-4.7); // var2 equals -4.0\n"})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"See also:"})," ",(0,i.jsx)(r.a,{href:"OperatorsDH#floor",children:"floor"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#round",children:"round"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"cell_at",children:(0,i.jsx)(r.code,{children:"cell_at"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-23",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"field"})," ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"cell_at"})})," ",(0,i.jsx)(r.code,{children:"point"})," ---\x3e  ",(0,i.jsx)(r.code,{children:"geometry"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"cell_at"})})," (",(0,i.jsx)(r.code,{children:"field"})," , ",(0,i.jsx)(r.code,{children:"point"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"geometry"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"cell_at"})})," (",(0,i.jsx)(r.code,{children:"field"}),", ",(0,i.jsx)(r.code,{children:"int"}),", ",(0,i.jsx)(r.code,{children:"int"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"geometry"})]}),"\n"]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"cells_in",children:(0,i.jsx)(r.code,{children:"cells_in"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-24",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"field"})," ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"cells_in"})})," ",(0,i.jsx)(r.code,{children:"geometry"})," ---\x3e  ",(0,i.jsx)(r.code,{children:"list<geometry>"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"cells_in"})})," (",(0,i.jsx)(r.code,{children:"field"})," , ",(0,i.jsx)(r.code,{children:"geometry"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"list<geometry>"})]}),"\n"]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"cells_overlapping",children:(0,i.jsx)(r.code,{children:"cells_overlapping"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-25",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"field"})," ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"cells_overlapping"})})," ",(0,i.jsx)(r.code,{children:"geometry"})," ---\x3e  ",(0,i.jsx)(r.code,{children:"list<geometry>"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"cells_overlapping"})})," (",(0,i.jsx)(r.code,{children:"field"})," , ",(0,i.jsx)(r.code,{children:"geometry"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"list<geometry>"})]}),"\n"]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"centroid",children:(0,i.jsx)(r.code,{children:"centroid"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-26",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"centroid"})})," (",(0,i.jsx)(r.code,{children:"geometry"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"point"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-22",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"Centroid (weighted sum of the centroids of a decomposition of the area into triangles) of the operand-geometry. Can be different to the location of the geometry"}),"\n",(0,i.jsx)(r.h4,{id:"examples-18",children:"Examples:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"point var0 <- centroid(world); // var0 equals the centroid of the square, for example : {50.0,50.0}.\n"})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"See also:"})," ",(0,i.jsx)(r.a,{href:"OperatorsAA#any_location_in",children:"any_location_in"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#closest_points_with",children:"closest_points_with"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#farthest_point_to",children:"farthest_point_to"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#points_at",children:"points_at"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"char",children:(0,i.jsx)(r.code,{children:"char"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-27",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"char"})})," (",(0,i.jsx)(r.code,{children:"int"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"string"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"special-cases-3",children:"Special cases:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"converts ACSII integer value to character"}),"\n"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"string var0 <- char (34); // var0 equals '\"'\n"})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"chi_square",children:(0,i.jsx)(r.code,{children:"chi_square"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-28",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"float"})," ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"chi_square"})})," ",(0,i.jsx)(r.code,{children:"float"})," ---\x3e  ",(0,i.jsx)(r.code,{children:"float"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"chi_square"})})," (",(0,i.jsx)(r.code,{children:"float"})," , ",(0,i.jsx)(r.code,{children:"float"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"float"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-23",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"Returns the area under the left hand tail (from 0 to x) of the Chi square probability density function with df degrees of freedom."}),"\n",(0,i.jsx)(r.h4,{id:"examples-19",children:"Examples:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"float var0 <- chi_square(20.0,10) with_precision(3); // var0 equals 0.971\n"})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"chi_square_complemented",children:(0,i.jsx)(r.code,{children:"chi_square_complemented"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-29",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"float"})," ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"chi_square_complemented"})})," ",(0,i.jsx)(r.code,{children:"float"})," ---\x3e  ",(0,i.jsx)(r.code,{children:"float"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"chi_square_complemented"})})," (",(0,i.jsx)(r.code,{children:"float"})," , ",(0,i.jsx)(r.code,{children:"float"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"float"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-24",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"Returns the area under the right hand tail (from x to infinity) of the Chi square probability density function with df degrees of freedom."}),"\n",(0,i.jsx)(r.h4,{id:"examples-20",children:"Examples:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"float var0 <- chi_square_complemented(2,10) with_precision(3); // var0 equals 0.996\n"})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"choose",children:(0,i.jsx)(r.code,{children:"choose"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-30",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"choose"})})," (",(0,i.jsx)(r.code,{children:"string"}),", ",(0,i.jsx)(r.code,{children:"any GAML type"}),", ",(0,i.jsx)(r.code,{children:"unknown"}),", ",(0,i.jsx)(r.code,{children:"list"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"unknown"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-25",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"Allows the user to choose a value by specifying a title, a type, and a list of possible values"}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"circle",children:(0,i.jsx)(r.code,{children:"circle"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-31",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"circle"})})," (",(0,i.jsx)(r.code,{children:"float"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"geometry"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"float"})," ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"circle"})})," ",(0,i.jsx)(r.code,{children:"point"})," ---\x3e  ",(0,i.jsx)(r.code,{children:"geometry"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"circle"})})," (",(0,i.jsx)(r.code,{children:"float"})," , ",(0,i.jsx)(r.code,{children:"point"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"geometry"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-26",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"A circle geometry which radius is equal to the operand."}),"\n",(0,i.jsx)(r.h4,{id:"comment-3",children:"Comment:"}),"\n",(0,i.jsx)(r.p,{children:"the center of the circle is by default the location of the current agent in which has been called this operator."}),"\n",(0,i.jsx)(r.h4,{id:"special-cases-4",children:"Special cases:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"returns a point if the radius operand is lower or equal to 0."}),"\n",(0,i.jsx)(r.li,{children:"When circle is used with 2 operands, the second one is the center of the created circle."}),"\n"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"geometry var1 <- circle(10,{80,30}); // var1 equals a geometry as a circle of radius 10, the center will be in the location {80,30}.\n"})}),"\n",(0,i.jsx)(r.h4,{id:"examples-21",children:"Examples:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"geometry var0 <- circle(10); // var0 equals a geometry as a circle of radius 10.\n"})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"See also:"})," ",(0,i.jsx)(r.a,{href:"OperatorsAA#around",children:"around"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#cone",children:"cone"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#line",children:"line"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#link",children:"link"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#norm",children:"norm"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#point",children:"point"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#polygon",children:"polygon"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#polyline",children:"polyline"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#rectangle",children:"rectangle"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#square",children:"square"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#triangle",children:"triangle"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"clean",children:(0,i.jsx)(r.code,{children:"clean"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-32",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"clean"})})," (",(0,i.jsx)(r.code,{children:"geometry"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"geometry"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-27",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"A geometry corresponding to the cleaning of the operand (geometry, agent, point)"}),"\n",(0,i.jsx)(r.h4,{id:"comment-4",children:"Comment:"}),"\n",(0,i.jsx)(r.p,{children:"The cleaning corresponds to a buffer with a distance of 0.0"}),"\n",(0,i.jsx)(r.h4,{id:"examples-22",children:"Examples:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"geometry var0 <- clean(self); // var0 equals returns the geometry resulting from the cleaning of the geometry of the agent applying the operator.\n"})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"clean_network",children:(0,i.jsx)(r.code,{children:"clean_network"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-33",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"clean_network"})})," (",(0,i.jsx)(r.code,{children:"list<geometry>"}),", ",(0,i.jsx)(r.code,{children:"float"}),", ",(0,i.jsx)(r.code,{children:"bool"}),", ",(0,i.jsx)(r.code,{children:"bool"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"list<geometry>"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-28",children:"Result:"}),"\n",(0,i.jsxs)(r.p,{children:["A list of polylines corresponding to the cleaning of the first operand (list of polyline geometry or agents), considering the tolerance distance given by the second operand; the third operator is used to define if the operator should as well split the lines at their intersections(true to split the lines); the last operandis used to specify if the operator should as well keep only the main connected component of the network. Usage: clean_network(lines",":list"," of geometries or agents, tolerance: float, split_lines: bool, keepMainConnectedComponent: bool)"]}),"\n",(0,i.jsx)(r.h4,{id:"comment-5",children:"Comment:"}),"\n",(0,i.jsx)(r.p,{children:"The cleaned set of polylines"}),"\n",(0,i.jsx)(r.h4,{id:"examples-23",children:"Examples:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"list<geometry> var0 <- clean_network(my_road_shapefile.contents, 1.0, true, false); // var0 equals returns the list of polulines resulting from the cleaning of the geometry of the agent applying the operator with a tolerance of 1m, and splitting the lines at their intersections. \nlist<geometry> var1 <- clean_network([line({10,10}, {20,20}), line({10,20},{20,10})],3.0,true,false); // var1 equals [line({10.0,20.0,0.0},{15.0,15.0,0.0}),line({15.0,15.0,0.0},{20.0,10.0,0.0}), line({10.0,10.0,0.0},{15.0,15.0,0.0}), line({15.0,15.0,0.0},{20.0,20.0,0.0})]\n"})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"clipped_with",children:(0,i.jsx)(r.code,{children:"clipped_with"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-34",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"clipped_with"})})," (",(0,i.jsx)(r.code,{children:"image"}),", ",(0,i.jsx)(r.code,{children:"int"}),", ",(0,i.jsx)(r.code,{children:"int"}),", ",(0,i.jsx)(r.code,{children:"int"}),", ",(0,i.jsx)(r.code,{children:"int"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"image"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-29",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"Used to crop the given image using a rectangle starting at the top-left x, y coordinates and expanding using the width and height. If one of the dimensions of the resulting image is 0, of if they are equal to that of the given image, returns it.  The original image is left untouched"}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"closest_points_with",children:(0,i.jsx)(r.code,{children:"closest_points_with"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-35",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"geometry"})," ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"closest_points_with"})})," ",(0,i.jsx)(r.code,{children:"geometry"})," ---\x3e  ",(0,i.jsx)(r.code,{children:"list<point>"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"closest_points_with"})})," (",(0,i.jsx)(r.code,{children:"geometry"})," , ",(0,i.jsx)(r.code,{children:"geometry"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"list<point>"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-30",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"A list of two closest points between the two geometries."}),"\n",(0,i.jsx)(r.h4,{id:"examples-24",children:"Examples:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"list<point> var0 <- geom1 closest_points_with(geom2); // var0 equals [pt1, pt2] with pt1 the closest point of geom1 to geom2 and pt1 the closest point of geom2 to geom1\n"})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"See also:"})," ",(0,i.jsx)(r.a,{href:"OperatorsAA#any_location_in",children:"any_location_in"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#any_point_in",children:"any_point_in"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#farthest_point_to",children:"farthest_point_to"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#points_at",children:"points_at"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"closest_to",children:(0,i.jsx)(r.code,{children:"closest_to"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-36",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"container<unknown,geometry>"})," ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"closest_to"})})," ",(0,i.jsx)(r.code,{children:"geometry"})," ---\x3e  ",(0,i.jsx)(r.code,{children:"geometry"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"closest_to"})})," (",(0,i.jsx)(r.code,{children:"container<unknown,geometry>"})," , ",(0,i.jsx)(r.code,{children:"geometry"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"geometry"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"closest_to"})})," (",(0,i.jsx)(r.code,{children:"container<unknown,geometry>"}),", ",(0,i.jsx)(r.code,{children:"geometry"}),", ",(0,i.jsx)(r.code,{children:"int"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"list<geometry>"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-31",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"The N agents or geometries among the left-operand list of agents, species or meta-population (addition of species), that are the closest to the operand (casted as a geometry).\nAn agent or a geometry among the left-operand list of agents, species or meta-population (addition of species), the closest to the operand (casted as a geometry)."}),"\n",(0,i.jsx)(r.h4,{id:"comment-6",children:"Comment:"}),"\n",(0,i.jsx)(r.p,{children:"the distance is computed in the topology of the calling agent (the agent in which this operator is used), with the distance algorithm specific to the topology.the distance is computed in the topology of the calling agent (the agent in which this operator is used), with the distance algorithm specific to the topology."}),"\n",(0,i.jsx)(r.h4,{id:"examples-25",children:"Examples:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"list<geometry> var0 <- [ag1, ag2, ag3] closest_to(self, 2); // var0 equals return the 2 closest agents among ag1, ag2 and ag3 to the agent applying the operator. \n(species1 + species2) closest_to (self, 5) \ngeometry var2 <- [ag1, ag2, ag3] closest_to(self); // var2 equals return the closest agent among ag1, ag2 and ag3 to the agent applying the operator. \n(species1 + species2) closest_to self\n"})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"See also:"})," ",(0,i.jsx)(r.a,{href:"OperatorsNR#neighbors_at",children:"neighbors_at"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#neighbors_of",children:"neighbors_of"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#inside",children:"inside"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#overlapping",children:"overlapping"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#agents_overlapping",children:"agents_overlapping"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#agents_inside",children:"agents_inside"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#agent_closest_to",children:"agent_closest_to"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"collect",children:(0,i.jsx)(r.code,{children:"collect"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-37",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"container"})," ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"collect"})})," ",(0,i.jsx)(r.code,{children:"any expression"})," ---\x3e  ",(0,i.jsx)(r.code,{children:"list"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"collect"})})," (",(0,i.jsx)(r.code,{children:"container"})," , ",(0,i.jsx)(r.code,{children:"any expression"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"list"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-32",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"returns a new list, in which each element is the evaluation of the right-hand operand."}),"\n",(0,i.jsx)(r.h4,{id:"comment-7",children:"Comment:"}),"\n",(0,i.jsx)(r.p,{children:"collect is similar to accumulate except that accumulate always produces flat lists if the right-hand operand returns a list.In addition, collect can be applied to any container."}),"\n",(0,i.jsx)(r.h4,{id:"special-cases-5",children:"Special cases:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"if the left-hand operand is nil, collect throws an error"}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"examples-26",children:"Examples:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"list var0 <- [1,2,4] collect (each *2); // var0 equals [2,4,8] \nlist var1 <- [1,2,4] collect ([2,4]); // var1 equals [[2,4],[2,4],[2,4]] \nlist var2 <- [1::2, 3::4, 5::6] collect (each + 2); // var2 equals [4,6,8] \nlist var3 <- (list(node) collect (node(each).location.x * 2); // var3 equals the list of nodes with their x multiplied by 2\n"})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"See also:"})," ",(0,i.jsx)(r.a,{href:"OperatorsAA#accumulate",children:"accumulate"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"column_at",children:(0,i.jsx)(r.code,{children:"column_at"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-38",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"matrix<unknown>"})," ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"column_at"})})," ",(0,i.jsx)(r.code,{children:"int"})," ---\x3e  ",(0,i.jsx)(r.code,{children:"list<unknown>"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"column_at"})})," (",(0,i.jsx)(r.code,{children:"matrix<unknown>"})," , ",(0,i.jsx)(r.code,{children:"int"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"list<unknown>"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-33",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"returns the column at a num_col (right-hand operand)"}),"\n",(0,i.jsx)(r.h4,{id:"examples-27",children:"Examples:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:'list<unknown> var0 <- matrix([["el11","el12","el13"],["el21","el22","el23"],["el31","el32","el33"]]) column_at 2; // var0 equals ["el31","el32","el33"]\n'})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"See also:"})," ",(0,i.jsx)(r.a,{href:"OperatorsNR#row_at",children:"row_at"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#rows_list",children:"rows_list"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"columns_list",children:(0,i.jsx)(r.code,{children:"columns_list"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-39",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"columns_list"})})," (",(0,i.jsx)(r.code,{children:"matrix<unknown>"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"list<list<unknown>>"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-34",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"returns a list of the columns of the matrix, with each column as a list of elements"}),"\n",(0,i.jsx)(r.h4,{id:"examples-28",children:"Examples:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:'list<list<unknown>> var0 <- columns_list(matrix([["el11","el12","el13"],["el21","el22","el23"],["el31","el32","el33"]])); // var0 equals [["el11","el12","el13"],["el21","el22","el23"],["el31","el32","el33"]]\n'})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"See also:"})," ",(0,i.jsx)(r.a,{href:"OperatorsNR#rows_list",children:"rows_list"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"command",children:(0,i.jsx)(r.code,{children:"command"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-40",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"command"})})," (",(0,i.jsx)(r.code,{children:"string"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"string"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"string"})," ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"command"})})," ",(0,i.jsx)(r.code,{children:"string"})," ---\x3e  ",(0,i.jsx)(r.code,{children:"string"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"command"})})," (",(0,i.jsx)(r.code,{children:"string"})," , ",(0,i.jsx)(r.code,{children:"string"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"string"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"command"})})," (",(0,i.jsx)(r.code,{children:"string"}),", ",(0,i.jsx)(r.code,{children:"string"}),", ",(0,i.jsx)(r.code,{children:"map<string,string>"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"string"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-35",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"command allows GAMA to issue a system command using the system terminal or shell and to receive a string containing the outcome of the command or script executed. By default, commands are blocking the agent calling them, unless the sequence ' &' is used at the end. In this case, the result of the operator is an empty string. The basic form with only one string in argument uses the directory of the model and does not set any environment variables. Two other forms (with a directory and a map<string, string> of environment variables) are available."}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"cone",children:(0,i.jsx)(r.code,{children:"cone"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-41",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"cone"})})," (",(0,i.jsx)(r.code,{children:"point"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"geometry"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"int"})," ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"cone"})})," ",(0,i.jsx)(r.code,{children:"int"})," ---\x3e  ",(0,i.jsx)(r.code,{children:"geometry"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"cone"})})," (",(0,i.jsx)(r.code,{children:"int"})," , ",(0,i.jsx)(r.code,{children:"int"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"geometry"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-36",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"A cone geometry which min and max angles are given by the operands."}),"\n",(0,i.jsx)(r.h4,{id:"comment-8",children:"Comment:"}),"\n",(0,i.jsx)(r.p,{children:"the center of the cone is by default the location of the current agent in which has been called this operator."}),"\n",(0,i.jsx)(r.h4,{id:"special-cases-6",children:"Special cases:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"returns nil if the operand is nil."}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"examples-29",children:"Examples:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"geometry var0 <- cone(0, 45); // var0 equals a geometry as a cone with min angle is 0 and max angle is 45. \ngeometry var1 <- cone({0, 45}); // var1 equals a geometry as a cone with min angle is 0 and max angle is 45.\n"})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"See also:"})," ",(0,i.jsx)(r.a,{href:"OperatorsAA#around",children:"around"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#circle",children:"circle"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#line",children:"line"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#link",children:"link"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#norm",children:"norm"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#point",children:"point"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#polygon",children:"polygon"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#polyline",children:"polyline"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#rectangle",children:"rectangle"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#square",children:"square"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#triangle",children:"triangle"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"cone3d",children:(0,i.jsx)(r.code,{children:"cone3D"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-42",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"float"})," ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"cone3D"})})," ",(0,i.jsx)(r.code,{children:"float"})," ---\x3e  ",(0,i.jsx)(r.code,{children:"geometry"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"cone3D"})})," (",(0,i.jsx)(r.code,{children:"float"})," , ",(0,i.jsx)(r.code,{children:"float"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"geometry"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-37",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"A cone geometry which base radius size is equal to the first operand, and which the height is equal to the second operand."}),"\n",(0,i.jsx)(r.h4,{id:"comment-9",children:"Comment:"}),"\n",(0,i.jsx)(r.p,{children:"the center of the cone is by default the location of the current agent in which has been called this operator."}),"\n",(0,i.jsx)(r.h4,{id:"special-cases-7",children:"Special cases:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"returns a point if the operand is lower or equal to 0."}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"examples-30",children:"Examples:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"geometry var0 <- cone3D(10.0,5.0); // var0 equals a geometry as a cone with a base circle of radius 10 and a height of 5.\n"})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"See also:"})," ",(0,i.jsx)(r.a,{href:"OperatorsAA#around",children:"around"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#cone",children:"cone"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#line",children:"line"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#link",children:"link"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#norm",children:"norm"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#point",children:"point"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#polygon",children:"polygon"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#polyline",children:"polyline"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#rectangle",children:"rectangle"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#square",children:"square"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#triangle",children:"triangle"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"connected_components_of",children:(0,i.jsx)(r.code,{children:"connected_components_of"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-43",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"connected_components_of"})})," (",(0,i.jsx)(r.code,{children:"graph"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"list<list>"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"graph"})," ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"connected_components_of"})})," ",(0,i.jsx)(r.code,{children:"bool"})," ---\x3e  ",(0,i.jsx)(r.code,{children:"list<list>"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"connected_components_of"})})," (",(0,i.jsx)(r.code,{children:"graph"})," , ",(0,i.jsx)(r.code,{children:"bool"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"list<list>"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-38",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"returns the connected components of a graph, i.e. the list of all vertices that are in the maximally connected component together with the specified vertex.\nreturns the connected components of a graph, i.e. the list of all edges (if the boolean is true) or vertices (if the boolean is false) that are in the connected components."}),"\n",(0,i.jsx)(r.h4,{id:"examples-31",children:"Examples:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"graph my_graph <- graph([]); \nlist<list> var1 <- connected_components_of (my_graph); // var1 equals the list of all the components as list \ngraph my_graph2 <- graph([]); \nlist<list> var3 <- connected_components_of (my_graph2, true); // var3 equals the list of all the components as list\n"})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"See also:"})," ",(0,i.jsx)(r.a,{href:"OperatorsAA#alpha_index",children:"alpha_index"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#connectivity_index",children:"connectivity_index"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#nb_cycles",children:"nb_cycles"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"connectivity_index",children:(0,i.jsx)(r.code,{children:"connectivity_index"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-44",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"connectivity_index"})})," (",(0,i.jsx)(r.code,{children:"graph"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"float"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-39",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"returns a simple connectivity index. This number is estimated through the number of nodes (v) and of sub-graphs (p) : IC = (v - p) /(v - 1)."}),"\n",(0,i.jsx)(r.h4,{id:"examples-32",children:"Examples:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"graph graphEpidemio <- graph([]); \nfloat var1 <- connectivity_index(graphEpidemio); // var1 equals the connectivity index of the graph\n"})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"See also:"})," ",(0,i.jsx)(r.a,{href:"OperatorsAA#alpha_index",children:"alpha_index"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#beta_index",children:"beta_index"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#gamma_index",children:"gamma_index"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#nb_cycles",children:"nb_cycles"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"container",children:(0,i.jsx)(r.code,{children:"container"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-45",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"container"})})," (",(0,i.jsx)(r.code,{children:"any"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"container"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-40",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"casts the operand in a container object."}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"contains",children:(0,i.jsx)(r.code,{children:"contains"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-46",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"string"})," ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"contains"})})," ",(0,i.jsx)(r.code,{children:"string"})," ---\x3e  ",(0,i.jsx)(r.code,{children:"bool"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"contains"})})," (",(0,i.jsx)(r.code,{children:"string"})," , ",(0,i.jsx)(r.code,{children:"string"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"bool"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"container<KeyType,ValueType>"})," ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"contains"})})," ",(0,i.jsx)(r.code,{children:"unknown"})," ---\x3e  ",(0,i.jsx)(r.code,{children:"bool"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"contains"})})," (",(0,i.jsx)(r.code,{children:"container<KeyType,ValueType>"})," , ",(0,i.jsx)(r.code,{children:"unknown"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"bool"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-41",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"true, if the container contains the right operand, false otherwise. 'contains' can also be written 'contains_value'. On graphs, it is equivalent to calling 'contains_edge'"}),"\n",(0,i.jsx)(r.h4,{id:"comment-10",children:"Comment:"}),"\n",(0,i.jsx)(r.p,{children:"the contains operator behavior depends on the nature of the operand"}),"\n",(0,i.jsx)(r.h4,{id:"special-cases-8",children:"Special cases:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"if both operands are strings, returns true if the right-hand operand contains the right-hand pattern;"}),"\n",(0,i.jsx)(r.li,{children:"if it is a map, contains, which can also be written 'contains_value', returns true if the operand is a value of the map"}),"\n",(0,i.jsx)(r.li,{children:"if it is a pair, contains_key returns true if the operand is equal to the value of the pair"}),"\n",(0,i.jsx)(r.li,{children:"if it is a file, contains returns true it the operand is contained in the file content"}),"\n",(0,i.jsx)(r.li,{children:"if it is a population, contains returns true if the operand is an agent of the population, false otherwise"}),"\n",(0,i.jsx)(r.li,{children:"if it is a graph, contains can be written 'contains_edge' and  returns true if the operand is an edge of the graph, false otherwise (use 'contains_node' for testing the presence of a node)"}),"\n",(0,i.jsx)(r.li,{children:"if it is a list or a matrix, contains returns true if the list or matrix contains the right operand"}),"\n"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"bool var1 <- [1, 2, 3] contains 2; // var1 equals true \nbool var2 <- [{1,2}, {3,4}, {5,6}] contains {3,4}; // var2 equals true\n"})}),"\n",(0,i.jsx)(r.h4,{id:"examples-33",children:"Examples:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"bool var0 <- 'abcded' contains 'bc'; // var0 equals true\n"})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"See also:"})," ",(0,i.jsx)(r.a,{href:"OperatorsBC#contains_all",children:"contains_all"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#contains_any",children:"contains_any"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#contains_key",children:"contains_key"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"contains_all",children:(0,i.jsx)(r.code,{children:"contains_all"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-47",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"string"})," ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"contains_all"})})," ",(0,i.jsx)(r.code,{children:"list"})," ---\x3e  ",(0,i.jsx)(r.code,{children:"bool"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"contains_all"})})," (",(0,i.jsx)(r.code,{children:"string"})," , ",(0,i.jsx)(r.code,{children:"list"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"bool"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"container"})," ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"contains_all"})})," ",(0,i.jsx)(r.code,{children:"container"})," ---\x3e  ",(0,i.jsx)(r.code,{children:"bool"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"contains_all"})})," (",(0,i.jsx)(r.code,{children:"container"})," , ",(0,i.jsx)(r.code,{children:"container"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"bool"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-42",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"true if the left operand contains all the elements of the right operand, false otherwise"}),"\n",(0,i.jsx)(r.h4,{id:"comment-11",children:"Comment:"}),"\n",(0,i.jsx)(r.p,{children:"the definition of contains depends on the container"}),"\n",(0,i.jsx)(r.h4,{id:"special-cases-9",children:"Special cases:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"if the right operand is nil or empty, contains_all returns true"}),"\n",(0,i.jsx)(r.li,{children:"if the left-operand is a string, test whether the string contains all the element of the list;"}),"\n"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:'bool var0 <- "abcabcabc" contains_all ["ca","xy"]; // var0 equals false\n'})}),"\n",(0,i.jsx)(r.h4,{id:"examples-34",children:"Examples:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"bool var1 <- [1,2,3,4,5,6] contains_all [2,4]; // var1 equals true  \nbool var2 <- [1,2,3,4,5,6] contains_all [2,8]; // var2 equals false \nbool var3 <- [1::2, 3::4, 5::6] contains_all [1,3]; // var3 equals false  \nbool var4 <- [1::2, 3::4, 5::6] contains_all [2,4]; // var4 equals true\n"})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"See also:"})," ",(0,i.jsx)(r.a,{href:"OperatorsBC#contains",children:"contains"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#contains_any",children:"contains_any"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"contains_any",children:(0,i.jsx)(r.code,{children:"contains_any"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-48",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"string"})," ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"contains_any"})})," ",(0,i.jsx)(r.code,{children:"list"})," ---\x3e  ",(0,i.jsx)(r.code,{children:"bool"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"contains_any"})})," (",(0,i.jsx)(r.code,{children:"string"})," , ",(0,i.jsx)(r.code,{children:"list"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"bool"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"container"})," ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"contains_any"})})," ",(0,i.jsx)(r.code,{children:"container"})," ---\x3e  ",(0,i.jsx)(r.code,{children:"bool"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"contains_any"})})," (",(0,i.jsx)(r.code,{children:"container"})," , ",(0,i.jsx)(r.code,{children:"container"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"bool"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-43",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"true if the left operand contains one of the elements of the right operand, false otherwise"}),"\n",(0,i.jsx)(r.h4,{id:"comment-12",children:"Comment:"}),"\n",(0,i.jsx)(r.p,{children:"the definition of contains depends on the container"}),"\n",(0,i.jsx)(r.h4,{id:"special-cases-10",children:"Special cases:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"if the right operand is nil or empty, contains_any returns false"}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"examples-35",children:"Examples:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:'bool var0 <- "abcabcabc" contains_any ["ca","xy"]; // var0 equals true \nbool var1 <- [1,2,3,4,5,6] contains_any [2,4]; // var1 equals true  \nbool var2 <- [1,2,3,4,5,6] contains_any [2,8]; // var2 equals true \nbool var3 <- [1::2, 3::4, 5::6] contains_any [1,3]; // var3 equals false \nbool var4 <- [1::2, 3::4, 5::6] contains_any [2,4]; // var4 equals true\n'})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"See also:"})," ",(0,i.jsx)(r.a,{href:"OperatorsBC#contains",children:"contains"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#contains_all",children:"contains_all"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"contains_edge",children:(0,i.jsx)(r.code,{children:"contains_edge"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-49",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"graph"})," ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"contains_edge"})})," ",(0,i.jsx)(r.code,{children:"pair"})," ---\x3e  ",(0,i.jsx)(r.code,{children:"bool"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"contains_edge"})})," (",(0,i.jsx)(r.code,{children:"graph"})," , ",(0,i.jsx)(r.code,{children:"pair"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"bool"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"graph"})," ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"contains_edge"})})," ",(0,i.jsx)(r.code,{children:"unknown"})," ---\x3e  ",(0,i.jsx)(r.code,{children:"bool"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"contains_edge"})})," (",(0,i.jsx)(r.code,{children:"graph"})," , ",(0,i.jsx)(r.code,{children:"unknown"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"bool"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-44",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"returns true if the graph(left-hand operand) contains the given edge (righ-hand operand), false otherwise"}),"\n",(0,i.jsx)(r.h4,{id:"special-cases-11",children:"Special cases:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"if the left-hand operand is nil, returns false"}),"\n",(0,i.jsx)(r.li,{children:"if the right-hand operand is a pair, returns true if it exists an edge between the two elements of the pair in the graph"}),"\n"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"bool var0 <- graphEpidemio contains_edge (node(0)::node(3)); // var0 equals true\n"})}),"\n",(0,i.jsx)(r.h4,{id:"examples-36",children:"Examples:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"graph graphFromMap <-  as_edge_graph([{1,5}::{12,45},{12,45}::{34,56}]); \nbool var2 <- graphFromMap contains_edge link({1,5},{12,45}); // var2 equals true\n"})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"See also:"})," ",(0,i.jsx)(r.a,{href:"OperatorsBC#contains_vertex",children:"contains_vertex"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"contains_key",children:(0,i.jsx)(r.code,{children:"contains_key"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-50",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"container<KeyType,ValueType>"})," ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"contains_key"})})," ",(0,i.jsx)(r.code,{children:"unknown"})," ---\x3e  ",(0,i.jsx)(r.code,{children:"bool"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"contains_key"})})," (",(0,i.jsx)(r.code,{children:"container<KeyType,ValueType>"})," , ",(0,i.jsx)(r.code,{children:"unknown"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"bool"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-45",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"true, if the left-hand operand -- the container -- contains a key -- or an index -- equal to the right-hand operand, false otherwise. On graphs, 'contains_key' is equivalent to calling 'contains_vertex'"}),"\n",(0,i.jsx)(r.h4,{id:"comment-13",children:"Comment:"}),"\n",(0,i.jsx)(r.p,{children:"the behavior of contains_key depends on the nature of the container"}),"\n",(0,i.jsx)(r.h4,{id:"special-cases-12",children:"Special cases:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"if it is a map, contains_key returns true if the operand is a key of the map"}),"\n",(0,i.jsx)(r.li,{children:"if it is a pair, contains_key returns true if the operand is equal to the key of the pair"}),"\n",(0,i.jsx)(r.li,{children:"if it is a matrix, contains_key returns true if the point operand is a valid index of the matrix (i.e. >= {0,0} and < {rows, col})"}),"\n",(0,i.jsx)(r.li,{children:"if it is a file, contains_key is applied to the file contents -- a container"}),"\n",(0,i.jsx)(r.li,{children:"if it is a graph, contains_key returns true if the graph contains the corresponding vertex"}),"\n",(0,i.jsx)(r.li,{children:"if it is a list, contains_key returns true if the right-hand operand is an integer and if it is a valid index (i.e. >= 0 and < length)"}),"\n"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"bool var0 <- [1, 2, 3] contains_key 3; // var0 equals false \nbool var1 <- [{1,2}, {3,4}, {5,6}] contains_key 0; // var1 equals true\n"})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"See also:"})," ",(0,i.jsx)(r.a,{href:"OperatorsBC#contains_all",children:"contains_all"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#contains",children:"contains"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#contains_any",children:"contains_any"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"contains_node",children:(0,i.jsx)(r.code,{children:"contains_node"})}),"\n",(0,i.jsxs)(r.p,{children:["Same signification as ",(0,i.jsx)(r.a,{href:"OperatorsBC#contains_key",children:"contains_key"})]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"contains_value",children:(0,i.jsx)(r.code,{children:"contains_value"})}),"\n",(0,i.jsxs)(r.p,{children:["Same signification as ",(0,i.jsx)(r.a,{href:"OperatorsBC#contains",children:"contains"})]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"contains_vertex",children:(0,i.jsx)(r.code,{children:"contains_vertex"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-51",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"graph"})," ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"contains_vertex"})})," ",(0,i.jsx)(r.code,{children:"unknown"})," ---\x3e  ",(0,i.jsx)(r.code,{children:"bool"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"contains_vertex"})})," (",(0,i.jsx)(r.code,{children:"graph"})," , ",(0,i.jsx)(r.code,{children:"unknown"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"bool"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-46",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"returns true if the graph(left-hand operand) contains the given vertex (righ-hand operand), false otherwise"}),"\n",(0,i.jsx)(r.h4,{id:"special-cases-13",children:"Special cases:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"if the left-hand operand is nil, returns false"}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"examples-37",children:"Examples:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"graph graphFromMap<-  as_edge_graph([{1,5}::{12,45},{12,45}::{34,56}]); \nbool var1 <- graphFromMap contains_vertex {1,5}; // var1 equals true\n"})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"See also:"})," ",(0,i.jsx)(r.a,{href:"OperatorsBC#contains_edge",children:"contains_edge"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"conversation",children:(0,i.jsx)(r.code,{children:"conversation"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-52",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"conversation"})})," (",(0,i.jsx)(r.code,{children:"any"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"conversation"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-47",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"casts the operand in a conversation object."}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"convex_hull",children:(0,i.jsx)(r.code,{children:"convex_hull"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-53",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"convex_hull"})})," (",(0,i.jsx)(r.code,{children:"geometry"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"geometry"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-48",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"A geometry corresponding to the convex hull of the operand."}),"\n",(0,i.jsx)(r.h4,{id:"examples-38",children:"Examples:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"geometry var0 <- convex_hull(self); // var0 equals the convex hull of the geometry of the agent applying the operator\n"})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"copy",children:(0,i.jsx)(r.code,{children:"copy"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-54",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"copy"})})," (",(0,i.jsx)(r.code,{children:"unknown"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"unknown"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-49",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"returns a copy of the operand."}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"copy_between",children:(0,i.jsx)(r.code,{children:"copy_between"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-55",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"copy_between"})})," (",(0,i.jsx)(r.code,{children:"list"}),", ",(0,i.jsx)(r.code,{children:"int"}),", ",(0,i.jsx)(r.code,{children:"int"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"list"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"copy_between"})})," (",(0,i.jsx)(r.code,{children:"string"}),", ",(0,i.jsx)(r.code,{children:"int"}),", ",(0,i.jsx)(r.code,{children:"int"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"string"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-50",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"Returns a copy of the first operand between the indexes determined by the second (inclusive) and third operands (exclusive)"}),"\n",(0,i.jsx)(r.h4,{id:"special-cases-14",children:"Special cases:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"If the first operand is empty, returns an empty object of the same type"}),"\n",(0,i.jsx)(r.li,{children:"If the second operand is greater than or equal to the third operand, return an empty object of the same type"}),"\n",(0,i.jsx)(r.li,{children:"If the first operand is nil, raises an error"}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"examples-39",children:"Examples:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:'list var0 <-  copy_between ([4, 1, 6, 9 ,7], 1, 3); // var0 equals [1, 6] \nstring var1 <- copy_between("abcabcabc", 2,6); // var1 equals "cabc"\n'})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"copy_file",children:(0,i.jsx)(r.code,{children:"copy_file"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-56",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"string"})," ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"copy_file"})})," ",(0,i.jsx)(r.code,{children:"string"})," ---\x3e  ",(0,i.jsx)(r.code,{children:"bool"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"copy_file"})})," (",(0,i.jsx)(r.code,{children:"string"})," , ",(0,i.jsx)(r.code,{children:"string"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"bool"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"copy_file"})})," (",(0,i.jsx)(r.code,{children:"string"}),", ",(0,i.jsx)(r.code,{children:"string"}),", ",(0,i.jsx)(r.code,{children:"bool"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"bool"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-51",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"copy a file or a folder\ncopy a file or a folder"}),"\n",(0,i.jsx)(r.h4,{id:"examples-40",children:"Examples:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:'bool copy_file_ok <- copy_file("../includes/my_folder","../includes/my_new_folder"); \nbool copy_file_ok <- copy_file("../includes/my_folder","../includes/my_new_folder",true);\n'})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"copy_from_clipboard",children:(0,i.jsx)(r.code,{children:"copy_from_clipboard"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-57",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"copy_from_clipboard"})})," (",(0,i.jsx)(r.code,{children:"any GAML type"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"unknown"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-52",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"Tries to copy data from the clipboard by passing its expected type. Returns nil if it has not been correctly retrieved, or not retrievable using the given type or if GAMA is in a headless environment"}),"\n",(0,i.jsx)(r.h4,{id:"examples-41",children:"Examples:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"string copied  <- copy_from_clipboard(string);\n"})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"copy_to_clipboard",children:(0,i.jsx)(r.code,{children:"copy_to_clipboard"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-58",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"copy_to_clipboard"})})," (",(0,i.jsx)(r.code,{children:"string"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"bool"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-53",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"Tries to copy the text in parameter to the clipboard and returns whether it has been correctly copied or not (for instance it might be impossible in a headless environment)"}),"\n",(0,i.jsx)(r.h4,{id:"examples-42",children:"Examples:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"bool copied  <- copy_to_clipboard('text to copy');\n"})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"copy_to_clipboard-1",children:(0,i.jsx)(r.code,{children:"copy_to_clipboard"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-59",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"copy_to_clipboard"})})," (",(0,i.jsx)(r.code,{children:"image"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"bool"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-54",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"Tries to copy the given image to the clipboard and returns whether it has been correctly copied or not (for instance it might be impossible in a headless environment)"}),"\n",(0,i.jsx)(r.h4,{id:"examples-43",children:"Examples:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"bool copied  <- copy_to_clipboard(img);\n"})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"correlation",children:(0,i.jsx)(r.code,{children:"correlation"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-60",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"container"})," ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"correlation"})})," ",(0,i.jsx)(r.code,{children:"container"})," ---\x3e  ",(0,i.jsx)(r.code,{children:"float"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"correlation"})})," (",(0,i.jsx)(r.code,{children:"container"})," , ",(0,i.jsx)(r.code,{children:"container"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"float"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-55",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"Returns the correlation of two data sequences (having the same size)"}),"\n",(0,i.jsx)(r.h4,{id:"examples-44",children:"Examples:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"float var0 <- correlation([1,2,1,3,1,2], [1,2,1,3,1,2]) with_precision(4); // var0 equals 1.2 \nfloat var1 <- correlation([13,2,1,4,1,2], [1,2,1,3,1,2]) with_precision(2); // var1 equals -0.21\n"})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"cos",children:(0,i.jsx)(r.code,{children:"cos"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-61",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"cos"})})," (",(0,i.jsx)(r.code,{children:"float"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"float"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"cos"})})," (",(0,i.jsx)(r.code,{children:"int"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"float"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-56",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"Returns the value (in [-1,1]) of the cosinus of the operand (in decimal degrees).  The argument is casted to an int before being evaluated."}),"\n",(0,i.jsx)(r.h4,{id:"special-cases-15",children:"Special cases:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"Operand values out of the range [0-359] are normalized."}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"examples-45",children:"Examples:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"float var0 <- cos (0.0); // var0 equals 1.0 \nfloat var1 <- cos(360.0); // var1 equals 1.0 \nfloat var2 <- cos(-720.0); // var2 equals 1.0 \nfloat var3 <- cos (0); // var3 equals 1.0 \nfloat var4 <- cos(360); // var4 equals 1.0 \nfloat var5 <- cos(-720); // var5 equals 1.0\n"})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"See also:"})," ",(0,i.jsx)(r.a,{href:"OperatorsSZ#sin",children:"sin"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#tan",children:"tan"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"cos_rad",children:(0,i.jsx)(r.code,{children:"cos_rad"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-62",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"cos_rad"})})," (",(0,i.jsx)(r.code,{children:"float"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"float"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-57",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"Returns the value (in [-1,1]) of the cosinus of the operand (in radians)."}),"\n",(0,i.jsx)(r.h4,{id:"special-cases-16",children:"Special cases:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"Operand values out of the range [0-359] are normalized."}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"examples-46",children:"Examples:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"float var0 <- cos_rad(0.0); // var0 equals 1.0 \nfloat var1 <- cos_rad(#pi); // var1 equals -1.0\n"})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"See also:"})," ",(0,i.jsx)(r.a,{href:"OperatorsSZ#sin",children:"sin"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#tan",children:"tan"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"count",children:(0,i.jsx)(r.code,{children:"count"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-63",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"container"})," ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"count"})})," ",(0,i.jsx)(r.code,{children:"any expression"})," ---\x3e  ",(0,i.jsx)(r.code,{children:"int"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"count"})})," (",(0,i.jsx)(r.code,{children:"container"})," , ",(0,i.jsx)(r.code,{children:"any expression"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"int"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-58",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"returns an int, equal to the number of elements of the left-hand operand that make the right-hand operand evaluate to true."}),"\n",(0,i.jsx)(r.h4,{id:"comment-14",children:"Comment:"}),"\n",(0,i.jsx)(r.p,{children:"in the right-hand operand, the keyword each can be used to represent, in turn, each of the elements."}),"\n",(0,i.jsx)(r.h4,{id:"special-cases-17",children:"Special cases:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"if the left-hand operand is nil, count throws an error"}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"examples-47",children:"Examples:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"int var0 <- [1,2,3,4,5,6,7,8] count (each > 3); // var0 equals 5 \n// Number of nodes of graph g2 without any out edge \ngraph g2 <- graph([]); \nint var3 <- g2 count (length(g2 out_edges_of each) = 0  ) ; // var3 equals the total number of out edges \n// Number of agents node with x > 32 \nint n <- (list(node) count (round(node(each).location.x) > 32); \nint var6 <- [1::2, 3::4, 5::6] count (each > 4); // var6 equals 1\n"})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"See also:"})," ",(0,i.jsx)(r.a,{href:"OperatorsDH#group_by",children:"group_by"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"covariance",children:(0,i.jsx)(r.code,{children:"covariance"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-64",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"container"})," ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"covariance"})})," ",(0,i.jsx)(r.code,{children:"container"})," ---\x3e  ",(0,i.jsx)(r.code,{children:"float"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"covariance"})})," (",(0,i.jsx)(r.code,{children:"container"})," , ",(0,i.jsx)(r.code,{children:"container"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"float"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-59",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"Returns the covariance of two data sequences"}),"\n",(0,i.jsx)(r.h4,{id:"examples-48",children:"Examples:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"float var0 <- covariance([13,2,1,4,1,2], [1,2,1,3,1,2]) with_precision(2); // var0 equals -0.67\n"})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"covering",children:(0,i.jsx)(r.code,{children:"covering"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-65",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"container<unknown,geometry>"})," ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"covering"})})," ",(0,i.jsx)(r.code,{children:"geometry"})," ---\x3e  ",(0,i.jsx)(r.code,{children:"list<geometry>"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"covering"})})," (",(0,i.jsx)(r.code,{children:"container<unknown,geometry>"})," , ",(0,i.jsx)(r.code,{children:"geometry"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"list<geometry>"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-60",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"A list of agents or geometries among the left-operand list, species or meta-population (addition of species), covering the operand (casted as a geometry)."}),"\n",(0,i.jsx)(r.h4,{id:"examples-49",children:"Examples:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"list<geometry> var0 <- [ag1, ag2, ag3] covering(self); // var0 equals the agents among ag1, ag2 and ag3 that cover the shape of the right-hand argument. \nlist<geometry> var1 <- (species1 + species2) covering (self); // var1 equals the agents among species species1 and species2 that covers the shape of the right-hand argument.\n"})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"See also:"})," ",(0,i.jsx)(r.a,{href:"OperatorsNR#neighbors_at",children:"neighbors_at"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#neighbors_of",children:"neighbors_of"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#closest_to",children:"closest_to"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#overlapping",children:"overlapping"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#agents_overlapping",children:"agents_overlapping"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#inside",children:"inside"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#agents_inside",children:"agents_inside"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#agent_closest_to",children:"agent_closest_to"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"covers",children:(0,i.jsx)(r.code,{children:"covers"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-66",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"geometry"})," ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"covers"})})," ",(0,i.jsx)(r.code,{children:"geometry"})," ---\x3e  ",(0,i.jsx)(r.code,{children:"bool"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"covers"})})," (",(0,i.jsx)(r.code,{children:"geometry"})," , ",(0,i.jsx)(r.code,{children:"geometry"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"bool"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-61",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"A boolean, equal to true if the left-geometry (or agent/point) covers the right-geometry (or agent/point)."}),"\n",(0,i.jsx)(r.h4,{id:"special-cases-18",children:"Special cases:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"if one of the operand is null, returns false."}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"examples-50",children:"Examples:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"bool var0 <- square(5) covers square(2); // var0 equals true\n"})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"See also:"})," ",(0,i.jsx)(r.a,{href:"OperatorsDH#disjoint_from",children:"disjoint_from"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#crosses",children:"crosses"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#overlaps",children:"overlaps"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#partially_overlaps",children:"partially_overlaps"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#touches",children:"touches"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"create_map",children:(0,i.jsx)(r.code,{children:"create_map"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-67",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"list"})," ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"create_map"})})," ",(0,i.jsx)(r.code,{children:"list"})," ---\x3e  ",(0,i.jsx)(r.code,{children:"map"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"create_map"})})," (",(0,i.jsx)(r.code,{children:"list"})," , ",(0,i.jsx)(r.code,{children:"list"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"map"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-62",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"returns a new map using the left operand as keys for the right operand"}),"\n",(0,i.jsx)(r.h4,{id:"special-cases-19",children:"Special cases:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"if the left operand contains duplicates, create_map throws an error."}),"\n",(0,i.jsx)(r.li,{children:"if both operands have different lengths, choose the minimum length between the two operandsfor the size of the map"}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"examples-51",children:"Examples:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"map<int,string> var0 <- create_map([0,1,2],['a','b','c']); // var0 equals [0::'a',1::'b',2::'c'] \nmap<int,float> var1 <- create_map([0,1],[0.1,0.2,0.3]); // var1 equals [0::0.1,1::0.2] \nmap<string,float> var2 <- create_map(['a','b','c','d'],[1.0,2.0,3.0]); // var2 equals ['a'::1.0,'b'::2.0,'c'::3.0]\n"})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"cropped_to",children:(0,i.jsx)(r.code,{children:"cropped_to"})}),"\n",(0,i.jsxs)(r.p,{children:["Same signification as ",(0,i.jsx)(r.a,{href:"OperatorsBC#clipped_with",children:"clipped_with"})]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"cross",children:(0,i.jsx)(r.code,{children:"cross"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-68",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"cross"})})," (",(0,i.jsx)(r.code,{children:"float"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"geometry"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"float"})," ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"cross"})})," ",(0,i.jsx)(r.code,{children:"float"})," ---\x3e  ",(0,i.jsx)(r.code,{children:"geometry"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"cross"})})," (",(0,i.jsx)(r.code,{children:"float"})," , ",(0,i.jsx)(r.code,{children:"float"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"geometry"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-63",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"A cross, which radius is equal to the first operand (and eventually the width of the lines for the second)"}),"\n",(0,i.jsx)(r.h4,{id:"examples-52",children:"Examples:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"geometry var0 <- cross(10); // var0 equals a geometry as a cross of radius 10 \ngeometry var1 <- cross(10,2); // var1 equals a geometry as a cross of radius 10, and with a width of 2 for the lines \n"})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"See also:"})," ",(0,i.jsx)(r.a,{href:"OperatorsAA#around",children:"around"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#cone",children:"cone"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#line",children:"line"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#link",children:"link"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#norm",children:"norm"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#point",children:"point"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#polygon",children:"polygon"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#polyline",children:"polyline"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#super_ellipse",children:"super_ellipse"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#rectangle",children:"rectangle"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#square",children:"square"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#circle",children:"circle"}),", ",(0,i.jsx)(r.a,{href:"OperatorsDH#ellipse",children:"ellipse"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#triangle",children:"triangle"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"crosses",children:(0,i.jsx)(r.code,{children:"crosses"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-69",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"geometry"})," ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"crosses"})})," ",(0,i.jsx)(r.code,{children:"geometry"})," ---\x3e  ",(0,i.jsx)(r.code,{children:"bool"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"crosses"})})," (",(0,i.jsx)(r.code,{children:"geometry"})," , ",(0,i.jsx)(r.code,{children:"geometry"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"bool"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-64",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"A boolean, equal to true if the left-geometry (or agent/point) crosses the right-geometry (or agent/point)."}),"\n",(0,i.jsx)(r.h4,{id:"special-cases-20",children:"Special cases:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"if one of the operand is null, returns false."}),"\n",(0,i.jsx)(r.li,{children:"if one operand is a point, returns false."}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"examples-53",children:"Examples:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"bool var0 <- polyline([{10,10},{20,20}]) crosses polyline([{10,20},{20,10}]); // var0 equals true \nbool var1 <- polyline([{10,10},{20,20}]) crosses {15,15}; // var1 equals true \nbool var2 <- polyline([{0,0},{25,25}]) crosses polygon([{10,10},{10,20},{20,20},{20,10}]); // var2 equals true\n"})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"See also:"})," ",(0,i.jsx)(r.a,{href:"OperatorsDH#disjoint_from",children:"disjoint_from"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#intersects",children:"intersects"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#overlaps",children:"overlaps"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#partially_overlaps",children:"partially_overlaps"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#touches",children:"touches"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"crossing",children:(0,i.jsx)(r.code,{children:"crossing"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-70",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"container<unknown,geometry>"})," ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"crossing"})})," ",(0,i.jsx)(r.code,{children:"geometry"})," ---\x3e  ",(0,i.jsx)(r.code,{children:"list<geometry>"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"crossing"})})," (",(0,i.jsx)(r.code,{children:"container<unknown,geometry>"})," , ",(0,i.jsx)(r.code,{children:"geometry"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"list<geometry>"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-65",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"A list of agents or geometries among the left-operand list, species or meta-population (addition of species), crossing the operand (casted as a geometry)."}),"\n",(0,i.jsx)(r.h4,{id:"examples-54",children:"Examples:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"list<geometry> var0 <- [ag1, ag2, ag3] crossing(self); // var0 equals the agents among ag1, ag2 and ag3 that cross the shape of the right-hand argument. \nlist<geometry> var1 <- (species1 + species2) crossing (self); // var1 equals the agents among species species1 and species2 that cross the shape of the right-hand argument.\n"})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"See also:"})," ",(0,i.jsx)(r.a,{href:"OperatorsNR#neighbors_at",children:"neighbors_at"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#neighbors_of",children:"neighbors_of"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#closest_to",children:"closest_to"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#overlapping",children:"overlapping"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#agents_overlapping",children:"agents_overlapping"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#inside",children:"inside"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#agents_inside",children:"agents_inside"}),", ",(0,i.jsx)(r.a,{href:"OperatorsAA#agent_closest_to",children:"agent_closest_to"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"crs",children:(0,i.jsx)(r.code,{children:"crs"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-71",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"crs"})})," (",(0,i.jsx)(r.code,{children:"file"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"string"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-66",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"the Coordinate Reference System (CRS) of the GIS file"}),"\n",(0,i.jsx)(r.h4,{id:"examples-55",children:"Examples:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"string var0 <- crs(my_shapefile); // var0 equals the crs of the shapefile\n"})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"crs_transform",children:(0,i.jsx)(r.code,{children:"CRS_transform"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-72",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"CRS_transform"})})," (",(0,i.jsx)(r.code,{children:"geometry"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"geometry"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"geometry"})," ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"CRS_transform"})})," ",(0,i.jsx)(r.code,{children:"string"})," ---\x3e  ",(0,i.jsx)(r.code,{children:"geometry"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"CRS_transform"})})," (",(0,i.jsx)(r.code,{children:"geometry"})," , ",(0,i.jsx)(r.code,{children:"string"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"geometry"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"CRS_transform"})})," (",(0,i.jsx)(r.code,{children:"geometry"}),", ",(0,i.jsx)(r.code,{children:"string"}),", ",(0,i.jsx)(r.code,{children:"string"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"geometry"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"special-cases-21",children:"Special cases:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"returns the geometry corresponding to the transformation of the given geometry from the first CRS to the second CRS (Coordinate Reference System)"}),"\n"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:'geometry var0 <- {8.35,47.22} CRS_transform("EPSG:4326","EPSG:4326"); // var0 equals {929517.7481238344,5978057.894895313,0.0}\n'})}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"returns the geometry corresponding to the transformation of the given geometry by the current CRS (Coordinate Reference System), the one corresponding to the world's agent one"}),"\n"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"geometry var1 <- CRS_transform(shape); // var1 equals a geometry corresponding to the agent geometry transformed into the current CRS\n"})}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"returns the geometry corresponding to the transformation of the given geometry by the left operand CRS (Coordinate Reference System)"}),"\n"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:'geometry var2 <- shape CRS_transform("EPSG:4326"); // var2 equals a geometry corresponding to the agent geometry transformed into the EPSG:4326 CRS\n'})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"csv_file",children:(0,i.jsx)(r.code,{children:"csv_file"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-73",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"csv_file"})})," (",(0,i.jsx)(r.code,{children:"string"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"file"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"string"})," ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"csv_file"})})," ",(0,i.jsx)(r.code,{children:"bool"})," ---\x3e  ",(0,i.jsx)(r.code,{children:"file"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"csv_file"})})," (",(0,i.jsx)(r.code,{children:"string"})," , ",(0,i.jsx)(r.code,{children:"bool"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"file"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"string"})," ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"csv_file"})})," ",(0,i.jsx)(r.code,{children:"string"})," ---\x3e  ",(0,i.jsx)(r.code,{children:"file"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"csv_file"})})," (",(0,i.jsx)(r.code,{children:"string"})," , ",(0,i.jsx)(r.code,{children:"string"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"file"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"string"})," ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"csv_file"})})," ",(0,i.jsx)(r.code,{children:"matrix<unknown>"})," ---\x3e  ",(0,i.jsx)(r.code,{children:"file"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"csv_file"})})," (",(0,i.jsx)(r.code,{children:"string"})," , ",(0,i.jsx)(r.code,{children:"matrix<unknown>"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"file"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"csv_file"})})," (",(0,i.jsx)(r.code,{children:"string"}),", ",(0,i.jsx)(r.code,{children:"string"}),", ",(0,i.jsx)(r.code,{children:"bool"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"file"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"csv_file"})})," (",(0,i.jsx)(r.code,{children:"string"}),", ",(0,i.jsx)(r.code,{children:"string"}),", ",(0,i.jsx)(r.code,{children:"any GAML type"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"file"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"csv_file"})})," (",(0,i.jsx)(r.code,{children:"string"}),", ",(0,i.jsx)(r.code,{children:"string"}),", ",(0,i.jsx)(r.code,{children:"string"}),", ",(0,i.jsx)(r.code,{children:"bool"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"file"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"csv_file"})})," (",(0,i.jsx)(r.code,{children:"string"}),", ",(0,i.jsx)(r.code,{children:"string"}),", ",(0,i.jsx)(r.code,{children:"string"}),", ",(0,i.jsx)(r.code,{children:"any GAML type"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"file"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"csv_file"})})," (",(0,i.jsx)(r.code,{children:"string"}),", ",(0,i.jsx)(r.code,{children:"string"}),", ",(0,i.jsx)(r.code,{children:"any GAML type"}),", ",(0,i.jsx)(r.code,{children:"bool"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"file"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"csv_file"})})," (",(0,i.jsx)(r.code,{children:"string"}),", ",(0,i.jsx)(r.code,{children:"string"}),", ",(0,i.jsx)(r.code,{children:"any GAML type"}),", ",(0,i.jsx)(r.code,{children:"point"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"file"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-67",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"Constructs a file of type csv. Allowed extensions are limited to csv, tsv"}),"\n",(0,i.jsx)(r.h4,{id:"special-cases-22",children:"Special cases:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"csv_file(string): This file constructor allows to read a CSV file with the default separator (coma), no header, and no assumption on the type of data. No text qualifier will be used"}),"\n"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:'csv_file f <- csv_file("file.csv");\n'})}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"csv_file(string,bool): This file constructor allows to read a CSV file with the default separator (coma), with specifying if the model has a header or not (boolean), and no assumption on the type of data. No text qualifier will be used"}),"\n"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:'csv_file f <- csv_file("file.csv",true);\n'})}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"csv_file(string,string): This file constructor allows to read a CSV file and specify the separator used, without making any assumption on the type of data. Headers should be detected automatically if they exist. No text qualifier will be used"}),"\n"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:'csv_file f <- csv_file("file.csv", ";");\n'})}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"csv_file(string,string,bool): This file constructor allows to read a CSV file and specify (1) the separator used; (2) if the model has a header or not, without making any assumption on the type of data. No text qualifier will be used"}),"\n"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:'csv_file f <- csv_file("file.csv", ";",true);\n'})}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"csv_file(string,string,string,bool): This file constructor allows to read a CSV file and specify (1) the separator used; (2) the text qualifier used; (3) if the model has a header or not, without making any assumption on the type of data"}),"\n"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"csv_file f <- csv_file(\"file.csv\", ';', '\"', true);\n"})}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"csv_file(string,string,any GAML type): This file constructor allows to read a CSV file with a given separator, no header, and the type of data. No text qualifier will be used"}),"\n"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:'csv_file f <- csv_file("file.csv", ";",int);\n'})}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"csv_file(string,string,string,any GAML type): This file constructor allows to read a CSV file and specify the separator, text qualifier to use, and the type of data to read.  Headers should be detected automatically if they exist."}),"\n"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"csv_file f <- csv_file(\"file.csv\", ';', '\"', int);\n"})}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"csv_file(string,string,any GAML type,bool): This file constructor allows to read a CSV file with a given separator, the type of data, with specifying if the model has a header or not (boolean). No text qualifier will be used"}),"\n"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:'csv_file f <- csv_file("file.csv", ";",int,true);\n'})}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"csv_file(string,string,any GAML type,point): This file constructor allows to read a CSV file with a given separator, the type of data, with specifying the number of cols and rows taken into account. No text qualifier will be used"}),"\n"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:'csv_file f <- csv_file("file.csv", ";",int,true, {5, 100});\n'})}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"csv_file(string,matrix<unknown>): This file constructor allows to store a matrix in a CSV file (it does not save it - just store it in memory),"}),"\n"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:'csv_file f <- csv_file("file.csv", matrix([10,10],[10,10]));\n'})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"See also:"})," ",(0,i.jsx)(r.a,{href:"OperatorsIM#is_csv",children:"is_csv"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"cube",children:(0,i.jsx)(r.code,{children:"cube"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-74",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"cube"})})," (",(0,i.jsx)(r.code,{children:"float"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"geometry"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-68",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"A cube geometry which side size is equal to the operand."}),"\n",(0,i.jsx)(r.h4,{id:"comment-15",children:"Comment:"}),"\n",(0,i.jsx)(r.p,{children:"the center of the cube is by default the location of the current agent in which has been called this operator."}),"\n",(0,i.jsx)(r.h4,{id:"special-cases-23",children:"Special cases:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"returns nil if the operand is nil."}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"examples-56",children:"Examples:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"geometry var0 <- cube(10); // var0 equals a geometry as a square of side size 10.\n"})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"See also:"})," ",(0,i.jsx)(r.a,{href:"OperatorsAA#around",children:"around"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#circle",children:"circle"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#cone",children:"cone"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#line",children:"line"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#link",children:"link"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#norm",children:"norm"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#point",children:"point"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#polygon",children:"polygon"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#polyline",children:"polyline"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#rectangle",children:"rectangle"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#triangle",children:"triangle"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"curve",children:(0,i.jsx)(r.code,{children:"curve"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-75",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"curve"})})," (",(0,i.jsx)(r.code,{children:"point"}),", ",(0,i.jsx)(r.code,{children:"point"}),", ",(0,i.jsx)(r.code,{children:"point"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"geometry"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"curve"})})," (",(0,i.jsx)(r.code,{children:"point"}),", ",(0,i.jsx)(r.code,{children:"point"}),", ",(0,i.jsx)(r.code,{children:"float"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"geometry"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"curve"})})," (",(0,i.jsx)(r.code,{children:"point"}),", ",(0,i.jsx)(r.code,{children:"point"}),", ",(0,i.jsx)(r.code,{children:"float"}),", ",(0,i.jsx)(r.code,{children:"float"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"geometry"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"curve"})})," (",(0,i.jsx)(r.code,{children:"point"}),", ",(0,i.jsx)(r.code,{children:"point"}),", ",(0,i.jsx)(r.code,{children:"point"}),", ",(0,i.jsx)(r.code,{children:"int"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"geometry"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"curve"})})," (",(0,i.jsx)(r.code,{children:"point"}),", ",(0,i.jsx)(r.code,{children:"point"}),", ",(0,i.jsx)(r.code,{children:"point"}),", ",(0,i.jsx)(r.code,{children:"point"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"geometry"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"curve"})})," (",(0,i.jsx)(r.code,{children:"point"}),", ",(0,i.jsx)(r.code,{children:"point"}),", ",(0,i.jsx)(r.code,{children:"float"}),", ",(0,i.jsx)(r.code,{children:"bool"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"geometry"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"curve"})})," (",(0,i.jsx)(r.code,{children:"point"}),", ",(0,i.jsx)(r.code,{children:"point"}),", ",(0,i.jsx)(r.code,{children:"point"}),", ",(0,i.jsx)(r.code,{children:"point"}),", ",(0,i.jsx)(r.code,{children:"int"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"geometry"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"curve"})})," (",(0,i.jsx)(r.code,{children:"point"}),", ",(0,i.jsx)(r.code,{children:"point"}),", ",(0,i.jsx)(r.code,{children:"float"}),", ",(0,i.jsx)(r.code,{children:"bool"}),", ",(0,i.jsx)(r.code,{children:"int"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"geometry"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"curve"})})," (",(0,i.jsx)(r.code,{children:"point"}),", ",(0,i.jsx)(r.code,{children:"point"}),", ",(0,i.jsx)(r.code,{children:"float"}),", ",(0,i.jsx)(r.code,{children:"int"}),", ",(0,i.jsx)(r.code,{children:"float"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"geometry"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"curve"})})," (",(0,i.jsx)(r.code,{children:"point"}),", ",(0,i.jsx)(r.code,{children:"point"}),", ",(0,i.jsx)(r.code,{children:"float"}),", ",(0,i.jsx)(r.code,{children:"bool"}),", ",(0,i.jsx)(r.code,{children:"int"}),", ",(0,i.jsx)(r.code,{children:"float"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"geometry"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"curve"})})," (",(0,i.jsx)(r.code,{children:"point"}),", ",(0,i.jsx)(r.code,{children:"point"}),", ",(0,i.jsx)(r.code,{children:"float"}),", ",(0,i.jsx)(r.code,{children:"int"}),", ",(0,i.jsx)(r.code,{children:"float"}),", ",(0,i.jsx)(r.code,{children:"float"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"geometry"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-69",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"The operator computes a Bezier curve geometry between the given operators, with 10 or a given number of points, and from left to rigth or right to left."}),"\n",(0,i.jsx)(r.h4,{id:"special-cases-24",children:"Special cases:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"if one  of the operand is nil, returns nil"}),"\n",(0,i.jsx)(r.li,{children:"When used with 2 points, a float coefficient, a boolean, an integer number of points, and a float proportion, it computes a cubic Bezier curve geometry built from the two given points with the given coefficient for the radius and composed of the given number of points - the boolean is used to specified if it is the right side and the last value to indicate where is the inflection point (between 0.0 and 1.0 - default 0.5)."}),"\n"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"geometry var0 <- curve({0,0},{10,10}, 0.5, false, 100, 0.8); // var0 equals a cubic Bezier curve geometry composed of 100 points from p0 to p1 at the right side.\n"})}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"When used with 2 points, a float coefficient, and a float angle, it computes a cubic Bezier curve geometry built from the two given points with the given coefficient for the radius considering the given rotation angle (90 = along the z axis)."}),"\n"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"geometry var1 <- curve({0,0},{10,10}, 0.5, 90); // var1 equals a cubic Bezier curve geometry composed of 100 points from p0 to p1 at the right side.\n"})}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"When used with 4 points and an integer number of  points, it computes a cubic Bezier curve geometry built from the four given points composed of a given number of points. If the number of points is  lower than 2, it returns nil."}),"\n"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"geometry var2 <- curve({0,0}, {0,10}, {10,10}); // var2 equals a cubic Bezier curve geometry composed of 10 points from p0 to p3.\n"})}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"When used with 3 points, it computes a quadratic Bezier curve geometry built from the three given points and composed of 10 points."}),"\n"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"geometry var3 <- curve({0,0}, {0,10}, {10,10}); // var3 equals a quadratic Bezier curve geometry composed of 10 points from p0 to p2.\n"})}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"When used with 2 points, a float coefficient, a boolean, and an integer number of points, it computes a cubic Bezier curve geometry built from the two given points with the given coefficient for the radius and composed of the given number of points - the boolean is used to specified if it is the right side."}),"\n"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"geometry var4 <- curve({0,0},{10,10}, 0.5, false, 100); // var4 equals a cubic Bezier curve geometry composed of 100 points from p0 to p1 at the right side.\n"})}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"When used with 2 points, a float coefficient, a boolean, an integer number of points, a float proportion, and a float angle, it computes a cubic Bezier curve geometry built from the two given points with the given coefficient for the radius and composed of the given number of points, considering the given inflection point (between 0.0 and 1.0 - default 0.5), and the given rotation angle (90 = along the z axis)."}),"\n"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"geometry var5 <- curve({0,0},{10,10}, 0.5, 100, 0.8, 90); // var5 equals a cubic Bezier curve geometry composed of 100 points from p0 to p1 at the right side.\n"})}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"When used with 3 points and an integer, it  computes a quadratic Bezier curve geometry built from the three given points. If the last operand (number of points) is inferior to 2, returns nil"}),"\n"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"geometry var6 <- curve({0,0}, {0,10}, {10,10}, 20); // var6 equals a quadratic Bezier curve geometry composed of 20 points from p0 to p2.\n"})}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"When used with 4 points, it computes, it computes a cubic Bezier curve geometry built from the four given points and composed of 10 points."}),"\n"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"geometry var7 <- curve({0,0}, {0,10}, {10,10}); // var7 equals a cubic Bezier curve geometry composed of 10 points from p0 to p3.\n"})}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"When used with 2 points, a float coefficient, a boolean, an integer number of points, and a float angle, it computes a cubic Bezier curve geometry built from the two given points with the given coefficient for the radius and composed of the given number of points, considering the given rotation angle (90 = along the z axis)."}),"\n"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"geometry var8 <- curve({0,0},{10,10}, 0.5, 100, 90); // var8 equals a cubic Bezier curve geometry composed of 100 points from p0 to p1 at the right side.\n"})}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"When used with 2 points and a float coefficient, it computes a cubic Bezier curve geometry built from the two given points with the given coefficient for the radius and composed of 10 points."}),"\n"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"geometry var9 <- curve({0,0},{10,10}, 0.5); // var9 equals a cubic Bezier curve geometry composed of 10 points from p0 to p1.\n"})}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"When used with 2 points, a float coefficient and a boolean, it computes a cubic Bezier curve geometry built from the two given points with the given coefficient for the radius and composed of 10 points. The last boolean is used to specified if it is the right side."}),"\n"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"geometry var10 <- curve({0,0},{10,10}, 0.5, false); // var10 equals a cubic Bezier curve geometry composed of 10 points from p0 to p1 at the left side.\n"})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"See also:"})," ",(0,i.jsx)(r.a,{href:"OperatorsAA#around",children:"around"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#circle",children:"circle"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#cone",children:"cone"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#link",children:"link"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#norm",children:"norm"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#point",children:"point"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#polygone",children:"polygone"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#rectangle",children:"rectangle"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#square",children:"square"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#triangle",children:"triangle"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#line",children:"line"}),","]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"cylinder",children:(0,i.jsx)(r.code,{children:"cylinder"})}),"\n",(0,i.jsx)(r.h4,{id:"possible-uses-76",children:"Possible uses:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"float"})," ",(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"cylinder"})})," ",(0,i.jsx)(r.code,{children:"float"})," ---\x3e  ",(0,i.jsx)(r.code,{children:"geometry"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"cylinder"})})," (",(0,i.jsx)(r.code,{children:"float"})," , ",(0,i.jsx)(r.code,{children:"float"}),") ---\x3e  ",(0,i.jsx)(r.code,{children:"geometry"})]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"result-70",children:"Result:"}),"\n",(0,i.jsx)(r.p,{children:"A cylinder geometry which radius is equal to the operand."}),"\n",(0,i.jsx)(r.h4,{id:"comment-16",children:"Comment:"}),"\n",(0,i.jsx)(r.p,{children:"the center of the cylinder is by default the location of the current agent in which has been called this operator."}),"\n",(0,i.jsx)(r.h4,{id:"special-cases-25",children:"Special cases:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"returns a point if the operand is lower or equal to 0."}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"examples-57",children:"Examples:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"geometry var0 <- cylinder(10,10); // var0 equals a geometry as a circle of radius 10.\n"})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"See also:"})," ",(0,i.jsx)(r.a,{href:"OperatorsAA#around",children:"around"}),", ",(0,i.jsx)(r.a,{href:"OperatorsBC#cone",children:"cone"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#line",children:"line"}),", ",(0,i.jsx)(r.a,{href:"OperatorsIM#link",children:"link"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#norm",children:"norm"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#point",children:"point"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#polygon",children:"polygon"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#polyline",children:"polyline"}),", ",(0,i.jsx)(r.a,{href:"OperatorsNR#rectangle",children:"rectangle"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#square",children:"square"}),", ",(0,i.jsx)(r.a,{href:"OperatorsSZ#triangle",children:"triangle"}),","]})]})}function h(e={}){const{wrapper:r}={...(0,l.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,r,s)=>{s.d(r,{R:()=>a,x:()=>o});var n=s(96540);const i={},l=n.createContext(i);function a(e){const r=n.useContext(l);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),n.createElement(l.Provider,{value:r},e.children)}}}]);