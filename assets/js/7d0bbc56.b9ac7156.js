"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4968],{45097:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>a,contentTitle:()=>l,default:()=>d,frontMatter:()=>s,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"ImportingModels","title":"Importing Models","description":"Importing a model refers to making a model file (or a complete project) available for edition and experimentation in the workspace. With the exception of headless experiments, GAMA requires that models be manageable in the current workspace to be able to validate them and eventually experiment them.","source":"@site/../docs/ImportingModels.md","sourceDirName":".","slug":"/ImportingModels","permalink":"/wiki/next/ImportingModels","draft":false,"unlisted":false,"editUrl":"https://github.com/gama-platform/gama/wiki/ImportingModels/_edit","tags":[],"version":"current","frontMatter":{"title":"Importing Models"},"sidebar":"main","previous":{"title":"Changing Workspace","permalink":"/wiki/next/ChangingWorkspace"},"next":{"title":"Editing models","permalink":"/wiki/next/EditingModels"}}');var r=i(74848),n=i(28453);const s={title:"Importing Models"},l=void 0,a={},c=[{value:"Table of contents",id:"table-of-contents",level:2},{value:"The &quot;Import...&quot; Menu Command",id:"the-import-menu-command",level:2},{value:"Import &quot;GAMA Project...&quot;",id:"import-gama-project",level:3},{value:"Import &quot;External files from disk...&quot; and &quot;External files from archive...&quot;",id:"import-external-files-from-disk-and-external-files-from-archive",level:3},{value:"&quot;Other&quot; imports",id:"other-imports",level:3},{value:"Silent import",id:"silent-import",level:2},{value:"Drag&#39;n Drop / Copy-Paste Limitations",id:"dragn-drop--copy-paste-limitations",level:2},{value:"Import from GitHub repository",id:"import-from-github-repository",level:2}];function h(e){const t={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.em,{children:"Importing"})," a model refers to making a model file (or a complete project) available for edition and experimentation in the ",(0,r.jsx)(t.strong,{children:"workspace"}),". With the exception of ",(0,r.jsx)(t.a,{href:"Headless",children:"headless"})," experiments, GAMA requires that models be manageable in the current workspace to be able to validate them and eventually experiment them."]}),"\n",(0,r.jsxs)(t.p,{children:["There are many situations where a model needs to be ",(0,r.jsx)(t.em,{children:"imported"})," by the user: someone sent it to him/her by mail, it has been attached to an ",(0,r.jsx)(t.a,{href:"Troubleshooting",children:"issue report"}),", it has been shared on the web or a Git repository, or it belongs to a previous workspace after the user has ",(0,r.jsx)(t.a,{href:"ChangingWorkspace",children:"switched workspace"}),". The instructions below apply equally to all these situations."]}),"\n",(0,r.jsxs)(t.p,{children:["Since model files need to reside in a project to be managed by GAMA, it is usually preferable to import a whole project rather than individual files (unless, of course, the corresponding models are simple enough to not require any additional resources, in which case, the model file can be imported with no harm into an existing project). GAMA will then try to detect situations where a model file is imported alone and, if a corresponding project can be found (for instance, in the upper directories of this file), to import the project instead of the file. As the last resort, GAMA will import orphan model files into a ",(0,r.jsx)(t.em,{children:"generic"})," project called ",(0,r.jsx)(t.em,{children:'"Unclassified Models"'})," (which will be created if it does not exist yet)."]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsxs)(t.strong,{children:["The simplest, safest and most secure way to import a project into the workspace is to follow ",(0,r.jsx)(t.a,{href:"ImportingModels#import-gama-project",children:"instructions from this section"}),"."]})}),"\n",(0,r.jsx)(t.h2,{id:"table-of-contents",children:"Table of contents"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.a,{href:"#importing-models",children:"Importing Models"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.a,{href:"#the-import-menu-command",children:'The "Import..." Menu Command'}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"ImportingModels#import-gama-project",children:'Import "GAMA Project..."'})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"ImportingModels#import-external-files-from-disk-and-external-files-from-archive",children:'Import "External files from disk..." and "External files from archive..."'})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"ImportingModels#other-imports",children:'"Other" imports'})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"#silent-import",children:"Silent import"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"#dragn-drop--copy-paste-limitations",children:"Drag'n Drop / Copy-Paste Limitations"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"#import-from-gitHub-repository",children:"Import from GitHub repository"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"the-import-menu-command",children:'The "Import..." Menu Command'}),"\n",(0,r.jsxs)(t.p,{children:['The simplest, safest and most secure way to import a project into the workspace is to use the built-in "Import..." menu command, available in the contextual menu on the ',(0,r.jsx)(t.em,{children:"User models"})," (the modeler can only import projects in this category)."]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"The Import... command in the contextual menu from User models",src:i(54631).A+"",width:"1390",height:"828"})}),"\n",(0,r.jsx)(t.p,{children:'The "Import..." command allows the modeler to choose between:'}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:['"GAMA Project...": ',(0,r.jsx)(t.strong,{children:"import a project"})," in the workspace (from another folder or an archive),"]}),"\n",(0,r.jsxs)(t.li,{children:['"External files from disk...": ',(0,r.jsx)(t.strong,{children:"import any files"})," in a project of the workspace (from a folder),"]}),"\n",(0,r.jsxs)(t.li,{children:['"External files from archive...": ',(0,r.jsx)(t.strong,{children:"import any files"})," in a project of the workspace (from an archive),"]}),"\n",(0,r.jsx)(t.li,{children:'"Other": other ways of importation.'}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"import-gama-project",children:'Import "GAMA Project..."'}),"\n",(0,r.jsx)(t.p,{children:'When "GAMA project..." is chosen, a dialog box will pop-up where the user will be asked to:'}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsx)(t.li,{children:"Enter a location (or browse to a location) containing the GAMA project(s) to import. This can be the folder of a single project or a folder containing several projects. 2 possibilities are available:"}),"\n"]}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:['"Select root directory": the user selects a ',(0,r.jsx)(t.strong,{children:"folder"})," containing the project,"]}),"\n",(0,r.jsxs)(t.li,{children:['"Select archive file": the user selects an archive file (e.g. a ',(0,r.jsx)(t.code,{children:".zip"}),"file) containing the project."]}),"\n"]}),"\n",(0,r.jsxs)(t.ol,{start:"2",children:["\n",(0,r.jsx)(t.li,{children:"Choose among the list of available projects (computed by GAMA) the ones to effectively import. Only projects that are not already in the workspace can be imported."}),"\n",(0,r.jsxs)(t.li,{children:["Indicate whether or not these projects need to be ",(0,r.jsx)(t.strong,{children:"copied to"})," or ",(0,r.jsx)(t.strong,{children:"linked from"})," the workspace (the latter is done by default). In the case of an import from an archive, the content will be automatically copied in the workspace."]}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"Dialog box to import a project.",src:i(74352).A+"",width:"1274",height:"1336"})}),"\n",(0,r.jsx)(t.h3,{id:"import-external-files-from-disk-and-external-files-from-archive",children:'Import "External files from disk..." and "External files from archive..."'}),"\n",(0,r.jsxs)(t.p,{children:["These two commands allow the user to ",(0,r.jsx)(t.strong,{children:"import some external files into an existing project of the workspace"}),". These two commands are very similar, only the source of files is different: a folder or an archive. They allow to filter and select the files to import. The user will be asked to:"]}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsx)(t.li,{children:"Enter a location (or browse to a location) containing the files to import."}),"\n",(0,r.jsx)(t.li,{children:"Select the files to import."}),"\n",(0,r.jsx)(t.li,{children:"Select the project in the workspace where the files will be copied."}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"Dialog box to import external files into an existing project of the workspace.",src:i(83987).A+"",width:"1582",height:"1460"})}),"\n",(0,r.jsx)(t.h3,{id:"other-imports",children:'"Other" imports'}),"\n",(0,r.jsx)(t.p,{children:'When invoked, this command will open a dialog asking the user to choose the source of the importation. It can be a directory in the filesystem (in which GAMA will look for existing projects), a zip file, etc. It is safer, in any case, to choose "Existing Projects into Workspace".'}),"\n",(0,r.jsxs)(t.p,{children:["If some extensions have been installed, they could add some entries in this menu (e.g. the ",(0,r.jsx)(t.a,{href:"InstallingPlugins#git",children:"Git extension"}),")."]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"The dialog box gathering all the possible way of importing a project.",src:i(56617).A+"",width:"1114",height:"1206"})}),"\n",(0,r.jsx)(t.h2,{id:"silent-import",children:"Silent import"}),"\n",(0,r.jsxs)(t.p,{children:["Another (possibly simpler, but less controllable) way of importing projects and models is to either pass a path to a model when ",(0,r.jsx)(t.a,{href:"Launching",children:"launching"})," GAMA from the command line or to double-click on a model file (ending in ",(0,r.jsx)(t.em,{children:".gaml"}),") in the Explorer or Finder (depending on your OS)."]}),"\n",(0,r.jsx)(t.p,{children:"If the file is not already part of an imported project in the current workspace, GAMA will:"}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsx)(t.li,{children:"silently import the project (by creating a link to it),"}),"\n",(0,r.jsx)(t.li,{children:"open an editor on the file selected."}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"This procedure may fail, however, if a project of the same name (but in a different location) already exists in the workspace, in which case GAMA will refuse to import the project (and hence, the file). The solution, in this case, is to rename the project to import (or to rename the existing project in the workspace)."}),"\n",(0,r.jsx)(t.h2,{id:"dragn-drop--copy-paste-limitations",children:"Drag'n Drop / Copy-Paste Limitations"}),"\n",(0,r.jsxs)(t.p,{children:["Currently, ",(0,r.jsx)(t.strong,{children:"there is no way"})," to drag and drop an entire project into GAMA ",(0,r.jsx)(t.em,{children:"Navigator"})," (or to copy a project in the filesystem and paste it in the ",(0,r.jsx)(t.em,{children:"Navigator"}),"). Only individual model files, folders or resources can be moved this way (and they have to be dropped or pasted into existing projects)."]}),"\n",(0,r.jsxs)(t.p,{children:["This limitation might be removed sometime in the future, however, allowing users to use the ",(0,r.jsx)(t.em,{children:"Navigator"})," as a project drop or paste target, but it is not the case yet."]}),"\n",(0,r.jsx)(t.h2,{id:"import-from-github-repository",children:"Import from GitHub repository"}),"\n",(0,r.jsxs)(t.p,{children:["In the case where the ",(0,r.jsx)(t.a,{href:"InstallingPlugins#git",children:"Git plugin is installed in GAMA"}),", projects can be imported from a Git repository, as detailed in ",(0,r.jsx)(t.a,{href:"Using_Git",children:"the recipes related to the use of Git in GAMA"}),"."]})]})}function d(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},56617:(e,t,i)=>{i.d(t,{A:()=>o});const o=i.p+"assets/images/import_dialog_import-e3869e9a1ae7bfd3b489178b8b22e01b.png"},83987:(e,t,i)=>{i.d(t,{A:()=>o});const o=i.p+"assets/images/import_dialog_import_external_files-9ca14a74fe67c29491689eb5636c211f.png"},74352:(e,t,i)=>{i.d(t,{A:()=>o});const o=i.p+"assets/images/import_dialog_import_projects-5da575e89621413707fd57e121e95205.png"},54631:(e,t,i)=>{i.d(t,{A:()=>o});const o=i.p+"assets/images/import_menu_file_import-0d850bcabe5e679a56a5ac24f70b3b04.png"},28453:(e,t,i)=>{i.d(t,{R:()=>s,x:()=>l});var o=i(96540);const r={},n=o.createContext(r);function s(e){const t=o.useContext(n);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),o.createElement(n.Provider,{value:t},e.children)}}}]);