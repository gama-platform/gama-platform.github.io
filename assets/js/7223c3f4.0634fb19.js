"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[30393],{63497:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>r,toc:()=>a});var l=t(74848),o=t(28453);const i={title:"3. Connections"},s=void 0,r={id:"ThreeD_step3",title:"3. Connections",description:"Formulation",source:"@site/versioned_docs/version-1.8.1/ThreeD_step3.md",sourceDirName:".",slug:"/ThreeD_step3",permalink:"/wiki/1.8.1/ThreeD_step3",draft:!1,unlisted:!1,editUrl:"https://github.com/gama-platform/gama/wiki/ThreeD_step3/_edit",tags:[],version:"1.8.1",frontMatter:{title:"3. Connections"},sidebar:"tuto",previous:{title:"2. Moving Cells",permalink:"/wiki/1.8.1/ThreeD_step2"},next:{title:"Incremental Model",permalink:"/wiki/1.8.1/IncrementalModel"}},c={},a=[{value:"Formulation",id:"formulation",level:2},{value:"Model Definition",id:"model-definition",level:2},{value:"Cells update",id:"cells-update",level:3},{value:"Complete Model",id:"complete-model",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h2,{id:"formulation",children:"Formulation"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Mapping the network of connection"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"http://www.youtube.com/watch?feature=player_embedded&v=6ZlBU6xTcfw",children:(0,l.jsx)(n.img,{alt:"3D tutorial: creation of a 3D distance graph amon cells.",src:t(40029).A+"",width:"2274",height:"1640"})})}),"\n",(0,l.jsx)(n.h2,{id:"model-definition",children:"Model Definition"}),"\n",(0,l.jsx)(n.p,{children:"In this final step, we will display edges between cells that are within a given distance."}),"\n",(0,l.jsx)(n.h3,{id:"cells-update",children:"Cells update"}),"\n",(0,l.jsx)(n.p,{children:"We add a new reflex to collect the neighbors of the cell that are within a certain distance:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"species cells skills:[moving3D]{\n...\n    reflex compute_neighbors {\n        neighbors <- cells select ((each distance_to self) < 10);\n    }  \t\n}\n"})}),"\n",(0,l.jsxs)(n.p,{children:["Then we update the cell aspect as follows. For each element (cells) of the ",(0,l.jsx)(n.code,{children:"neighbors"})," list, we draw a line between this neighbor's location and the current cell's location."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"aspect default {\n    draw sphere(environment_size*0.01) color: #orange;\n    loop pp over: neighbors {\n        draw line([self.location,pp.location]);\n    }\t\n}\n"})}),"\n",(0,l.jsx)(n.h2,{id:"complete-model",children:"Complete Model"}),"\n",(0,l.jsxs)(n.p,{children:["The GIT version of the model can be found here ",(0,l.jsx)(n.a,{href:"https://github.com/gama-platform/gama/blob/master/msi.gama.models/models/Tutorials/3D/models/Model%2003.gaml",children:"Model 03.gaml"})]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:'model Tuto3D\n\nglobal {\n    int nb_cells <- 100;\n    int environment_size <- 100;\n    geometry shape <- cube(environment_size);\n\n    init {\n\tcreate cell number: nb_cells {\n\t    location <- {rnd(environment_size), rnd(environment_size), rnd(environment_size)};\n\t}\n    }\n}\n\nspecies cell skills: [moving3D] {\n    rgb color;\n    list<cell> neighbors;\n    int offset;\n\n    reflex move {\n\tdo wander;\n    }\n\n    reflex compute_neighbors {\n\tneighbors <- cell select ((each distance_to self) < 10);\n    }\n\n    aspect default {\n\tdraw sphere(environment_size * 0.01) color: #orange;\n\tloop pp over: neighbors {\n\t    draw line([self.location, pp.location]);\n\t}\n    }\n}\n\nexperiment Tuto3D type: gui {\n    parameter "Initial number of cells: " var: nb_cells min: 1 max: 1000 category: "Cells";\n    output {\n\tdisplay View1 type: opengl background: rgb(10, 40, 55) {\n\t    graphics "env" {\n\t\tdraw cube(environment_size) color: #black empty: true;\n\t    }\n\t    species cell;\n\t}\n    }\n}\n'})})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},40029:(e,n,t)=>{t.d(n,{A:()=>l});const l=t.p+"assets/images/3D_model_3-f4cb0ac76b52df6f3c17f416a2ca8cbe.png"},28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>r});var l=t(96540);const o={},i=l.createContext(o);function s(e){const n=l.useContext(i);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),l.createElement(i.Provider,{value:n},e.children)}}}]);