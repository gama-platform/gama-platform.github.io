"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[94502],{68398:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>l,toc:()=>d});var t=i(74848),s=i(28453);const a={title:"Changes from 1.6.1 to 1.8"},o=void 0,l={id:"New-Version-Changes",title:"Changes from 1.6.1 to 1.8",description:"Java version",source:"@site/versioned_docs/version-1.8.1/New-Version-Changes.md",sourceDirName:".",slug:"/New-Version-Changes",permalink:"/wiki/1.8.1/New-Version-Changes",draft:!1,unlisted:!1,editUrl:"https://github.com/gama-platform/gama/wiki/New-Version-Changes/_edit",tags:[],version:"1.8.1",frontMatter:{title:"Changes from 1.6.1 to 1.8"},sidebar:"main",previous:{title:"Introduction",permalink:"/wiki/1.8.1/Overview"},next:{title:"Next-Version-Goals",permalink:"/wiki/1.8.1/Next-Version-Goals"}},r={},d=[{value:"Java version",id:"java-version",level:2},{value:"Changes between 1.6.1 and 1.7/1.8 that can influence the dynamics of models",id:"changes-between-161-and-1718-that-can-influence-the-dynamics-of-models",level:2},{value:"Simulations",id:"simulations",level:2},{value:"Language",id:"language",level:2},{value:"Data import",id:"data-import",level:2},{value:"Navigator",id:"navigator",level:2},{value:"Editor",id:"editor",level:2},{value:"Headless",id:"headless",level:2},{value:"Models library",id:"models-library",level:2},{value:"Preferences",id:"preferences",level:2},{value:"Simulation displays",id:"simulation-displays",level:2},{value:"Error view",id:"error-view",level:2},{value:"Validation",id:"validation",level:2},{value:"Console",id:"console",level:2},{value:"Monitor view",id:"monitor-view",level:2},{value:"GAMA-wide online help on the language",id:"gama-wide-online-help-on-the-language",level:2},{value:"Serialization",id:"serialization",level:2},{value:"Allow TCP, UDP and MQTT communications between agents in different simulations",id:"allow-tcp-udp-and-mqtt-communications-between-agents-in-different-simulations",level:2}];function c(e){const n={code:"code",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"java-version",children:"Java version"}),"\n",(0,t.jsxs)(n.p,{children:["Due to changes in the libraries used by GAMA 1.7 and 1.8, this version now ",(0,t.jsx)(n.strong,{children:"requires JDK/JVM 1.8"})," to run. Please note that GAMA ",(0,t.jsx)(n.strong,{children:"has not been tested with JDK 1.9 and 1.10"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"changes-between-161-and-1718-that-can-influence-the-dynamics-of-models",children:"Changes between 1.6.1 and 1.7/1.8 that can influence the dynamics of models"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Initialization order between the initialization of variables and the execution of the ",(0,t.jsx)(n.code,{children:"init"})," block in grids\ninit -> vars in 1.6.1 / vars -> init in 1.7"]}),"\n",(0,t.jsx)(n.li,{children:"Initialization order of agents -> now, the init block of the agents are not executed at the end of the global init, but during it.\nput a sample model to explain the order of creation and its differences"}),"\n",(0,t.jsx)(n.li,{children:"Initialization of vars to their default value\nmap ? list ?"}),"\n",(0,t.jsx)(n.li,{children:"Systematic casting and verification of types\ngive examples"}),"\n",(0,t.jsx)(n.li,{children:"header of CSV files: be careful, in GAMA 1.7, if the first line is detected as a header, it is not read when the file is casted as a matrix (so the first row of the matrix is not the header, but the first line of data)\ngives examples"}),"\n",(0,t.jsxs)(n.li,{children:["the step of batch experiments is now executed after all repetitions of simulations are done (not after each one). They can however be still accessed using the attributes ",(0,t.jsx)(n.code,{children:"simulations"})," (see Batch.gaml in Models Library)"]}),"\n",(0,t.jsx)(n.li,{children:"signal and diffuse have been merged into a single statement"}),"\n",(0,t.jsxs)(n.li,{children:["facets do not accept a space between their identifier and the ",(0,t.jsx)(n.code,{children:":"})," anymore."]}),"\n",(0,t.jsx)(n.li,{children:"simplification of equation/solve statements and deprecation of old facets"}),"\n",(0,t.jsxs)(n.li,{children:["in FIPA skill, ",(0,t.jsx)(n.code,{children:"content"})," is replaced everywhere with ",(0,t.jsx)(n.code,{children:"contents"})]}),"\n",(0,t.jsxs)(n.li,{children:["in FIPA skill, ",(0,t.jsx)(n.code,{children:"receivers"})," is replaced everywhere with ",(0,t.jsx)(n.code,{children:"to"})]}),"\n",(0,t.jsxs)(n.li,{children:["in FIPA skill, ",(0,t.jsx)(n.code,{children:"messages"})," is replaced by ",(0,t.jsx)(n.code,{children:"mailbox"})]}),"\n",(0,t.jsxs)(n.li,{children:["The pseudo-attribute ",(0,t.jsx)(n.code,{children:"user_location"}),' has been removed (not deprecated, unfortunately) and replaced by the "unit" ',(0,t.jsx)(n.code,{children:"#user_location"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["The actions called by an ",(0,t.jsx)(n.code,{children:"event"})," layer do not need anymore to define ",(0,t.jsx)(n.code,{children:"point"})," and ",(0,t.jsx)(n.code,{children:"list<agent>"})," arguments to receive the mouse location and the list of agents selected. Instead, they can now use ",(0,t.jsx)(n.code,{children:"#user_location"})," and they have to compute the selected agents by themselves (using an arbitrary function)."]}),"\n",(0,t.jsx)(n.li,{children:"The random number generators now better handle seeding (larger range), but it can change the series of values previously obtained from a given seed in 1.6.1"}),"\n",(0,t.jsx)(n.li,{children:"all models now have a starting_date and a current_date. They then don't begin at a hypothetical \"zero\" date, but at the epoch date defined by ISO 8601 (1970/1/1). It should not change models that don't rely on dates, except that:"}),"\n",(0,t.jsxs)(n.li,{children:["the ",(0,t.jsx)(n.code,{children:"#year"})," (and its nicknames ",(0,t.jsx)(n.code,{children:"#y"}),", ",(0,t.jsx)(n.code,{children:"#years"}),") and ",(0,t.jsx)(n.code,{children:"#month"})," (and its nickname ",(0,t.jsx)(n.code,{children:"#month"}),") do not longer have a default value (of resp. 30 days and 360 days). Instead, they are always evaluated against the current_date of the model. If no starting_date is defined, the values of ",(0,t.jsx)(n.code,{children:"#month"})," and ",(0,t.jsx)(n.code,{children:"#year"})," will then depend on the sequence of months and year since epoch day."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"as_time"}),", ",(0,t.jsx)(n.code,{children:"as_system_time"}),", ",(0,t.jsx)(n.code,{children:"as_date"})," and ",(0,t.jsx)(n.code,{children:"as_system_date"})," have been removed"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"simulations",children:"Simulations"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"simulations can now be run in parallel withing an experiment (with their outputs, displays, etc.)"}),"\n",(0,t.jsx)(n.li,{children:"batch experiments inherit from this possibility and can now run their repetitions in parallel too."}),"\n",(0,t.jsxs)(n.li,{children:["concurrency between agents is now possible and can be controlled on a species/grid/ask basis (from multi-threaded concurrency to complete parallelism within a species/grid or between the targets of an ",(0,t.jsx)(n.code,{children:"ask"})," statement)"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"language",children:"Language"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"gama"})," : a new immutable agent that can be invoked to change preferences or access to platform-only properties (like ",(0,t.jsx)(n.code,{children:"machine-time"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"abort"}),": a new behavior (like ",(0,t.jsx)(n.code,{children:"reflex"})," or ",(0,t.jsx)(n.code,{children:"init"}),") that is executed once when the agent is about to die"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"try"})," and ",(0,t.jsx)(n.code,{children:"catch"})," statements now provide a robust way to catch errors happening in the simulations."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"super"})," (instead of ",(0,t.jsx)(n.code,{children:"self"}),") and ",(0,t.jsx)(n.code,{children:"invoke"})," (instead of ",(0,t.jsx)(n.code,{children:"do"}),") can now be used to call an action defined in a parent species."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"date"})," : new data type that offers the possibility to use a real calendar, to define a ",(0,t.jsx)(n.code,{children:"starting_date"})," and to query a ",(0,t.jsx)(n.code,{children:"current_date"})," from a simulation, to parse dates from date files or to output them in custom formats. Dates can be added, subtracted, compared. Various new operators (",(0,t.jsx)(n.code,{children:"minus_months"}),", etc.) allow for a fine manipulation of their data. Time units (",(0,t.jsx)(n.code,{children:"#sec"}),", ",(0,t.jsx)(n.code,{children:"#s"}),", ",(0,t.jsx)(n.code,{children:"#mn"}),", ",(0,t.jsx)(n.code,{children:"#minute"}),", ",(0,t.jsx)(n.code,{children:"#h"}),", ",(0,t.jsx)(n.code,{children:"#hour"}),", ",(0,t.jsx)(n.code,{children:"#day"}),", etc.) can be used in conjunction with them. Interval of dates (date1 to date2) can be created and used as a basis for loops, etc. Various simple operators allow for defining conditions based on the current_date (after(date1), before(date2), since(date1), etc.)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"font"})," type allows to define fonts more precisely in ",(0,t.jsx)(n.code,{children:"draw"})," statements"]}),"\n",(0,t.jsx)(n.li,{children:"BDI control architecture for agents"}),"\n",(0,t.jsx)(n.li,{children:"file management, new operators, new statements, new skills(?), new built-in variables, files can now download their contents from the web by using standard http: https: addresses instead of file paths."}),"\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:"save"})," can now directly manipulate files and ... save them. So something like ",(0,t.jsx)(n.code,{children:'save shape_file("bb.shp", my_agents collect each.shape);'})," is possible. In addition, a new facet ",(0,t.jsx)(n.code,{children:"attributes"})," allows to define complex attributes to be saved."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"assert"})," has a simpler syntax and can be used in any behaviour to raise an error if a condition is not met."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"test"})," is a new type of experiments (",(0,t.jsx)(n.code,{children:"experiment aaa type: test ... "}),"), equivalent to a ",(0,t.jsx)(n.code,{children:"batch"})," with an exhaustive search method, which automatically displays the status of tests found in the model."]}),"\n",(0,t.jsxs)(n.li,{children:["new operators (",(0,t.jsx)(n.code,{children:"sum_of"}),", ",(0,t.jsx)(n.code,{children:"product_of"}),", etc.)"]}),"\n",(0,t.jsx)(n.li,{children:"casting of files works"}),"\n",(0,t.jsx)(n.li,{children:"co-modeling (importation of micro-models that can be managed within a macro-model)"}),"\n",(0,t.jsxs)(n.li,{children:["populations of agents can now be easily exported to CSV files using the ",(0,t.jsx)(n.code,{children:"save"})," statement"]}),"\n",(0,t.jsxs)(n.li,{children:["Simple ",(0,t.jsx)(n.code,{children:"messaging"})," skill between agents"]}),"\n",(0,t.jsxs)(n.li,{children:["Terminal commands can now be issued from within GAMA using the ",(0,t.jsx)(n.code,{children:"console"})," operator"]}),"\n",(0,t.jsxs)(n.li,{children:["New ",(0,t.jsx)(n.code,{children:"status"})," statement allows to change the text of the status."]}),"\n",(0,t.jsx)(n.li,{children:"light statement in 3D display provides the possibility to custom your lights (point lights, direction lights, spot lights)"}),"\n",(0,t.jsxs)(n.li,{children:["Displays can now inherit from other displays (facets ",(0,t.jsx)(n.code,{children:"parent"})," and ",(0,t.jsx)(n.code,{children:"virtual"})," to describe abstract displays)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"on_change:"})," facet for attributes/parameters allows to define a sequence of statements to run whenever the value changes."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"species"})," and ",(0,t.jsx)(n.code,{children:"experiment"})," now support the ",(0,t.jsx)(n.code,{children:"virtual"})," boolean facet (virtual species can not be instantiated, and virtual experiments do not show up)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"experiment"})," now supports the ",(0,t.jsx)(n.code,{children:"auto_run"})," boolean facet (to run automatically when launched)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"experiment"})," now supports the ",(0,t.jsx)(n.code,{children:"benchmark"})," boolean facet (to produce a CSV summary of the time spent in the different statements / operators of GAMA)"]}),"\n",(0,t.jsxs)(n.li,{children:["experiments can now have their own file (",(0,t.jsx)(n.code,{children:"xxx.experiment"}),") and specify the model they are targeting by providing the path to the model in the new ",(0,t.jsx)(n.code,{children:"model:"})," facet (similar to ",(0,t.jsx)(n.code,{children:"import"}),")."]}),"\n",(0,t.jsxs)(n.li,{children:["experiments can sport a new type: ",(0,t.jsx)(n.code,{children:"test"}),", a specialised type of batch experiment that can be run automatically from the GUI or in headless and reports back the result of the tests found in its model"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"data-import",children:"Data import"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"draw of complex shapes through obj file"}),"\n",(0,t.jsx)(n.li,{children:"new types fo files are taken into account: geotiff and dxf"}),"\n",(0,t.jsx)(n.li,{children:"viewers for common files"}),"\n",(0,t.jsx)(n.li,{children:"addition of plugin and test models"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"navigator",children:"Navigator"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Shapefiles are now copied, pasted and deleted together with their support files"}),"\n",(0,t.jsxs)(n.li,{children:["External files are automatically linked from the workspace and the links are filed under an automatically created ",(0,t.jsx)(n.code,{children:"external"})," folder in the project"]}),"\n",(0,t.jsx)(n.li,{children:'The "Refresh" command in the navigator pop-up refreshes the files, cleans the metadata and recompiles the models in order to obtain a "fresh" workspace again'}),"\n",(0,t.jsx)(n.li,{children:"A search control allows to instantaneously find models based on their names (not contents)"}),"\n",(0,t.jsxs)(n.li,{children:["Wizards for creating ",(0,t.jsx)(n.code,{children:".experiment"})," file and test experiments"]}),"\n",(0,t.jsx)(n.li,{children:"The new project Wizard now leads by default to the new file wizard"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"editor",children:"Editor"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"doc on built-in elements, templates, shortcuts to common tasks, hyperlinks to files used"}),"\n",(0,t.jsx)(n.li,{children:"improvement in time, gathering of infos/todos"}),"\n",(0,t.jsx)(n.li,{children:"warnings can be removed from model files"}),"\n",(0,t.jsx)(n.li,{children:"resources / files can be dropped into editors to obtain declaration/import of the corresponding files"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"headless",children:"Headless"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["A new option ",(0,t.jsx)(n.code,{children:"-validate path/to/dir"})," allows to run a complete validation of all the models in the directory"]}),"\n",(0,t.jsxs)(n.li,{children:["A new option ",(0,t.jsx)(n.code,{children:"-test path/to/dir"})," allows to run all the tests defined in a directory"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"models-library",children:"Models library"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"New models (make a list)"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"preferences",children:"Preferences"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"For performances and bug fixes in displays"}),"\n",(0,t.jsx)(n.li,{children:"For charts defaults"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"simulation-displays",children:"Simulation displays"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"OpenGL displays should be up to 3 times faster in rendering"}),"\n",(0,t.jsx)(n.li,{children:"fullscreen mode for displays (ESC key)"}),"\n",(0,t.jsx)(n.li,{children:"CTRL+O for overlay and CTRL+L for layers side controls"}),"\n",(0,t.jsx)(n.li,{children:"cleaner OpenGL displays (less garbage, better drawing of lines, rotation helper, sticky ROI, etc.)"}),"\n",(0,t.jsx)(n.li,{children:"possibility to use a new OpenGl pipeline and to define keystoning parameters (for projections)"}),"\n",(0,t.jsx)(n.li,{children:"faster java2D displays (esp. on zoom)"}),"\n",(0,t.jsx)(n.li,{children:"better user interaction (mouse move, hover, key listener)"}),"\n",(0,t.jsx)(n.li,{children:"a whole new set of charts"}),"\n",(0,t.jsx)(n.li,{children:"getting values when moving the mouse on charts"}),"\n",(0,t.jsxs)(n.li,{children:["possibility to declare ",(0,t.jsx)(n.code,{children:"permanent layout: "})," + ",(0,t.jsx)(n.code,{children:"#splitted"}),", ",(0,t.jsx)(n.code,{children:"#horizontal"}),", ",(0,t.jsx)(n.code,{children:"#vertical"}),", ",(0,t.jsx)(n.code,{children:"#stacked"})," in the ",(0,t.jsx)(n.code,{children:"output"})," section to automatically layout the display view."]}),"\n",(0,t.jsx)(n.li,{children:'Outputs can now be managed from the "Views" menu. Closed outputs can be reopened.'}),"\n",(0,t.jsx)(n.li,{children:"Changing simulation names is reflected in their display titles (and it can be dynamic)"}),"\n",(0,t.jsx)(n.li,{children:"OpenGL displays now handle rotations of 2D and 3D shapes, combinations of textures and colours, and keystoning"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"error-view",children:"Error view"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Much faster (up to 100x !) display of errors"}),"\n",(0,t.jsx)(n.li,{children:"Contextual menu to copy the text of errors to clipboard or open the editor on it"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"validation",children:"Validation"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Faster validation of multi-file models (x2 approx.)"}),"\n",(0,t.jsx)(n.li,{children:"Much less memory used compared to 1.6.1 (/10 approx.)"}),"\n",(0,t.jsx)(n.li,{children:'No more "false positive" errors'}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"console",children:"Console"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Interactive console allows to directly interact with agents (experiments, simulations and any agent) and get a direct feedback on the impact of code execution using a new interpreter integrated with the console. Available in the modeling perspective (to interact with the new ",(0,t.jsx)(n.code,{children:"gama"})," agent) as well as the simulation perspective (to interact with the current ",(0,t.jsx)(n.code,{children:"experiment"})," agent)."]}),"\n",(0,t.jsx)(n.li,{children:"Console now accepts colored text output"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"monitor-view",children:"Monitor view"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"monitors can have colors"}),"\n",(0,t.jsx)(n.li,{children:"monitors now have contextual menus depending on the value displayed (save as CSV, inspect, browse...)"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"gama-wide-online-help-on-the-language",children:"GAMA-wide online help on the language"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"A global search engine is now available in the top-right corner of the GAMA window to look for GAML idioms"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"serialization",children:"Serialization"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Serialize simulations and replay them"}),"\n",(0,t.jsx)(n.li,{children:"Serialization and deserialization of agents between simulations"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"allow-tcp-udp-and-mqtt-communications-between-agents-in-different-simulations",children:"Allow TCP, UDP and MQTT communications between agents in different simulations"})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>l});var t=i(96540);const s={},a=t.createContext(s);function o(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);