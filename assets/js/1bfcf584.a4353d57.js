"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2848],{28453:(n,e,i)=>{i.d(e,{R:()=>r,x:()=>l});var t=i(96540);const s={},o=t.createContext(s);function r(n){const e=t.useContext(o);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:r(n.components),t.createElement(o.Provider,{value:e},n.children)}},46087:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>a,contentTitle:()=>l,default:()=>p,frontMatter:()=>r,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"Event__CP12traffic","title":"Traffic simulation and Physics constraints operators","description":"Traffic simulation","source":"@site/versioned_docs/version-1.8.2-RC2/Event__CP12traffic.md","sourceDirName":".","slug":"/Event__CP12traffic","permalink":"/wiki/1.8.2-RC2/Event__CP12traffic","draft":false,"unlisted":false,"editUrl":"https://github.com/gama-platform/gama/wiki/Event__CP12traffic/_edit","tags":[],"version":"1.8.2-RC2","frontMatter":{"title":"Traffic simulation and Physics constraints operators"}}');var s=i(74848),o=i(28453);const r={title:"Traffic simulation and Physics constraints operators"},l=void 0,a={},c=[];function d(n){const e={a:"a",code:"code",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Traffic simulation"})}),"\n",(0,s.jsx)(e.p,{children:"A first task that we done was to define a new plug-in in order to take into account the fact that a road has a limited number of lanes."}),"\n",(0,s.jsx)(e.p,{children:'We propose a plug-in that contains the driving plug-in. This plug-in extends the moving skill. In particular, it proposes a new primitive "gotoTraffic" that integrates a collision avoiding algorithm.\n2 models (in "models/experimental models") were proposed to illustrate the use of our plug-in.'}),"\n",(0,s.jsxs)(e.p,{children:["DrivingSkill.java implements a new skill in ",(0,s.jsx)(e.code,{children:"package msi.gaml.extensions.traffic"})]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:'@skill("driving")\npublic class DrivingSkill extends MovingSkill{\n...\n}\n'})}),"\n",(0,s.jsxs)(e.p,{children:["New model in ",(0,s.jsx)(e.code,{children:"msi.gama.models/experimental_models/traffic"})]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Physics constraints operators"})}),"\n",(0,s.jsxs)(e.p,{children:["A second plugin is under development concerning physic computation. In particular, it allows to handle collisions between two convex polygons. A first toy model concerning pool game was developed.\nLibrary used: ",(0,s.jsx)(e.a,{href:"http://www.jbox2d.org/",children:"http://www.jbox2d.org/"})]}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.code,{children:"src/msi/gaml/extensions/physics/PhysicsSkill.java"})," implements a new skill in ",(0,s.jsx)(e.code,{children:"package msi.gaml.extensions.physics"})]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:'@skill("physical")\npublic class PhysicsSkill extends Skill{\n        @setter("physical_world")\n        public void setWorldAgent(final IAgent _agent, final IAgent _world){\n                if(_world == null)\n                        return;\n                        \n                PhysicalWorldAgent pwa = (PhysicalWorldAgent)_world;\n                pwa.registerAgent(_agent);\n        }\n\n\n'})})]})}function p(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(d,{...n})}):d(n)}}}]);