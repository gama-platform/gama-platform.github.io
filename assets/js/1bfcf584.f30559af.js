"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[42982],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=i,d=u["".concat(s,".").concat(m)]||u[m]||f[m]||a;return n?r.createElement(d,o(o({ref:t},c),{},{components:n})):r.createElement(d,o({ref:t},c))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:i,o[1]=l;for(var p=2;p<a;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6109:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>l,metadata:()=>p,toc:()=>u});var r=n(87462),i=n(63366),a=(n(67294),n(3905)),o=["components"],l={title:"Traffic simulation and Physics constraints operators"},s=void 0,p={unversionedId:"Event__CP12traffic",id:"version-1.8.2-RC2/Event__CP12traffic",title:"Traffic simulation and Physics constraints operators",description:"Traffic simulation",source:"@site/versioned_docs/version-1.8.2-RC2/Event__CP12traffic.md",sourceDirName:".",slug:"/Event__CP12traffic",permalink:"/wiki/Event__CP12traffic",draft:!1,editUrl:"https://github.com/gama-platform/gama/wiki/Event__CP12traffic/_edit",tags:[],version:"1.8.2-RC2",frontMatter:{title:"Traffic simulation and Physics constraints operators"}},c={},u=[],f={toc:u},m="wrapper";function d(e){var t=e.components,n=(0,i.Z)(e,o);return(0,a.kt)(m,(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Traffic simulation")),(0,a.kt)("p",null,"A first task that we done was to define a new plug-in in order to take into account the fact that a road has a limited number of lanes."),(0,a.kt)("p",null,'We propose a plug-in that contains the driving plug-in. This plug-in extends the moving skill. In particular, it proposes a new primitive "gotoTraffic" that integrates a collision avoiding algorithm.\n2 models (in "models/experimental models") were proposed to illustrate the use of our plug-in.'),(0,a.kt)("p",null,"DrivingSkill.java implements a new skill in ",(0,a.kt)("inlineCode",{parentName:"p"},"package msi.gaml.extensions.traffic")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'@skill("driving")\npublic class DrivingSkill extends MovingSkill{\n...\n}\n')),(0,a.kt)("p",null,"New model in ",(0,a.kt)("inlineCode",{parentName:"p"},"msi.gama.models/experimental_models/traffic")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Physics constraints operators")),(0,a.kt)("p",null,"A second plugin is under development concerning physic computation. In particular, it allows to handle collisions between two convex polygons. A first toy model concerning pool game was developed.\nLibrary used: ",(0,a.kt)("a",{parentName:"p",href:"http://www.jbox2d.org/"},"http://www.jbox2d.org/")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"src/msi/gaml/extensions/physics/PhysicsSkill.java")," implements a new skill in ",(0,a.kt)("inlineCode",{parentName:"p"},"package msi.gaml.extensions.physics")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'@skill("physical")\npublic class PhysicsSkill extends Skill{\n        @setter("physical_world")\n        public void setWorldAgent(final IAgent _agent, final IAgent _world){\n                if(_world == null)\n                        return;\n                        \n                PhysicalWorldAgent pwa = (PhysicalWorldAgent)_world;\n                pwa.registerAgent(_agent);\n        }\n\n\n')))}d.isMDXComponent=!0}}]);