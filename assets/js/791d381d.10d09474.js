"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[3943],{85556:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var i=n(85893),s=n(11151);const o={title:"The 'model' built-in species (Under Construction)"},r=void 0,c={id:"ModelBuiltIn",title:"The 'model' built-in species (Under Construction)",description:"As described in the presentation of GAML, any model in GAMA is a species (introduced by the keyword global) which directly inherits from an abstract species called model. This abstract species (sub-species of agent) defines several attributes and actions that can then be used in any global section of any model.",source:"@site/versioned_docs/version-1.8.1/ModelBuiltIn.md",sourceDirName:".",slug:"/ModelBuiltIn",permalink:"/wiki/1.8.1/ModelBuiltIn",draft:!1,unlisted:!1,editUrl:"https://github.com/gama-platform/gama/wiki/ModelBuiltIn/_edit",tags:[],version:"1.8.1",frontMatter:{title:"The 'model' built-in species (Under Construction)"},sidebar:"main",previous:{title:"The 'agent' built-in species (Under Construction)",permalink:"/wiki/1.8.1/AgentBuiltIn"},next:{title:"The 'experiment' built-in species (Under Construction)",permalink:"/wiki/1.8.1/ExperimentBuiltIn"}},d={},l=[{value:"<code>model</code> attributes",id:"model-attributes",level:2},{value:"<code>model</code> actions",id:"model-actions",level:2}];function a(e){const t={a:"a",code:"code",h2:"h2",p:"p",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:["As described in the ",(0,i.jsx)(t.a,{href:"Introduction",children:"presentation of GAML"}),", any model in GAMA is a species (introduced by the keyword ",(0,i.jsx)(t.a,{href:"GlobalSpecies",children:(0,i.jsx)(t.code,{children:"global"})}),") which directly inherits from an abstract species called ",(0,i.jsx)(t.code,{children:"model"}),". This abstract species (sub-species of ",(0,i.jsx)(t.a,{href:"AgentBuiltIn",children:(0,i.jsx)(t.code,{children:"agent"})}),") defines several attributes and actions that can then be used in any global section of any model."]}),"\n",(0,i.jsxs)(t.h2,{id:"model-attributes",children:[(0,i.jsx)(t.code,{children:"model"})," attributes"]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"model"})," defines several attributes, which, in addition to the attributes inherited from ",(0,i.jsx)(t.a,{href:"AgentBuiltIn",children:(0,i.jsx)(t.code,{children:"agent"})}),", form the minimal set of knowledge a model can manipulate.\n*"]}),"\n",(0,i.jsxs)(t.h2,{id:"model-actions",children:[(0,i.jsx)(t.code,{children:"model"})," actions"]})]})}function u(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},11151:(e,t,n)=>{n.d(t,{Z:()=>c,a:()=>r});var i=n(67294);const s={},o=i.createContext(s);function r(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);