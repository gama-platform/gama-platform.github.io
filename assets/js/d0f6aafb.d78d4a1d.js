"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[61029],{15560:(e,t,a)=>{a.d(t,{A:()=>i});const i=a.p+"assets/images/parameters_all_graphical_elements-05d81d1b70a32ae5a50798530135409d.png"},28453:(e,t,a)=>{a.d(t,{R:()=>s,x:()=>o});var i=a(96540);const n={},r=i.createContext(n);function s(e){const t=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),i.createElement(r.Provider,{value:t},e.children)}},31264:(e,t,a)=>{a.d(t,{A:()=>i});const i=a.p+"assets/images/parameters_parameter_view_buttons-a1a48fa95cdc6c8cae7de86e6604802b.png"},39815:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>s,metadata:()=>i,toc:()=>m});const i=JSON.parse('{"id":"ParametersView","title":"Parameters View","description":"In the case of an experiment, the modeler can define the parameters s/he wants to be able to modify to explore the simulation, and thus the ones he wants to be able to display and alter in the GUI interface.","source":"@site/versioned_docs/version-1.8.2-RC2/ParametersView.md","sourceDirName":".","slug":"/ParametersView","permalink":"/wiki/1.8.2-RC2/ParametersView","draft":false,"unlisted":false,"editUrl":"https://github.com/gama-platform/gama/wiki/ParametersView/_edit","tags":[],"version":"1.8.2-RC2","frontMatter":{"title":"Parameters View"},"sidebar":"main","previous":{"title":"Controls of experiments","permalink":"/wiki/1.8.2-RC2/MenusAndCommands"},"next":{"title":"Inspectors and monitors","permalink":"/wiki/1.8.2-RC2/InspectorsAndMonitors"}}');var n=a(74848),r=a(28453);const s={title:"Parameters View"},o=void 0,l={},m=[{value:"Table of contents",id:"table-of-contents",level:2},{value:"Parameters View",id:"parameters-view",level:2},{value:"Modification of parameters values",id:"modification-of-parameters-values",level:2}];function d(e){const t={a:"a",code:"code",h2:"h2",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.p,{children:["In the case of an ",(0,n.jsx)(t.a,{href:"DefiningGUIExperiment",children:"experiment"}),", the modeler can ",(0,n.jsx)(t.a,{href:"DefiningParameters",children:"define the parameters"})," s/he wants to be able to modify to explore the simulation, and thus the ones he wants to be able to display and alter in the GUI interface."]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"It important to notice that all modifications made in the parameters will be taken into account in case of simulation reload only. Launch of a new experiment from the model perspective will erase the modifications."})}),"\n",(0,n.jsx)(t.h2,{id:"table-of-contents",children:"Table of contents"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.a,{href:"#parameters-view",children:"Parameters View"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"#parameters-view",children:"Parameters View"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"#modification-of-parameters-values",children:"Modification of parameters values"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"parameters-view",children:"Parameters View"}),"\n",(0,n.jsxs)(t.p,{children:["The modeler can ",(0,n.jsx)(t.a,{href:"DefiningParameters",children:"define parameters"})," that can be displayed in the GUI and that are sorted by categories. Note that the interface will depend on the data type of the parameter: e.g. for string parameters, a simple text box will be displayed whereas a color selector will be available for color parameters. It can also depend on the way the parameter is defined: an integer or a float parameter will be displayed with a slider if its min and max values are defined, and a simple text field otherwise. The parameter's value displayed is the initial value provided to the variables associated with the parameters in the model."]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"Example of parameters view.",src:a(88439).A+"",width:"910",height:"776"})}),"\n",(0,n.jsx)(t.p,{children:"The above parameters view is generated from the following code:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:'global\n{\n\tint i;\n\tfloat f;\n\tstring s;\n\tlist l;\n\tmatrix m;\n\tpair p;\n\trgb c;\n}\n\nexperiment maths type: gui {\n    parameter "my_integer" var: i <- 0 category:"Simple types";\n    parameter "my_float" var: f <- 0.0 category:"Simple types";\n    parameter "my_string" var: s <- "" category:"Simple types";\n\n    parameter "my_list" var: l <- [] category:"Complex types";\n    parameter "my_matrix" var: m <- matrix([[1,2],[3,4]]) category:"Complex types";\n    parameter "my_pair" var: p <- 3::5 category:"Complex types";\n    parameter "my_color" var: c <- #green category:"Complex types";\n\n    output {}\n}\n'})}),"\n",(0,n.jsx)(t.p,{children:"Click on Edit button in case of list or map parameters or the color or matrix will open an additional window to modify the parameter value."}),"\n",(0,n.jsxs)(t.p,{children:["The model ",(0,n.jsx)(t.code,{children:"Library models > Visualization and User Interaction > GUI Design > Interactive Elements.gaml"})," exemplifies all the possible way of displaying parameters (and other interactive elements). Even interactive elements (buttons or parameters will a behavior associated with a value change) can be added to the Parameter View."]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"All the graphical way of viewing parameters in the simulation perspective.",src:a(15560).A+"",width:"2472",height:"2070"})}),"\n",(0,n.jsx)(t.h2,{id:"modification-of-parameters-values",children:"Modification of parameters values"}),"\n",(0,n.jsx)(t.p,{children:"The modeler can modify the parameter values. After modifying the parameter values, you can reload the simulation by clicking on the top-right circular arrow button."}),"\n",(0,n.jsxs)(t.p,{children:["It is important to understand that modification of a parameter value is immediately taken into account in the simulation: ",(0,n.jsx)(t.strong,{children:"the value of the variable in the model is modified"}),". ",(0,n.jsx)(t.strong,{children:"BUT"})," the effect on the simulation will depend on the use of this variable in the model:"]}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"if the variable is used at initialization of the simulation (e.g. it contains the number of agents to be created), then a change of its value will not be visible in the simulation running as it is not used,"}),"\n",(0,n.jsx)(t.li,{children:"if the variable is used during the simulation (e.g. the pheromones evaporation rate in ants models), a change in the parameter view will have an impact on the simulation behavior."}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"You can also add a new simulation to the old one, using those new parameters, by clicking on the top-right plus symbol button."}),"\n",(0,n.jsx)(t.p,{children:"If he wants to come back to the initial value of parameters, he can click on the top-right red curved arrow of the parameters view."}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"Buttons in the Parameter View.",src:a(31264).A+"",width:"568",height:"334"})})]})}function c(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},88439:(e,t,a)=>{a.d(t,{A:()=>i});const i=a.p+"assets/images/parameters_simple_parameter_view-eb27b557919a119047d10f71a2f3b2cd.png"}}]);