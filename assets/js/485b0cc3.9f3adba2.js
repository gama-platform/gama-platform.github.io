"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[1923],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>f});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=p(n),d=i,f=u["".concat(c,".").concat(d)]||u[d]||m[d]||a;return n?r.createElement(f,o(o({ref:t},l),{},{components:n})):r.createElement(f,o({ref:t},l))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[u]="string"==typeof e?e:i,o[1]=s;for(var p=2;p<a;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},94215:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>f,frontMatter:()=>s,metadata:()=>p,toc:()=>u});var r=n(87462),i=n(63366),a=(n(67294),n(3905)),o=["components"],s={title:"The 'experiment' built-in species (Under Construction)"},c=void 0,p={unversionedId:"ExperimentBuiltIn",id:"version-1.8.1/ExperimentBuiltIn",title:"The 'experiment' built-in species (Under Construction)",description:"As described in the presentation of GAML, any experiment attached to a model is a species (introduced by the keyword experiment which directly or indirectly inherits from an abstract species called experiment itself. This abstract species (sub-species of agent) defines several attributes and actions that can then be used in any experiment.",source:"@site/versioned_docs/version-1.8.1/ExperimentBuiltIn.md",sourceDirName:".",slug:"/ExperimentBuiltIn",permalink:"/wiki/1.8.1/ExperimentBuiltIn",draft:!1,editUrl:"https://github.com/gama-platform/gama/wiki/ExperimentBuiltIn/_edit",tags:[],version:"1.8.1",frontMatter:{title:"The 'experiment' built-in species (Under Construction)"},sidebar:"main",previous:{title:"The 'model' built-in species (Under Construction)",permalink:"/wiki/1.8.1/ModelBuiltIn"},next:{title:"Built-in Skills",permalink:"/wiki/1.8.1/BuiltInSkills"}},l={},u=[{value:"<code>experiment</code> attributes",id:"experiment-attributes",level:2},{value:"<code>experiment</code> actions",id:"experiment-actions",level:2}],m={toc:u},d="wrapper";function f(e){var t=e.components,n=(0,i.Z)(e,o);return(0,a.kt)(d,(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"As described in the ",(0,a.kt)("a",{parentName:"p",href:"Introduction"},"presentation of GAML"),", any experiment attached to a model is a species (introduced by the keyword ",(0,a.kt)("inlineCode",{parentName:"p"},"experiment")," which directly or indirectly inherits from an abstract species called ",(0,a.kt)("inlineCode",{parentName:"p"},"experiment")," itself. This abstract species (sub-species of ",(0,a.kt)("inlineCode",{parentName:"p"},"agent"),") defines several attributes and actions that can then be used in any experiment."),(0,a.kt)("h2",{id:"experiment-attributes"},(0,a.kt)("inlineCode",{parentName:"h2"},"experiment")," attributes"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"experiment")," defines several attributes, which, in addition to the attributes inherited from ",(0,a.kt)("a",{parentName:"p",href:"AgentBuiltIn"},(0,a.kt)("inlineCode",{parentName:"a"},"agent")),", form the minimal set of knowledge any experiment will have access to."),(0,a.kt)("h2",{id:"experiment-actions"},(0,a.kt)("inlineCode",{parentName:"h2"},"experiment")," actions"))}f.isMDXComponent=!0}}]);