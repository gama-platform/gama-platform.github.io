"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[26393],{12717:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>l,toc:()=>a});const l=JSON.parse('{"id":"ThreeD_step1","title":"1. Basic Model","description":"In this first step, we will see how to define a 3D environment and populate it.","source":"@site/../docs/ThreeD_step1.md","sourceDirName":".","slug":"/ThreeD_step1","permalink":"/wiki/next/ThreeD_step1","draft":false,"unlisted":false,"editUrl":"https://github.com/gama-platform/gama/wiki/ThreeD_step1/_edit","tags":[],"version":"current","frontMatter":{"title":"1. Basic Model"},"sidebar":"tuto","previous":{"title":"3D Tutorial","permalink":"/wiki/next/ThreeD"},"next":{"title":"2. Moving Cells","permalink":"/wiki/next/ThreeD_step2"}}');var t=i(74848),o=i(28453);const s={title:"1. Basic Model"},r=void 0,d={},a=[{value:"Formulation",id:"formulation",level:2},{value:"Model Definition",id:"model-definition",level:2},{value:"Global Section",id:"global-section",level:3},{value:"Global variables",id:"global-variables",level:4},{value:"Model initialization",id:"model-initialization",level:4},{value:"Experiment",id:"experiment",level:3},{value:"Input",id:"input",level:4},{value:"Output",id:"output",level:4},{value:"Complete Model",id:"complete-model",level:2}];function c(e){const n={code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"In this first step, we will see how to define a 3D environment and populate it."}),"\n",(0,t.jsx)(n.h2,{id:"formulation",children:"Formulation"}),"\n",(0,t.jsx)(n.p,{children:"Initialize a 3D world with a population of cells placed randomly in a 3D 100x100x100 cube."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Definition of the ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"cell"})})," species."]}),"\n",(0,t.jsxs)(n.li,{children:["Definition of the ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"nb_cells"})})," parameter."]}),"\n",(0,t.jsxs)(n.li,{children:["Creation of ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"nb_cells"})})," ",(0,t.jsx)(n.strong,{children:"cell"})," agents randomly located in the 3D environment, that is defined as a cub of dimensions: 100x100x100."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"images/3D_model_LQ.png",src:i(95753).A+"",width:"250",height:"250"})}),"\n",(0,t.jsx)(n.h2,{id:"model-definition",children:"Model Definition"}),"\n",(0,t.jsxs)(n.p,{children:["In this model, we define one species of agent: the ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"cell"})})," species. The agents will be just displayed as a blue sphere of radius 1."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"species cell {                      \n    aspect default {\n        draw sphere(1) color: #blue;   \n    }\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"global-section",children:"Global Section"}),"\n",(0,t.jsx)(n.h4,{id:"global-variables",children:"Global variables"}),"\n",(0,t.jsxs)(n.p,{children:["Definition of a global variable ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"nb_cells"})})," of type ",(0,t.jsx)(n.code,{children:"int"})," representing the number of ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"cell"})})," agents."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"global {\n    int nb_cells <- 100;\n}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"model-initialization",children:"Model initialization"}),"\n",(0,t.jsxs)(n.p,{children:["Definition of the ",(0,t.jsx)(n.code,{children:"init"})," block in order to create ",(0,t.jsx)(n.code,{children:"nb_cells"})," ",(0,t.jsx)(n.code,{children:"cell"})," agents. By default, an agent is created with a random location in x and y, and a z value equal to 0. In our case, we want to place the ",(0,t.jsx)(n.code,{children:"cell"})," agents randomly in the 3D environment so we set a random value for ",(0,t.jsx)(n.code,{children:"x"}),", ",(0,t.jsx)(n.code,{children:"y"})," and ",(0,t.jsx)(n.code,{children:"z"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"create cell number: nb_cells {\n    location <- {rnd(100), rnd(100), rnd(100)};\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"experiment",children:"Experiment"}),"\n",(0,t.jsxs)(n.p,{children:["In our model, we define a basic gui experiment called ",(0,t.jsx)(n.em,{children:"Tuto3D"})," :"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"experiment Tuto3D type: gui {\n}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"input",children:"Input"}),"\n",(0,t.jsxs)(n.p,{children:["Definition of a parameter from the global variable ",(0,t.jsx)(n.code,{children:"nb_cells"})," :"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'experiment Tuto3D type: gui {\n    parameter "Initial number of cells: " var: nb_cells min: 1 max: 1000 category: "Cells";\t\n}\n'})}),"\n",(0,t.jsx)(n.h4,{id:"output",children:"Output"}),"\n",(0,t.jsxs)(n.p,{children:["In our model, we define a display to draw the ",(0,t.jsx)(n.code,{children:"cell"})," agents in a 3D environment."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"output {\n    display View1 type:opengl {\n        species cell;\n    }\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"complete-model",children:"Complete Model"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-gaml",metastring:"reference",children:"https://github.com/gama-platform/gama.old/blob/GAMA_1.9.2/msi.gama.models/models/Tutorials/3D/models/Model%2001.gaml\n"})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>r});var l=i(96540);const t={},o=l.createContext(t);function s(e){const n=l.useContext(o);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),l.createElement(o.Provider,{value:n},e.children)}},95753:(e,n,i)=>{i.d(n,{A:()=>l});const l=i.p+"assets/images/3D_model_LQ-8daead6583d4ea06e25a6a9d1e3051f8.png"}}]);