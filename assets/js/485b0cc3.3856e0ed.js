"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[77415],{22983:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>a,contentTitle:()=>o,default:()=>p,frontMatter:()=>c,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"ExperimentBuiltIn","title":"The \'experiment\' built-in species (Under Construction)","description":"As described in the presentation of GAML, any experiment attached to a model is a species (introduced by the keyword experiment which directly or indirectly inherits from an abstract species called experiment itself. This abstract species (sub-species of agent) defines several attributes and actions that can then be used in any experiment.","source":"@site/versioned_docs/version-1.8.1/ExperimentBuiltIn.md","sourceDirName":".","slug":"/ExperimentBuiltIn","permalink":"/wiki/1.8.1/ExperimentBuiltIn","draft":false,"unlisted":false,"editUrl":"https://github.com/gama-platform/gama/wiki/ExperimentBuiltIn/_edit","tags":[],"version":"1.8.1","frontMatter":{"title":"The \'experiment\' built-in species (Under Construction)"},"sidebar":"main","previous":{"title":"The \'model\' built-in species (Under Construction)","permalink":"/wiki/1.8.1/ModelBuiltIn"},"next":{"title":"Built-in Skills","permalink":"/wiki/1.8.1/BuiltInSkills"}}');var s=i(74848),r=i(28453);const c={title:"The 'experiment' built-in species (Under Construction)"},o=void 0,a={},d=[{value:"<code>experiment</code> attributes",id:"experiment-attributes",level:2},{value:"<code>experiment</code> actions",id:"experiment-actions",level:2}];function l(e){const t={a:"a",code:"code",h2:"h2",p:"p",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:["As described in the ",(0,s.jsx)(t.a,{href:"Introduction",children:"presentation of GAML"}),", any experiment attached to a model is a species (introduced by the keyword ",(0,s.jsx)(t.code,{children:"experiment"})," which directly or indirectly inherits from an abstract species called ",(0,s.jsx)(t.code,{children:"experiment"})," itself. This abstract species (sub-species of ",(0,s.jsx)(t.code,{children:"agent"}),") defines several attributes and actions that can then be used in any experiment."]}),"\n",(0,s.jsxs)(t.h2,{id:"experiment-attributes",children:[(0,s.jsx)(t.code,{children:"experiment"})," attributes"]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"experiment"})," defines several attributes, which, in addition to the attributes inherited from ",(0,s.jsx)(t.a,{href:"AgentBuiltIn",children:(0,s.jsx)(t.code,{children:"agent"})}),", form the minimal set of knowledge any experiment will have access to."]}),"\n",(0,s.jsxs)(t.h2,{id:"experiment-actions",children:[(0,s.jsx)(t.code,{children:"experiment"})," actions"]})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,t,i)=>{i.d(t,{R:()=>c,x:()=>o});var n=i(96540);const s={},r=n.createContext(s);function c(e){const t=n.useContext(r);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);