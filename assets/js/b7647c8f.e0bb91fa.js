"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[22386],{31225:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"1.9.1","label":"1.9.1","banner":null,"badge":true,"noIndex":false,"className":"docs-version-1.9.1","isLast":true,"docsSidebars":{"main":[{"type":"category","label":"Home","collapsed":"true","items":[{"type":"link","label":"Major changes from 1.8.1 to 1.9.1","href":"/wiki/Changelog","docId":"Changelog"}],"collapsible":true,"href":"/wiki/Home"},{"type":"category","label":"Platform","collapsed":"true","items":[{"type":"category","label":"Installation and Launching","collapsed":"true","items":[{"type":"link","label":"Installation","href":"/wiki/Installation","docId":"Installation"},{"type":"link","label":"Launching GAMA","href":"/wiki/Launching","docId":"Launching"},{"type":"link","label":"Updating GAMA","href":"/wiki/Updating","docId":"Updating"},{"type":"link","label":"Installing Plugins","href":"/wiki/InstallingPlugins","docId":"InstallingPlugins"}],"collapsible":true,"href":"/wiki/InstallationAndLaunching"},{"type":"category","label":"Workspace, Projects and Models","collapsed":"true","items":[{"type":"link","label":"Navigating in the Workspace","href":"/wiki/NavigatingWorkspace","docId":"NavigatingWorkspace"},{"type":"link","label":"Changing Workspace","href":"/wiki/ChangingWorkspace","docId":"ChangingWorkspace"},{"type":"link","label":"Importing Models","href":"/wiki/ImportingModels","docId":"ImportingModels"}],"collapsible":true,"href":"/wiki/WorkspaceProjectsAndModels"},{"type":"category","label":"Editing Models","collapsed":"true","items":[{"type":"link","label":"The GAML Editor - Generalities","href":"/wiki/GamlEditorGeneralities","docId":"GamlEditorGeneralities"},{"type":"link","label":"GAML Editor tools","href":"/wiki/GamlEditorToolbar","docId":"GamlEditorToolbar"},{"type":"link","label":"Validation of Models","href":"/wiki/ValidationOfModels","docId":"ValidationOfModels"}],"collapsible":true,"href":"/wiki/EditingModels"},{"type":"category","label":"Running Experiments","collapsed":"true","items":[{"type":"link","label":"Launching Experiments from the User Interface","href":"/wiki/LaunchingExperiments","docId":"LaunchingExperiments"},{"type":"link","label":"Experiments User Interface","href":"/wiki/ExperimentsUserInterface","docId":"ExperimentsUserInterface"},{"type":"link","label":"Controls of experiments","href":"/wiki/MenusAndCommands","docId":"MenusAndCommands"},{"type":"link","label":"Parameters View","href":"/wiki/ParametersView","docId":"ParametersView"},{"type":"link","label":"Inspectors and monitors","href":"/wiki/InspectorsAndMonitors","docId":"InspectorsAndMonitors"},{"type":"link","label":"Displays","href":"/wiki/Displays","docId":"Displays"},{"type":"link","label":"Batch Specific UI","href":"/wiki/BatchSpecific","docId":"BatchSpecific"},{"type":"link","label":"Errors View","href":"/wiki/ErrorsView","docId":"ErrorsView"}],"collapsible":true,"href":"/wiki/RunningExperiments"},{"type":"category","label":"Running Headless","collapsed":"true","items":[{"type":"link","label":"Headless Batch","href":"/wiki/HeadlessBatch","docId":"HeadlessBatch"},{"type":"link","label":"Headless Server","href":"/wiki/HeadlessServer","docId":"HeadlessServer"},{"type":"link","label":"Headless Legacy","href":"/wiki/HeadlessLegacy","docId":"HeadlessLegacy"}],"collapsible":true,"href":"/wiki/RunningHeadless"},{"type":"link","label":"Preferences","href":"/wiki/Preferences","docId":"Preferences"},{"type":"link","label":"Troubleshooting","href":"/wiki/Troubleshooting","docId":"Troubleshooting"}],"collapsible":true,"href":"/wiki/PlatformDocumentation"},{"type":"category","label":"Learn GAML step by step","collapsed":"true","items":[{"type":"category","label":"Introduction","collapsed":"true","items":[{"type":"link","label":"Start with GAML","href":"/wiki/StartWithGAML","docId":"StartWithGAML"},{"type":"link","label":"Organization of a model","href":"/wiki/ModelOrganization","docId":"ModelOrganization"},{"type":"link","label":"Basic programming concepts in GAML","href":"/wiki/BasicProgrammingConceptsInGAML","docId":"BasicProgrammingConceptsInGAML"}],"collapsible":true,"href":"/wiki/Introduction"},{"type":"link","label":"Manipulate basic species","href":"/wiki/ManipulateBasicSpecies","docId":"ManipulateBasicSpecies"},{"type":"category","label":"Global Species","collapsed":"true","items":[{"type":"link","label":"Regular species","href":"/wiki/RegularSpecies","docId":"RegularSpecies"},{"type":"link","label":"Defining actions and behaviors","href":"/wiki/DefiningActionsAndBehaviors","docId":"DefiningActionsAndBehaviors"},{"type":"link","label":"Interaction between agents","href":"/wiki/InteractionBetweenAgents","docId":"InteractionBetweenAgents"},{"type":"link","label":"Attaching Skills","href":"/wiki/AttachingSkills","docId":"AttachingSkills"},{"type":"link","label":"Inheritance","href":"/wiki/Inheritance","docId":"Inheritance"}],"collapsible":true,"href":"/wiki/GlobalSpecies"},{"type":"category","label":"Defining Advanced Species","collapsed":"true","items":[{"type":"link","label":"Grid Species","href":"/wiki/GridSpecies","docId":"GridSpecies"},{"type":"link","label":"Graph Species","href":"/wiki/GraphSpecies","docId":"GraphSpecies"},{"type":"link","label":"Mirror species","href":"/wiki/MirrorSpecies","docId":"MirrorSpecies"},{"type":"link","label":"Multi-level architecture","href":"/wiki/MultiLevelArchitecture","docId":"MultiLevelArchitecture"}],"collapsible":true,"href":"/wiki/DefiningAdvancedSpecies"},{"type":"category","label":"Defining GUI Experiment","collapsed":"true","items":[{"type":"link","label":"Defining Parameters","href":"/wiki/DefiningParameters","docId":"DefiningParameters"},{"type":"link","label":"Defining displays (Generalities)","href":"/wiki/DefiningDisplaysGeneralities","docId":"DefiningDisplaysGeneralities"},{"type":"link","label":"Defining 3D Displays","href":"/wiki/Defining3DDisplays","docId":"Defining3DDisplays"},{"type":"link","label":"Defining Charts","href":"/wiki/DefiningCharts","docId":"DefiningCharts"},{"type":"link","label":"Defining monitors and inspectors","href":"/wiki/DefiningMonitorsAndInspectors","docId":"DefiningMonitorsAndInspectors"},{"type":"link","label":"Defining export files","href":"/wiki/DefiningExportFiles","docId":"DefiningExportFiles"},{"type":"link","label":"Defining user interaction","href":"/wiki/DefiningUserInteraction","docId":"DefiningUserInteraction"}],"collapsible":true,"href":"/wiki/DefiningGUIExperiment"},{"type":"category","label":"Exploring Models","collapsed":"true","items":[{"type":"link","label":"Run Several Simulations","href":"/wiki/RunSeveralSimulations","docId":"RunSeveralSimulations"},{"type":"link","label":"Defining Batch Experiments","href":"/wiki/BatchExperiments","docId":"BatchExperiments"},{"type":"link","label":"Exploration  calibration methods","href":"/wiki/ExplorationMethods","docId":"ExplorationMethods"}],"collapsible":true,"href":"/wiki/ExploringModels"},{"type":"category","label":"Optimizing Model Section","collapsed":"true","items":[{"type":"link","label":"Runtime Concepts","href":"/wiki/RuntimeConcepts","docId":"RuntimeConcepts"},{"type":"link","label":"Optimizing Models","href":"/wiki/OptimizingModels","docId":"OptimizingModels"}],"collapsible":true,"href":"/wiki/OptimizingModelsSection"},{"type":"category","label":"Multi-Paradigm Modeling","collapsed":"true","items":[{"type":"link","label":"Control Architectures","href":"/wiki/ControlArchitecture","docId":"ControlArchitecture"},{"type":"link","label":"Using Differential Equations","href":"/wiki/DifferentialEquations","docId":"DifferentialEquations"}],"collapsible":true,"href":"/wiki/MultiParadigmModeling"}],"collapsible":true,"href":"/wiki/LearnGAMLStepByStep"},{"type":"category","label":"Recipes","collapsed":"true","items":[{"type":"link","label":"Manipulate OSM Datas","href":"/wiki/ManipulateOSMDatas","docId":"ManipulateOSMDatas"},{"type":"link","label":"Implementing diffusion","href":"/wiki/Diffusion","docId":"Diffusion"},{"type":"link","label":"Using Database Access","href":"/wiki/UsingDatabase","docId":"UsingDatabase"},{"type":"link","label":"Using FIPA ACL","href":"/wiki/UsingFIPAACL","docId":"UsingFIPAACL"},{"type":"link","label":"Using BEN (simple_bdi)","href":"/wiki/Using-BEN-simple-bdi","docId":"Using-BEN-simple-bdi"},{"type":"link","label":"Advanced Driving Skill","href":"/wiki/UsingDrivingSkill","docId":"UsingDrivingSkill"},{"type":"link","label":"Manipulate Dates","href":"/wiki/ManipulateDates","docId":"ManipulateDates"},{"type":"link","label":"Implementing light","href":"/wiki/ManipulateLight","docId":"ManipulateLight"},{"type":"link","label":"Using Comodel","href":"/wiki/Comodel","docId":"Comodel"},{"type":"link","label":"Save and Restore simulations","href":"/wiki/Save-and-restore-simulations","docId":"Save-and-restore-simulations"},{"type":"link","label":"Using network","href":"/wiki/UsingNetwork","docId":"UsingNetwork"},{"type":"link","label":"Headless mode for dummies","href":"/wiki/Headless-mode-for-dummies","docId":"Headless-mode-for-dummies"},{"type":"link","label":"Calling gama from another program","href":"/wiki/HeadlessTutorial","docId":"HeadlessTutorial"},{"type":"link","label":"Writing Unit Tests in GAML","href":"/wiki/Writing_Tests","docId":"Writing_Tests"},{"type":"link","label":"Ensure model\'s reproducibility","href":"/wiki/Ensure-model-reproducibility","docId":"Ensure-model-reproducibility"},{"type":"category","label":"Going further with extensions","collapsed":"true","items":[{"type":"link","label":"Calling R from GAMA models","href":"/wiki/CallingR","docId":"CallingR"},{"type":"link","label":"The Graphical Editor","href":"/wiki/G__GraphicalEditor","docId":"G__GraphicalEditor"},{"type":"link","label":"Using Git from GAMA to version and share models","href":"/wiki/Using_Git","docId":"Using_Git"}],"collapsible":true,"href":"/wiki/Using-extensions"}],"collapsible":true,"href":"/wiki/Recipes"},{"type":"category","label":"GAML References","collapsed":"true","items":[{"type":"link","label":"Built-in Species","href":"/wiki/BuiltInSpecies","docId":"BuiltInSpecies"},{"type":"link","label":"Built-in Skills","href":"/wiki/BuiltInSkills","docId":"BuiltInSkills"},{"type":"link","label":"Built-in Architectures","href":"/wiki/BuiltInArchitectures","docId":"BuiltInArchitectures"},{"type":"link","label":"Statements","href":"/wiki/Statements","docId":"Statements"},{"type":"link","label":"Types","href":"/wiki/DataTypes","docId":"DataTypes"},{"type":"link","label":"File Types","href":"/wiki/FileTypes","docId":"FileTypes"},{"type":"category","label":"Expressions","collapsed":"true","items":[{"type":"link","label":"Literals","href":"/wiki/Literals","docId":"Literals"},{"type":"link","label":"Units and constants","href":"/wiki/UnitsAndConstants","docId":"UnitsAndConstants"},{"type":"link","label":"Pseudo-variables","href":"/wiki/PseudoVariables","docId":"PseudoVariables"},{"type":"link","label":"Variables and Attributes","href":"/wiki/VariablesAndAttributes","docId":"VariablesAndAttributes"},{"type":"link","label":"Operators (A to A)","href":"/wiki/OperatorsAA","docId":"OperatorsAA"},{"type":"link","label":"Operators (B to C)","href":"/wiki/OperatorsBC","docId":"OperatorsBC"},{"type":"link","label":"Operators (D to H)","href":"/wiki/OperatorsDH","docId":"OperatorsDH"},{"type":"link","label":"Operators (I to M)","href":"/wiki/OperatorsIM","docId":"OperatorsIM"},{"type":"link","label":"Operators (N to R)","href":"/wiki/OperatorsNR","docId":"OperatorsNR"},{"type":"link","label":"Operators (S to Z)","href":"/wiki/OperatorsSZ","docId":"OperatorsSZ"}],"collapsible":true,"href":"/wiki/Expressions"},{"type":"link","label":"Exhaustive list of GAMA Keywords","href":"/wiki/Exhaustive-list-of-GAMA-Keywords","docId":"Exhaustive-list-of-GAMA-Keywords"}],"collapsible":true,"href":"/wiki/GamlReference"},{"type":"category","label":"Developing GAMA","collapsed":"true","items":[{"type":"link","label":"Installing the GIT version","href":"/wiki/InstallingGitVersion","docId":"InstallingGitVersion"},{"type":"category","label":"Developing Extensions","collapsed":"true","items":[{"type":"link","label":"DevelopingPlugins","href":"/wiki/DevelopingPlugins","docId":"DevelopingPlugins"},{"type":"link","label":"DevelopingSkills","href":"/wiki/DevelopingSkills","docId":"DevelopingSkills"},{"type":"link","label":"Developing Statements","href":"/wiki/DevelopingStatements","docId":"DevelopingStatements"},{"type":"link","label":"Developing Operators","href":"/wiki/DevelopingOperators","docId":"DevelopingOperators"},{"type":"link","label":"Developing Types","href":"/wiki/DevelopingTypes","docId":"DevelopingTypes"},{"type":"link","label":"Developing Species","href":"/wiki/DevelopingSpecies","docId":"DevelopingSpecies"},{"type":"link","label":"Developing architecture","href":"/wiki/DevelopingControlArchitectures","docId":"DevelopingControlArchitectures"},{"type":"link","label":"Index of annotations","href":"/wiki/DevelopingIndexAnnotations","docId":"DevelopingIndexAnnotations"}],"collapsible":true,"href":"/wiki/DevelopingExtensions"},{"type":"category","label":"Introduction to GAMA Java API","collapsed":"true","items":[{"type":"link","label":"Architecture of GAMA","href":"/wiki/GamaArchitecture","docId":"GamaArchitecture"},{"type":"link","label":"IScope interface","href":"/wiki/DevelopingIScope","docId":"DevelopingIScope"}],"collapsible":true,"href":"/wiki/Introduction-To-Gama-Java-API"},{"type":"link","label":"Product your own release of GAMA","href":"/wiki/CreatingAReleaseOfGama","docId":"CreatingAReleaseOfGama"},{"type":"link","label":"Generation of the documentation","href":"/wiki/Documentation","docId":"Documentation"}],"collapsible":true,"href":"/wiki/developingGAMA"}],"tuto":[{"type":"link","label":"Tutorials","href":"/wiki/Tutorials","docId":"Tutorials"},{"type":"category","label":"Predator Prey","collapsed":"true","items":[{"type":"link","label":"1. Basic Model","href":"/wiki/PredatorPrey_step1","docId":"PredatorPrey_step1"},{"type":"link","label":"2. Vegetation Dynamic","href":"/wiki/PredatorPrey_step2","docId":"PredatorPrey_step2"},{"type":"link","label":"3. Prey Agent Behavior","href":"/wiki/PredatorPrey_step3","docId":"PredatorPrey_step3"},{"type":"link","label":"4. Inspectors and Monitors","href":"/wiki/PredatorPrey_step4","docId":"PredatorPrey_step4"},{"type":"link","label":"5. Predator Agent","href":"/wiki/PredatorPrey_step5","docId":"PredatorPrey_step5"},{"type":"link","label":"6. Breeding","href":"/wiki/PredatorPrey_step6","docId":"PredatorPrey_step6"},{"type":"link","label":"7. Agent Aspect","href":"/wiki/PredatorPrey_step7","docId":"PredatorPrey_step7"},{"type":"link","label":"8. Complex Behavior","href":"/wiki/PredatorPrey_step8","docId":"PredatorPrey_step8"},{"type":"link","label":"9. Stopping condition","href":"/wiki/PredatorPrey_step9","docId":"PredatorPrey_step9"},{"type":"link","label":"10. Charts","href":"/wiki/PredatorPrey_step10","docId":"PredatorPrey_step10"},{"type":"link","label":"11. Writing Files","href":"/wiki/PredatorPrey_step11","docId":"PredatorPrey_step11"},{"type":"link","label":"12. Image loading","href":"/wiki/PredatorPrey_step12","docId":"PredatorPrey_step12"},{"type":"link","label":"13. Model exploration","href":"/wiki/PredatorPrey_step13","docId":"PredatorPrey_step13"}],"collapsible":true,"href":"/wiki/PredatorPrey"},{"type":"category","label":"Road Traffic","collapsed":"true","items":[{"type":"link","label":"1. Loading of GIS Data","href":"/wiki/RoadTrafficModel_step1","docId":"RoadTrafficModel_step1"},{"type":"link","label":"2. People Agents","href":"/wiki/RoadTrafficModel_step2","docId":"RoadTrafficModel_step2"},{"type":"link","label":"3. Movement of People","href":"/wiki/RoadTrafficModel_step3","docId":"RoadTrafficModel_step3"},{"type":"link","label":"4. Weight for Road Network","href":"/wiki/RoadTrafficModel_step4","docId":"RoadTrafficModel_step4"},{"type":"link","label":"5. Dynamic weights","href":"/wiki/RoadTrafficModel_step5","docId":"RoadTrafficModel_step5"},{"type":"link","label":"6. Charts","href":"/wiki/RoadTrafficModel_step6","docId":"RoadTrafficModel_step6"},{"type":"link","label":"7. Automatic Road Repair","href":"/wiki/RoadTrafficModel_step7","docId":"RoadTrafficModel_step7"}],"collapsible":true,"href":"/wiki/RoadTrafficModel"},{"type":"category","label":"3D Tutorial","collapsed":"true","items":[{"type":"link","label":"1. Basic Model","href":"/wiki/ThreeD_step1","docId":"ThreeD_step1"},{"type":"link","label":"2. Moving Cells","href":"/wiki/ThreeD_step2","docId":"ThreeD_step2"},{"type":"link","label":"3. Connections","href":"/wiki/ThreeD_step3","docId":"ThreeD_step3"}],"collapsible":true,"href":"/wiki/ThreeD"},{"type":"category","label":"Incremental Model","collapsed":"true","items":[{"type":"link","label":"1. Simple SI Model","href":"/wiki/IncrementalModel_step1","docId":"IncrementalModel_step1"},{"type":"link","label":"2. Charts","href":"/wiki/IncrementalModel_step2","docId":"IncrementalModel_step2"},{"type":"link","label":"3. Integration of GIS Data","href":"/wiki/IncrementalModel_step3","docId":"IncrementalModel_step3"},{"type":"link","label":"4. Movement on Graph","href":"/wiki/IncrementalModel_step4","docId":"IncrementalModel_step4"},{"type":"link","label":"5. Visualizing in 3D","href":"/wiki/IncrementalModel_step5","docId":"IncrementalModel_step5"},{"type":"link","label":"6. Multi-Level","href":"/wiki/IncrementalModel_step6","docId":"IncrementalModel_step6"},{"type":"link","label":"7. Differential Equations","href":"/wiki/IncrementalModel_step7","docId":"IncrementalModel_step7"}],"collapsible":true,"href":"/wiki/IncrementalModel"},{"type":"category","label":"Luneray\'s flu","collapsed":"true","items":[{"type":"link","label":"1. Creation of a first basic disease spreading model","href":"/wiki/LuneraysFlu_step1","docId":"LuneraysFlu_step1"},{"type":"link","label":"2. Definition of monitors and chart outputs","href":"/wiki/LuneraysFlu_step2","docId":"LuneraysFlu_step2"},{"type":"link","label":"3. Importation of GIS data","href":"/wiki/LuneraysFlu_step3","docId":"LuneraysFlu_step3"},{"type":"link","label":"4. Use of a graph to constraint the movements of people","href":"/wiki/LuneraysFlu_step4","docId":"LuneraysFlu_step4"},{"type":"link","label":"5. Definition of 3D displays","href":"/wiki/LuneraysFlu_step5","docId":"LuneraysFlu_step5"},{"type":"link","label":"6. Exploration of the model","href":"/wiki/LuneraysFlu_step6","docId":"LuneraysFlu_step6"}],"collapsible":true,"href":"/wiki/LuneraysFlu"},{"type":"category","label":"BDI Agents","collapsed":"true","items":[{"type":"link","label":"1. Skeleton model","href":"/wiki/BDIAgents_step1","docId":"BDIAgents_step1"},{"type":"link","label":"2. BDI Agents","href":"/wiki/BDIAgents_step2","docId":"BDIAgents_step2"},{"type":"link","label":"3. Social relation","href":"/wiki/BDIAgents_step3","docId":"BDIAgents_step3"},{"type":"link","label":"4. Emotions and Personality","href":"/wiki/BDIAgents_step4","docId":"BDIAgents_step4"},{"type":"link","label":"5. Norms, obligation, and enforcement","href":"/wiki/BDIAgents_step5","docId":"BDIAgents_step5"}],"collapsible":true,"href":"/wiki/BDIAgents"}],"extra":[{"type":"category","label":"Community","collapsed":"true","items":[{"type":"link","label":"Team","href":"/wiki/Team","docId":"Team"},{"type":"link","label":"Projects","href":"/wiki/Projects","docId":"Projects"},{"type":"link","label":"Scientific References","href":"/wiki/References","docId":"References"},{"type":"link","label":"Training Session","href":"/wiki/TrainingSession","docId":"TrainingSession"}],"collapsible":true,"href":"/wiki/Community"},{"type":"category","label":"Resources","collapsed":"true","items":[{"type":"link","label":"Videos","href":"/wiki/Resources_TrainingVideos","docId":"Resources_TrainingVideos"},{"type":"link","label":"Previous Conferences","href":"/wiki/PreviousConferences","docId":"PreviousConferences"},{"type":"link","label":"Code Examples","href":"/wiki/CodeExamples","docId":"CodeExamples"},{"type":"link","label":"Pedagogical materials","href":"/wiki/Pedagogical-Materials","docId":"Pedagogical-Materials"}],"collapsible":true,"href":"/wiki/category/resources"},{"type":"link","label":"Versions of GAMA","href":"/wiki/OlderVersions","docId":"OlderVersions"}]},"docs":{"3D_Graph":{"id":"3D_Graph","title":"3D_Graph","description":"Annotation 2023-04-19 094225_3DGraph"},"3D_shapefile_loading":{"id":"3D_shapefile_loading","title":"3D_shapefile_loading","description":"Annotation 2023-04-17 043654_3Dshapefile"},"Accessing_Fields":{"id":"Accessing_Fields","title":"Accessing_Fields","description":"Annotation 2023-04-19 071034_accessingFields"},"Agent_Based_Clustering":{"id":"Agent_Based_Clustering","title":"Agent_Based_Clustering","description":"Annotation 2023-04-16 045308_kMEANS"},"Anisotropic_Diffusion_Simple_Field":{"id":"Anisotropic_Diffusion_Simple_Field","title":"Anisotropic_Diffusion_Simple_Field","description":"Annotation 2023-04-16 162623_anisotropicDiffusionSimpleField"},"AntsForaging":{"id":"AntsForaging","title":"AntsForaging","description":"Annotation 2023-04-14 182942_AntForaging"},"AntsForaging.gaml":{"id":"AntsForaging.gaml","title":"AntsForaging.gaml","description":"Annotation 2023-04-14 182942_AntForaging"},"ASCII_File_to_DEM_Representation":{"id":"ASCII_File_to_DEM_Representation","title":"ASCII_File_to_DEM_Representation","description":"Annotation 2023-04-17 060701_GridDEM"},"AttachingSkills":{"id":"AttachingSkills","title":"Attaching Skills","description":"[//]: # (startConcept|attaching_skills)","sidebar":"main"},"BasicProgrammingConceptsInGAML":{"id":"BasicProgrammingConceptsInGAML","title":"Basic programming concepts in GAML","description":"[//]: # (startConcept|programming_basis)","sidebar":"main"},"BatchExperiments":{"id":"BatchExperiments","title":"Defining Batch Experiments","description":"Batch experiments allow to execute numerous successive simulation runs. They are used to explore the parameter space of a model or to optimize a set of model parameters. Exploration methods are detailed in this page.","sidebar":"main"},"BatchSpecific":{"id":"BatchSpecific","title":"Batch Specific UI","description":"When an experiment of type Batch is run, a dedicated UI is displayed, depending on the parameters to explore and of the exploration methods.","sidebar":"main"},"BDIAgents":{"id":"BDIAgents","title":"BDI Agents","description":"This tutorial aims at presenting the use of BDI agents in GAMA. In particular, this tutorial shows how to define a BDI agents, then to add social relation between BDI agents, to add emotions and a personality to the agents and finally social norms, obligations and enforcements. These notions come from the BEN architecture, described in details in the page Using BEN architecture.","sidebar":"tuto"},"BDIAgents_step1":{"id":"BDIAgents_step1","title":"1. Skeleton model","description":"This first step consists in defining the skeleton model with the gold mines and the gold market.","sidebar":"tuto"},"BDIAgents_step2":{"id":"BDIAgents_step2","title":"2. BDI Agents","description":"This second step consists in defining the gold miner agents using the GAMA BDI architecture.","sidebar":"tuto"},"BDIAgents_step3":{"id":"BDIAgents_step3","title":"3. Social relation","description":"This third step consists in adding social relation between agents and the possibility to share information about the known gold mines.","sidebar":"tuto"},"BDIAgents_step4":{"id":"BDIAgents_step4","title":"4. Emotions and Personality","description":"This fourth step consists of adding emotions that will impact the gold miner agent behavior and defining the personality of the agents.","sidebar":"tuto"},"BDIAgents_step5":{"id":"BDIAgents_step5","title":"5. Norms, obligation, and enforcement","description":"This last step consists of adding social norms, obligations, and enforcement into the agents\' behavior.","sidebar":"tuto"},"Boids_3D_Motion":{"id":"Boids_3D_Motion","title":"Boids_3D_Motion","description":"Annotation 2023-04-17 093413_boids3D"},"BuiltInArchitectures":{"id":"BuiltInArchitectures","title":"Built-in Architectures","description":"----","sidebar":"main"},"BuiltInSkills":{"id":"BuiltInSkills","title":"Built-in Skills","description":"----","sidebar":"main"},"BuiltInSpecies":{"id":"BuiltInSpecies","title":"Built-in Species","description":"----","sidebar":"main"},"CallingR":{"id":"CallingR","title":"Calling R from GAMA models","description":"Introduction","sidebar":"main"},"Casting_Images":{"id":"Casting_Images","title":"Casting_Images","description":"Annotation 2023-04-18 120319_castingImages"},"Changelog":{"id":"Changelog","title":"Major changes from 1.8.1 to 1.9.1","description":"The GAMA development team is pleased to announce the release of GAMA 1.9.1","sidebar":"main"},"ChangingWorkspace":{"id":"ChangingWorkspace","title":"Changing Workspace","description":"It is possible, and actually common, to store different projects/models in different workspaces and to tell GAMA to switch between these workspaces. Doing so involves being able to create one or several new workspace locations (even if GAMA has been told to remember the current one) and being able to easily switch between them.","sidebar":"main"},"City_Evacuation":{"id":"City_Evacuation","title":"City_Evacuation","description":"Annotation 2023-04-16 185200_CityEscapeBDI"},"CodeExamples":{"id":"CodeExamples","title":"Code Examples","description":"This page references a number of code examples with a capture of it running in GAMA.","sidebar":"extra"},"Community":{"id":"Community","title":"Community","description":"Ask questions about a model or GAMA","sidebar":"extra"},"Comodel":{"id":"Comodel","title":"Using Comodel","description":"Introduction","sidebar":"main"},"comparison_ABM_EBM_SIR":{"id":"comparison_ABM_EBM_SIR","title":"comparison_ABM_EBM_SIR","description":"Annotation 2023-04-14 174555toyepidmodelssir_abmvebm"},"Computation_of_the_shortest_path_on_a_Grid_of_Cells":{"id":"Computation_of_the_shortest_path_on_a_Grid_of_Cells","title":"Computation_of_the_shortest_path_on_a_Grid_of_Cells","description":"Annotation 2023-04-19 095727_weightedShortestPathOnGrid"},"ContinuousFieldofVision.gaml":{"id":"ContinuousFieldofVision.gaml","title":"ContinuousFieldofVision.gaml","description":"Annotation 2023-04-15 141132_continuousFieldOfVision"},"ContinuousMove":{"id":"ContinuousMove","title":"ContinuousMove","description":"Annotation 2023-04-14 184314_ContinuousMove"},"Contour_Lines_Import":{"id":"Contour_Lines_Import","title":"Contour_Lines_Import","description":"Annotation 2023-04-17 081456_contourLines"},"Contribute":{"id":"Contribute","title":"Contribute","description":"GAMA is a free opensource software and we take pride in sharing the source code with anyone who wants to contribute to the platform. Note that GAMA is easy to extend by developing additional plugins."},"ControlArchitecture":{"id":"ControlArchitecture","title":"Control Architectures","description":"[//]: # (keyword|concept_architecture)","sidebar":"main"},"Creating_color_and_sort_cubes_by_color":{"id":"Creating_color_and_sort_cubes_by_color","title":"Creating_color_and_sort_cubes_by_color","description":"Annotation 2023-04-17 094620_bubbleSort"},"CreatingAReleaseOfGama":{"id":"CreatingAReleaseOfGama","title":"Product your own release of GAMA","description":"Install Maven if not already installed","sidebar":"main"},"DataTypes":{"id":"DataTypes","title":"Types","description":"A variable\'s or expression\'s type (or data type) determines the values it can take, plus the operations that can be performed on or with it. GAML is a statically-typed language, which means that the type of an expression is always known at compile time, and is even enforced with casting operations.","sidebar":"main"},"Defining3DDisplays":{"id":"Defining3DDisplays","title":"Defining 3D Displays","description":"OpenGL display","sidebar":"main"},"DefiningActionsAndBehaviors":{"id":"DefiningActionsAndBehaviors","title":"Defining actions and behaviors","description":"[//]: # (startConcept|actionsandbehaviors)","sidebar":"main"},"DefiningAdvancedSpecies":{"id":"DefiningAdvancedSpecies","title":"Defining advanced species","description":"In the previous chapter, we saw how to declare and manipulate regular species and the global species (as a reminder, the instance of the global species is the world agent).","sidebar":"main"},"DefiningCharts":{"id":"DefiningCharts","title":"Defining Charts","description":"[//]: # (startConcept|defining_charts)","sidebar":"main"},"DefiningDisplaysGeneralities":{"id":"DefiningDisplaysGeneralities","title":"Defining displays (Generalities)","description":"[//]: # (startConcept|2d_displays)","sidebar":"main"},"DefiningExportFiles":{"id":"DefiningExportFiles","title":"Defining export files","description":"[//]: # (startConcept|export_files)","sidebar":"main"},"DefiningGUIExperiment":{"id":"DefiningGUIExperiment","title":"Defining GUI Experiment","description":"[//]: # (startConcept|gui_experiments)","sidebar":"main"},"DefiningMonitorsAndInspectors":{"id":"DefiningMonitorsAndInspectors","title":"Defining monitors and inspectors","description":"[//]: # (startConcept|monitorsandinspectors)","sidebar":"main"},"DefiningParameters":{"id":"DefiningParameters","title":"Defining Parameters","description":"[//]: # (startConcept|define_parameters)","sidebar":"main"},"DefiningUserInteraction":{"id":"DefiningUserInteraction","title":"Defining user interaction","description":"[//]: # (keyword|concept_gui)","sidebar":"main"},"DEM_Generator":{"id":"DEM_Generator","title":"DEM_Generator","description":"Annotation 2023-04-17 175914_DEMGenerator"},"DevelopingControlArchitectures":{"id":"DevelopingControlArchitectures","title":"Developing architecture","description":"In addition to existing control architectures, developers can add new ones.","sidebar":"main"},"DevelopingExtensions":{"id":"DevelopingExtensions","title":"Developing Extensions","description":"GAMA accepts extensions to the GAML language, defined by external programmers and dynamically loaded by the platform each time it is run. Extensions can represent new built-in species, types, file-types, skills, operators, statements, new control architectures or even types of displays. Other internal structures of GAML will be progressively \\"opened\\" to this mechanism in the future: display layers (hardwired for the moment), new types of outputs (hardwired for the moment), scheduling policies (hardwired for the moment), random number generators (hardwired for the moment).","sidebar":"main"},"developingGAMA":{"id":"developingGAMA","title":"Get into the GAMA Java API","description":"GAMA is written in Java and made of tens of Eclipse plugins and projects, thousand of classes, methods and annotations. This section of the wiki should help you have a general idea on how to manipulate GAMA Java API and where to find the proper classes and methods. A general introduction to the GAMA architecture gives a general overview of the organization of Java packages and Eclipse plugins, and should be read first. In the following sub-sections we give a more practical introduction.","sidebar":"main"},"DevelopingIndexAnnotations":{"id":"DevelopingIndexAnnotations","title":"Index of annotations","description":"Annotations are used to link Java methods and classes to GAML language.","sidebar":"main"},"DevelopingIScope":{"id":"DevelopingIScope","title":"IScope interface","description":"An object of type IScope represents the context of execution of an agent (including experiments, simulations, and \\"regular\\" agents). Everywhere it is accessible (either passed as a parameter or available as an instance variable in some objects), it provides an easy access to a number of features: the current active agent, the shared random number generator, the global clock, the current simulation and experiment agents, the local variables declared in the current block, etc.","sidebar":"main"},"DevelopingOperators":{"id":"DevelopingOperators","title":"Developing Operators","description":"Operators in the GAML language are used to compose complex expressions. An operator performs a function on one, two, or n operands (which are other expressions and thus may be themselves composed of operators) and returns the result of this function. Developing a new operator allows, then, to add a new function to GAML.","sidebar":"main"},"DevelopingPlugins":{"id":"DevelopingPlugins","title":"DevelopingPlugins","description":"This page details how to create a new plug-in in order to extend the GAML language with new skills, species, displays or operators.","sidebar":"main"},"DevelopingSkills":{"id":"DevelopingSkills","title":"DevelopingSkills","description":"Defining the class as a skill","sidebar":"main"},"DevelopingSpecies":{"id":"DevelopingSpecies","title":"Developing Species","description":"Additional built-in species can be defined in Java in order to be used in GAML models. Additional attributes and actions can be defined. It could be very useful in order to define its behavior thanks to external libraries (e.g. database connection...).","sidebar":"main"},"DevelopingStatements":{"id":"DevelopingStatements","title":"Developing Statements","description":"Statements are a fundamental part of GAML, as they represent both commands (imperative programming style) or declarations (declarative programming style). Developing a new statement allows, then, to add a new instruction to GAML.","sidebar":"main"},"DevelopingTypes":{"id":"DevelopingTypes","title":"Developing Types","description":"GAML provides a given number of built-in simple types (int, bool...) and more complex ones (path, graph...).","sidebar":"main"},"DifferentialEquations":{"id":"DifferentialEquations","title":"Using Differential Equations","description":"Introduction","sidebar":"main"},"Diffusion":{"id":"Diffusion","title":"Implementing diffusion","description":"GAMA provides you the possibility to represent and simulate the diffusion of a variable through a grid topology.","sidebar":"main"},"Directed_Graph_Model":{"id":"Directed_Graph_Model","title":"Directed_Graph_Model","description":"Annotation 2023-04-19 064100_gotodirectedgraph"},"Displays":{"id":"Displays","title":"Displays","description":"GAMA allows modelers to define two kinds of displays in a GUI experiment:","sidebar":"main"},"Documentation":{"id":"Documentation","title":"Generation of the documentation","description":"Table of contents","sidebar":"main"},"Drive_Random":{"id":"Drive_Random","title":"Drive_Random","description":"Annotation 2023-04-18 052107_DriveRandom"},"DXF_to_Agents_Model":{"id":"DXF_to_Agents_Model","title":"DXF_to_Agents_Model","description":"Annotation 2023-04-17 054854_dxfFileImport"},"EditingModels":{"id":"EditingModels","title":"Editing models","description":"Editing models in GAMA is very similar to editing programs in a modern IDE like Eclipse. After having successfully launched the program, the user has two fundamental concepts at its disposal: a workspace, which contains models or links to models organized like a hierarchy of files in a filesystem, and the workbench (aka, the main window), which contains the tools to create, modify and experiment these models.","sidebar":"main"},"Ensure-model-reproducibility":{"id":"Ensure-model-reproducibility","title":"Ensure model\'s reproducibility","description":"There has been a huge effort made in GAMA development in order to ensure the reproducibility of the simulations, i.e. when several simulations of the same models are launched with the same random generator seed and same parameter values, they are supposed to provide the same results.","sidebar":"main"},"Eroding_Volcano":{"id":"Eroding_Volcano","title":"Eroding_Volcano","description":"Annotation 2023-04-15 193838_erodingVolcano"},"ErrorsView":{"id":"ErrorsView","title":"Errors View","description":"Whenever a runtime error, or a warning, is issued by the currently running experiment, a view called \\"Errors\\" is opened automatically. This view provides, together with the error/warning itself, some contextual information about who raised the error (i.e. which agent(s)) and where (i.e. in which portion of the model code). As with other \\"status\\" in GAMA, errors will appear in red color and warnings in orange.","sidebar":"main"},"ESRI_ASCII_to_grid_model":{"id":"ESRI_ASCII_to_grid_model","title":"ESRI_ASCII_to_grid_model","description":"Annotation 2023-04-19 052938_ascfileimport"},"Exhaustive-list-of-GAMA-Keywords":{"id":"Exhaustive-list-of-GAMA-Keywords","title":"Exhaustive list of GAMA Keywords","description":"----","sidebar":"main"},"ExperimentsUserInterface":{"id":"ExperimentsUserInterface","title":"Experiments User Interface","description":"As soon as an experiment is launched, the modeler is facing a new environment (with different menus and views) called the Simulation Perspective). The Navigator is still available in this perspective (below the parameter view), though, and it is still possible to edit models in it, but it is considered as good practice to use each perspective for what it has been designed for: editing models in the Modeling perspective and running simulations in the Simulation perspective. Switching perspectives is easy. The small button in the top-left corner of the window allows to switch back and forth the two perspectives.","sidebar":"main"},"ExplorationMethods":{"id":"ExplorationMethods","title":"Exploration  calibration methods","description":"[//]: # (startConcept|exploration_methods)","sidebar":"main"},"ExploringModels":{"id":"ExploringModels","title":"Exploring Models","description":"[//]: # (keyword|concept_experiment)","sidebar":"main"},"Expressions":{"id":"Expressions","title":"Expressions","description":"Expressions in GAML are the value part of the statements\' facets. They represent or compute data that will be used as the value of the facet when the statement will be executed.","sidebar":"main"},"Extension":{"id":"Extension","title":"Extensions","description":"----"},"Extension_ummisco.gaml.extensions.sound":{"id":"Extension_ummisco.gaml.extensions.sound","title":"Extension","description":"----"},"FallingObjects":{"id":"FallingObjects","title":"FallingObjects","description":"Annotation 2023-04-15 200120p6HelloWorld"},"FileTypes":{"id":"FileTypes","title":"File Types","description":"GAMA provides modelers with a generic type for files called file. It is possible to load a file using the file operator:","sidebar":"main"},"Flow_on_Terrain":{"id":"Flow_on_Terrain","title":"Flow_on_Terrain","description":"Annotation 2023-04-15 192300_FlowOnTerrain"},"G__GraphicalEditor":{"id":"G__GraphicalEditor","title":"The Graphical Editor","description":"The graphical editor allows defining a GAMA model through a graphical interface (gadl files). It is based on the Graphiti Eclipse plugin. It allows as well to produce a graphical model (diagram) from a gaml model. A tutorial is available here.","sidebar":"main"},"G__GraphicalEditorTutorial":{"id":"G__GraphicalEditorTutorial","title":"Creation of a basic disease spreading model","description":"This tutorial illustrates how to create simple agents and make them move in their environment."},"GamaArchitecture":{"id":"GamaArchitecture","title":"Architecture of GAMA","description":"GAMA is made of a number of Eclipse Java projects, some representing the core projects without which the platform cannot be run, others additional plugins adding functionalities or concepts to the platform.","sidebar":"main"},"GamAnalyzer":{"id":"GamAnalyzer","title":"Using GAMAnalyzer","description":"Install"},"GamlEditorGeneralities":{"id":"GamlEditorGeneralities","title":"The GAML Editor - Generalities","description":"The GAML Editor is a text editor that proposes several services to support the modeler in writing correct models: an integrated live validation system, a ribbon header that gives access to experiments, information, warning and error markers.","sidebar":"main"},"GamlEditorToolbar":{"id":"GamlEditorToolbar","title":"GAML Editor tools","description":"The GAML Editor provides some tools to make the editing easier, covering a lot of functionalities, such as tools for changes of visualization, tools for navigation through your model, tools to format your code, or also tools to help you to find the correct keywords to use in a given context. Some can be accessed directly from the toolbar on top of the editor, but most of the tools are available in the menu \\"Model\\", that is only available when the GAML editor is active (i.e. when the modeler is editing the model).","sidebar":"main"},"GamlLanguage":{"id":"GamlLanguage","title":"GAML","description":"Models that users want to simulate in GAMA have to be written in a special language, called GAML (short for GAma Modeling Language)"},"GamlReference":{"id":"GamlReference","title":"GAML References","description":"The GAML references describe in details all the keywords of the GAML language. In particular, they detail all the expressions (operators, units, literals...), statements, data types, file types, skills, architectures, built-in species...","sidebar":"main"},"GamlReferences":{"id":"GamlReferences","title":"Gaml Reference","description":"The following pages introduce the various constructs that are made available to the modelers in GAML. All these constructs are built-in, i.e. defined in Java, either in the core of GAMA or in its extensions. They include species, skills, control architectures, statements, data types, and various types of expressions, including a long and quite exhaustive list of operators."},"generate_pedestrian_paths":{"id":"generate_pedestrian_paths","title":"generate_pedestrian_paths","description":"Annotation 2023-04-18 104542_genpedpaths"},"GEOJSON_File_Loading":{"id":"GEOJSON_File_Loading","title":"GEOJSON_File_Loading","description":"Annotation 2023-04-17 063146_geojsonFileImport"},"GlobalSpecies":{"id":"GlobalSpecies","title":"The global species","description":"[//]: # (startConcept|global_species)","sidebar":"main"},"Graph_Generation":{"id":"Graph_Generation","title":"Graph_Generation","description":"Annotation 2023-04-19 070256_classicGraphGeneration"},"Graph_Generation_using_Agents":{"id":"Graph_Generation_using_Agents","title":"Graph_Generation_using_Agents","description":"Annotation 2023-04-19 090957_graphBuildingFromAgents"},"GraphSpecies":{"id":"GraphSpecies","title":"Graph Species","description":"[//]: # (startConcept|graph)","sidebar":"main"},"GridSpecies":{"id":"GridSpecies","title":"Grid Species","description":"[//]: # (startConcept|grid)","sidebar":"main"},"Headless-mode-for-dummies":{"id":"Headless-mode-for-dummies","title":"Headless mode for dummies","description":"Overview","sidebar":"main"},"HeadlessBatch":{"id":"HeadlessBatch","title":"Headless Batch","description":"Getting started","sidebar":"main"},"HeadlessLegacy":{"id":"HeadlessLegacy","title":"Headless Legacy","description":"Getting started","sidebar":"main"},"HeadlessServer":{"id":"HeadlessServer","title":"Headless Server","description":"Running a Gama Headless server:","sidebar":"main"},"HeadlessTutorial":{"id":"HeadlessTutorial","title":"Calling gama from another program","description":"This tutorial presents an example for using Headless. The tutorial shows how to use Headless Legacy mode, Headless batch and Headless server.","sidebar":"main"},"Home":{"id":"Home","title":"GAMA","description":"GAMA is an easy-to-use open source modeling and simulation environment for creating spatially explicit agent-based simulations.","sidebar":"main"},"HydrologicaModel":{"id":"HydrologicaModel","title":"HydrologicaModel","description":"Annotation 2023-04-14 180134_HydrologicalModel"},"Image_Manipulation":{"id":"Image_Manipulation","title":"Image_Manipulation","description":"Annotation 2023-04-17 084727_ImageManipulation"},"Image_Vectorisation":{"id":"Image_Vectorisation","title":"Image_Vectorisation","description":"Annotation 2023-04-17 075601_imageVectorisation"},"ImportingModels":{"id":"ImportingModels","title":"Importing Models","description":"Importing a model refers to making a model file (or a complete project) available for edition and experimentation in the workspace. With the exception of headless experiments, GAMA requires that models be manageable in the current workspace to be able to validate them and eventually experiment them.","sidebar":"main"},"IncrementalModel":{"id":"IncrementalModel","title":"Incremental Model","description":"This tutorial has for goal to give an overview all most of the capabilities of GAMA. In particular, it presents how to build a simple model and the use of GIS data, graphs, 3D visualization, multi-level modeling and differential equations. All the files related to this tutorial (images and models) are available in the Models Library (project Tutorials/Incremental Model).","sidebar":"tuto"},"IncrementalModel_step1":{"id":"IncrementalModel_step1","title":"1. Simple SI Model","description":"This first step Illustrates how to write a model in GAMA. In particular, it describes how to structure a model and how to define species - which are the key components of GAMA models.","sidebar":"tuto"},"IncrementalModel_step2":{"id":"IncrementalModel_step2","title":"2. Charts","description":"This step Illustrates how to define monitors and charts in GAMA. In addition, it illustrates how to define a stopping condition for the simulation.","sidebar":"tuto"},"IncrementalModel_step3":{"id":"IncrementalModel_step3","title":"3. Integration of GIS Data","description":"This step illustrates how to load and agentry GIS data.","sidebar":"tuto"},"IncrementalModel_step4":{"id":"IncrementalModel_step4","title":"4. Movement on Graph","description":"This step illustrates how to load a graph and use it for the displacement of our agents.","sidebar":"tuto"},"IncrementalModel_step5":{"id":"IncrementalModel_step5","title":"5. Visualizing in 3D","description":"This step Illustrates how to define a 3D display.","sidebar":"tuto"},"IncrementalModel_step6":{"id":"IncrementalModel_step6","title":"6. Multi-Level","description":"This step illustrates how to define a multi-level model.","sidebar":"tuto"},"IncrementalModel_step7":{"id":"IncrementalModel_step7","title":"7. Differential Equations","description":"This step illustrates how to use differential equations.","sidebar":"tuto"},"Inheritance":{"id":"Inheritance","title":"Inheritance","description":"[//]: # (startConcept|inheritance)","sidebar":"main"},"InspectorsAndMonitors":{"id":"InspectorsAndMonitors","title":"Inspectors and monitors","description":"GAMA offers some tools to obtain information about one or several agents. There are two kinds of tools:","sidebar":"main"},"Installation":{"id":"Installation","title":"Installation","description":"We made efforts to make the last release of GAMA (1.9.0) as easy as possible to install, by providing a version with an embedded Java JDK, limiting the installation to a 3-steps procedure: download, install and launch.","sidebar":"main"},"InstallationAndLaunching":{"id":"InstallationAndLaunching","title":"Installation and Launching","description":"The GAMA platform can be easily installed on your machine: Windows, macOS or Ubuntu. Depending on user needs, GAMA can then be extended by using a number of additional plugins.","sidebar":"main"},"InstallingGitVersion":{"id":"InstallingGitVersion","title":"Installing the GIT version","description":"Important note","sidebar":"main"},"InstallingPlugins":{"id":"InstallingPlugins","title":"Installing Plugins","description":"Besides the plugins delivered by the developers of the GAMA platform, there are a number of additional plugins that can be installed to add new functionalities to GAMA or enhance the existing ones. GAMA being based on Eclipse, a number of plugins developed for Eclipse are then available (a complete listing of Eclipse plugins can be found in the so-called Eclipse MarketPlace).","sidebar":"main"},"InteractionBetweenAgents":{"id":"InteractionBetweenAgents","title":"Interaction between agents","description":"[//]: # (startConcept|interactionbetweenagents)","sidebar":"main"},"Introduction":{"id":"Introduction","title":"Introduction","description":"GAML is an agent-oriented language dedicated to the definition of agent-based simulations. It takes its roots in object-oriented languages like Java or Smalltalk, but extends the object-oriented programming approach with powerful concepts (like skills, declarative definitions or agent migration) to allow for a better expressivity in models.","sidebar":"main"},"Introduction-To-Gama-Java-API":{"id":"Introduction-To-Gama-Java-API","title":"Introduction to GAMA Java API","description":"This introduction to the Java API is dedicated to programmers that want to participate in the java code of GAMA. The main purpose is to describe the main packages and classes of the API to makes it simple to find such crucial information such as: how GAMA create containers, agent and geometries, how exceptions and log are managed, how java code maintain Type safety, etc.","sidebar":"main"},"K_Nearest_Neighbors":{"id":"K_Nearest_Neighbors","title":"K_Nearest_Neighbors","description":"Annotation 2023-04-16 061122_masKNN"},"Launching":{"id":"Launching","title":"Launching GAMA","description":"Running GAMA for the first time requires that you launch the application (Gama.app on MacOS X, Gama.exe on Windows, Gama on Linux, located in the folder called GAMA1.8YOUROSNAME once you have unzipped the downloaded archive). In case you are unable to launch the application, or if error messages appear, please refer to the installation or troubleshooting instructions.","sidebar":"main"},"LaunchingExperiments":{"id":"LaunchingExperiments","title":"Launching Experiments from the User Interface","description":"GAMA supports multiple ways of launching experiments from within the Modeling Perspective, in editors or in the navigator.","sidebar":"main"},"LearnGAMLStepByStep":{"id":"LearnGAMLStepByStep","title":"Learn GAML Step by Step","description":"This large progressive tutorial has been designed to help you to learn GAML (GAma Modeling Language).","sidebar":"main"},"LICENSE.md":{"id":"LICENSE.md","title":"LICENSE.md","description":"GNU Free Documentation License"},"Life":{"id":"Life","title":"Life","description":"Annotation 2023-04-16 041001_Life"},"Literals":{"id":"Literals","title":"Literals","description":"(some literal expressions are also described in data types)","sidebar":"main"},"LuneraysFlu":{"id":"LuneraysFlu","title":"Luneray\'s flu","description":"This tutorial has for goal to introduce how to build a model with GAMA and to use GIS data and graphs. In particular, this tutorial shows how to write a simple GAMA model (the structure of a model, the notion of species...) load gis data, to agentify them and to use a network of polylines to constraint the movement of agents. All the files related to this tutorial (shapefiles and models) are available here.","sidebar":"tuto"},"LuneraysFlu_step1":{"id":"LuneraysFlu_step1","title":"1. Creation of a first basic disease spreading model","description":"This first step illustrates how to create simple agents and make them move in their environment.","sidebar":"tuto"},"LuneraysFlu_step2":{"id":"LuneraysFlu_step2","title":"2. Definition of monitors and chart outputs","description":"This second step illustrates how to create monitors and charts to follows the evolution of variables and to add an ending condition to the simulation.","sidebar":"tuto"},"LuneraysFlu_step3":{"id":"LuneraysFlu_step3","title":"3. Importation of GIS data","description":"This third step illustrates how to load GIS data and to agentify them.","sidebar":"tuto"},"LuneraysFlu_step4":{"id":"LuneraysFlu_step4","title":"4. Use of a graph to constraint the movements of people","description":"This fourth step illustrates how to use a graph to constraint the movements of agents","sidebar":"tuto"},"LuneraysFlu_step5":{"id":"LuneraysFlu_step5","title":"5. Definition of 3D displays","description":"This fifth step illustrates how to define 3D displays.","sidebar":"tuto"},"LuneraysFlu_step6":{"id":"LuneraysFlu_step6","title":"6. Exploration of the model","description":"This final step illustrates how to explore the model through the introduction of batch experiments.","sidebar":"tuto"},"ManipulateBasicSpecies":{"id":"ManipulateBasicSpecies","title":"Manipulate basic species","description":"In this chapter, we will learn how to manipulate some basic species. As you already know, a species can be seen as the definition of a type of agent (we call agent the instance of a species). In OOP (Object-Oriented Programming), a species can be seen as the class. Each species is then defined by some attributes (\\"member\\" in OOP), actions (\\"method\\" in OOP) and behavior (\\"method\\" in OOP).","sidebar":"main"},"ManipulateDates":{"id":"ManipulateDates","title":"Manipulate Dates","description":"[//]: # (keyword|concept_date)","sidebar":"main"},"ManipulateLight":{"id":"ManipulateLight","title":"Implementing light","description":"[//]: # (startConcept|light)","sidebar":"main"},"ManipulateOSMDatas":{"id":"ManipulateOSMDatas","title":"Manipulate OSM Datas","description":"[//]: # (startConcept|useosmdatas)","sidebar":"main"},"MenusAndCommands":{"id":"MenusAndCommands","title":"Controls of experiments","description":"The simulation perspective adds on the user interface a number of new menus and commands (i.e. buttons) that are specific to experiment-related tasks.","sidebar":"main"},"MirrorSpecies":{"id":"MirrorSpecies","title":"Mirror species","description":"[//]: # (startConcept|mirror_species)","sidebar":"main"},"MODAVI":{"id":"MODAVI","title":"MODAVI","description":"Annotation 2023-04-16 034343_MultiLevelDataAnalysis"},"ModelOrganization":{"id":"ModelOrganization","title":"Organization of a model","description":"As already extensively detailed in the introduction page, defining a model in GAML amounts to defining a model species, which later allows to instantiate a model agent (aka a simulation), which may or may not contain micro-species, and which can be flanked by experiment plans in order to be simulated.","sidebar":"main"},"MondrianCity":{"id":"MondrianCity","title":"MondrianCity","description":"Annotation 2023-04-15 125541_MondrianCity"},"Movement_of_an_agent_on_different_paths":{"id":"Movement_of_an_agent_on_different_paths","title":"Movement_of_an_agent_on_different_paths","description":"Annotation 2023-04-19 051328_FollowPath"},"Movement_on_a_Graph_created_by_Polygons":{"id":"Movement_on_a_Graph_created_by_Polygons","title":"Movement_on_a_Graph_created_by_Polygons","description":"Annotation 2023-04-19 044505_GoToPolygon"},"Movement_on_a_Grid_of_Cells":{"id":"Movement_on_a_Grid_of_Cells","title":"Movement_on_a_Grid_of_Cells","description":"Annotation 2023-04-19 045340_gotogridweights"},"Movement_on_a_Grid_of_Cells_":{"id":"Movement_on_a_Grid_of_Cells_","title":"Movement_on_a_Grid_of_Cells_","description":"Annotation 2023-04-19 045936_GotoGrid"},"Moving_3D_Object":{"id":"Moving_3D_Object","title":"Moving_3D_Object","description":"Annotation 2023-04-17 172012_Moving3DObject"},"Moving3D":{"id":"Moving3D","title":"Moving3D","description":"Annotation 2023-04-15 180000_Moving3D"},"MultiLevelArchitecture":{"id":"MultiLevelArchitecture","title":"Multi-level architecture","description":"[//]: # (startConcept|multi_level)","sidebar":"main"},"MultiParadigmModeling":{"id":"MultiParadigmModeling","title":"Multi-Paradigm Modeling","description":"[//]: # (keyword|concept_architecture)","sidebar":"main"},"NavigatingWorkspace":{"id":"NavigatingWorkspace","title":"Navigating in the Workspace","description":"All the models that you edit or run using GAMA are accessible from a central location: the Navigator, which is always on the left-hand side of the main window and cannot be closed. This view presents the models currently present in (or linked from) your workspace.","sidebar":"main"},"NetlogoTrafficmodel2":{"id":"NetlogoTrafficmodel2","title":"NetlogoTrafficmodel2","description":"Annotation 2023-04-17 130655_netlogoTrafficModel"},"ODE_LotkaVolterra":{"id":"ODE_LotkaVolterra","title":"ODE_LotkaVolterra","description":"Annotation 2023-04-16 043606_LotkaVolterraInfInteg"},"OlderVersions":{"id":"OlderVersions","title":"Versions of GAMA","description":"GAMA exists since 2007 and has undergone a number of changes since its first release, materialized by different versions of the platform. Although we do not maintain these versions anymore, some are still used in lectures or specific projects. This page provides a list of these versions and, for each of them, a summary of its features and a link to its documentation in PDF format.","sidebar":"extra"},"OperatorsAA":{"id":"OperatorsAA","title":"Operators (A to A)","description":"----","sidebar":"main"},"OperatorsBC":{"id":"OperatorsBC","title":"Operators (B to C)","description":"----","sidebar":"main"},"OperatorsDH":{"id":"OperatorsDH","title":"Operators (D to H)","description":"----","sidebar":"main"},"OperatorsIM":{"id":"OperatorsIM","title":"Operators (I to M)","description":"----","sidebar":"main"},"OperatorsNR":{"id":"OperatorsNR","title":"Operators (N to R)","description":"----","sidebar":"main"},"OperatorsSZ":{"id":"OperatorsSZ","title":"Operators (S to Z)","description":"----","sidebar":"main"},"OptimizingModels":{"id":"OptimizingModels","title":"Optimizing Models","description":"[//]: # (startConcept|optimizing_tips)","sidebar":"main"},"OptimizingModelsSection":{"id":"OptimizingModelsSection","title":"Optimizing Models","description":"[//]: # (keyword|concept_optimization)","sidebar":"main"},"OSM_file_to_Agents":{"id":"OSM_file_to_Agents","title":"OSM_file_to_Agents","description":"Annotation 2023-04-17 051410osmfileimportosmfileimport"},"Overview":{"id":"Overview","title":"Introduction","description":"Demonstration of some of the features of the GAMA Platform"},"ParametersView":{"id":"ParametersView","title":"Parameters View","description":"In the case of an experiment, the modeler can define the parameters s/he wants to be able to modify to explore the simulation, and thus the ones he wants to be able to display and alter in the GUI interface.","sidebar":"main"},"Pedagogical-Materials":{"id":"Pedagogical-Materials","title":"Pedagogical materials","description":"This page references a some pedagogical materials, like lessons, exercises, cheat-sheet etc.","sidebar":"extra"},"pedestrian_complex_environment":{"id":"pedestrian_complex_environment","title":"pedestrian_complex_environment","description":"Annotation 2023-04-15 185631_ComplexEnvWalk"},"pedestrian_simple_environment":{"id":"pedestrian_simple_environment","title":"pedestrian_simple_environment","description":"Annotation 2023-04-16 064607_simpleEnvWalkTo"},"PlatformDocumentation":{"id":"PlatformDocumentation","title":"Platform","description":"GAMA consists of a single application that is based on the RCP architecture provided by Eclipse. Within this single application software, often referred to as a **platform**, users can undertake, without the need of additional third-parties softwares, most of the activities related to modeling and simulation, namely editing models and simulating, visualizing and exploring them using dedicated tools.","sidebar":"main"},"PlayPool":{"id":"PlayPool","title":"PlayPool","description":"Annotation 2023-04-15 184506_playpool"},"PredatorPrey":{"id":"PredatorPrey","title":"Predator Prey","description":"This tutorial presents the structure of a GAMA model as well as the use of a grid topology. In particular, this tutorial shows how to define a basic model, to define \\"grid agents\\" which are able to move within the constraints. It also introduces the displays and agents\' aspect.","sidebar":"tuto"},"PredatorPrey_step1":{"id":"PredatorPrey_step1","title":"1. Basic Model","description":"Content","sidebar":"tuto"},"PredatorPrey_step10":{"id":"PredatorPrey_step10","title":"10. Charts","description":"This 10th step illustrates how to define charts.","sidebar":"tuto"},"PredatorPrey_step11":{"id":"PredatorPrey_step11","title":"11. Writing Files","description":"This 11th step illustrates how to save data in a text file.","sidebar":"tuto"},"PredatorPrey_step12":{"id":"PredatorPrey_step12","title":"12. Image loading","description":"This 12th step illustrates how to load an image file and to use it to initialize a grid.","sidebar":"tuto"},"PredatorPrey_step13":{"id":"PredatorPrey_step13","title":"13. Model exploration","description":"This 13th step illustrates how to explore the model using a batch experiment.","sidebar":"tuto"},"PredatorPrey_step2":{"id":"PredatorPrey_step2","title":"2. Vegetation Dynamic","description":"This second step presents the idea of environment or topological space. Defining a \\"vegetation\\" environment allows to define the movement of the preys through dynamic variables (use of the update facet). We will also discover more about displays.","sidebar":"tuto"},"PredatorPrey_step3":{"id":"PredatorPrey_step3","title":"3. Prey Agent Behavior","description":"This third step illustrates how to define the behaviors of prey agents and the concept of spatial topology.","sidebar":"tuto"},"PredatorPrey_step4":{"id":"PredatorPrey_step4","title":"4. Inspectors and Monitors","description":"This fourth step illustrates how to monitor more precisely the simulation. Practically, we will define monitors to follow the evolution of specific variables (or expressions) whereas inspectors allow the user to follow the state of a given agent (or a species).","sidebar":"tuto"},"PredatorPrey_step5":{"id":"PredatorPrey_step5","title":"5. Predator Agent","description":"This fifth step illustrates how to use parent species. Indeed, prey and predators share a few common features thus we will define a generic species that will regroup all the common elements (variables, behaviors, and aspects) between the prey and the predator species.","sidebar":"tuto"},"PredatorPrey_step6":{"id":"PredatorPrey_step6","title":"6. Breeding","description":"So far we have created agents only during the initialization of the simulation. In this sixth step, we illustrate how to create new agents during a simulation of a dynamic species.","sidebar":"tuto"},"PredatorPrey_step7":{"id":"PredatorPrey_step7","title":"7. Agent Aspect","description":"In this seventh step, we will focus on the display and more specifically the aspects of the agents: how they are represented. It can be a simple shape (circle, square, etc.), an icon, a polygon (see later GIS support).","sidebar":"tuto"},"PredatorPrey_step8":{"id":"PredatorPrey_step8","title":"8. Complex Behavior","description":"This eighth step illustrates how to define more complex actions, how to use conditional statements and iterator operators over containers.","sidebar":"tuto"},"PredatorPrey_step9":{"id":"PredatorPrey_step9","title":"9. Stopping condition","description":"This 9th step illustrates how to use the pause action to stop a simulation.","sidebar":"tuto"},"Preferences":{"id":"Preferences","title":"Preferences","description":"Various preferences are accessible in GAMA to allow users and modelers to personalize their working environment, runtime options and simulation displays. This section reviews the different preference tabs available in the current version of GAMA, as well as how to access the preferences and settings inherited by GAMA from Eclipse.","sidebar":"main"},"PreviousConferences":{"id":"PreviousConferences","title":"Previous Conferences","description":"This page references videos of previous conferences involving GAMA","sidebar":"extra"},"Projects":{"id":"Projects","title":"Projects","description":"Publications","sidebar":"extra"},"PseudoVariables":{"id":"PseudoVariables","title":"Pseudo-variables","description":"The expressions known as pseudo-variables are special read-only variables that are not declared anywhere (at least not in a species), and which represent a value that changes depending on the context of execution.","sidebar":"main"},"Recipes":{"id":"Recipes","title":"Recipes","description":"Understanding the structure of models in GAML and gaining some insight of the language is required, but is usually not sufficient to build correct models or models that need to deal with specific approaches (like equation-based modeling). This section is intended to provide readers with practical \\"how to\\"s on various subjects, ranging from the use of database access to the design of agent communication languages. It is by no means exhaustive, and will progressively be extended with more \\"recipes\\" in the future, depending on the concrete questions asked by users.","sidebar":"main"},"References":{"id":"References","title":"Scientific References","description":"This page contains a subset of the scientific papers that have been written either about GAMA or using the platform as an experimental/modeling support.","sidebar":"extra"},"RegularSpecies":{"id":"RegularSpecies","title":"Regular species","description":"[//]: # (startConcept|regular_species)","sidebar":"main"},"Resources_TrainingVideos":{"id":"Resources_TrainingVideos","title":"Videos","description":"This page is an attempt to keep track of all the videos made about/around the GAMA platform.","sidebar":"extra"},"RoadTrafficModel":{"id":"RoadTrafficModel","title":"Road Traffic","description":"This tutorial has for goal to present the use of GIS data and complex geometries. In particular, this tutorial shows how to load gis data, to agentify them and to use a network of polylines to constraint the movement of agents. All the files related to this tutorial (shapefiles and models) are available in the Library models (Tutorials, Road Traffic).","sidebar":"tuto"},"RoadTrafficModel_step1":{"id":"RoadTrafficModel_step1","title":"1. Loading of GIS Data","description":"This first step Illustrates how to load GIS data (shapefiles) and to read attributes from GIS data.","sidebar":"tuto"},"RoadTrafficModel_step2":{"id":"RoadTrafficModel_step2","title":"2. People Agents","description":"This second step illustrates how to obtain a random point inside a geometry. We will also define some moving agent called people.","sidebar":"tuto"},"RoadTrafficModel_step3":{"id":"RoadTrafficModel_step3","title":"3. Movement of People","description":"This third step presents how to create a road system from GIS data. More precisely, it shows how to build a graph from a list of polylines and to constrain the movement of an agent according to this graph.","sidebar":"tuto"},"RoadTrafficModel_step4":{"id":"RoadTrafficModel_step4","title":"4. Weight for Road Network","description":"The present model will introduce how to design a road system, or graph, based on the road GIS data and provide each edge a weight representing the destruction level of the road.","sidebar":"tuto"},"RoadTrafficModel_step5":{"id":"RoadTrafficModel_step5","title":"5. Dynamic weights","description":"This 5th step illustrates how to obtain the shortest path from a point to another one and to update the weights of an existing graph.","sidebar":"tuto"},"RoadTrafficModel_step6":{"id":"RoadTrafficModel_step6","title":"6. Charts","description":"This 6th step illustrates how to display charts.","sidebar":"tuto"},"RoadTrafficModel_step7":{"id":"RoadTrafficModel_step7","title":"7. Automatic Road Repair","description":"This 7th step illustrates how to select in a list of elements that optimizes a given function.","sidebar":"tuto"},"RunningExperiments":{"id":"RunningExperiments","title":"Running Experiments","description":"Running an experiment is the only way, in GAMA, to execute simulations on a model. Experiments can be run in different ways.","sidebar":"main"},"RunningHeadless":{"id":"RunningHeadless","title":"Running Headless","description":"What is GAMA Headless","sidebar":"main"},"RunSeveralSimulations":{"id":"RunSeveralSimulations","title":"Run Several Simulations","description":"[//]: # (startConcept|runsimulationsas_agents)","sidebar":"main"},"RuntimeConcepts":{"id":"RuntimeConcepts","title":"Runtime Concepts","description":"[//]: # (startConcept|runtimeandschedulers)","sidebar":"main"},"Save-and-restore-simulations":{"id":"Save-and-restore-simulations","title":"Save and Restore simulations","description":"Last version of GAMA has introduced new features to save the state of a simulation at a given simulation cycle. This has two main applications:","sidebar":"main"},"Segregation_Agents":{"id":"Segregation_Agents","title":"Segregation_Agents","description":"Annotation 2023-04-15 122128_SchellingAgents"},"Series":{"id":"Series","title":"Series","description":"Annotation 2023-04-18 100014_ChartsSeries"},"Shapefile_to_Agents":{"id":"Shapefile_to_Agents","title":"Shapefile_to_Agents","description":"Annotation 2023-04-17 045858_shpImport"},"Simple_Intersection":{"id":"Simple_Intersection","title":"Simple_Intersection","description":"Annotation 2023-04-18 121208_drivingSkill"},"Simple_Traffic_Model":{"id":"Simple_Traffic_Model","title":"Simple_Traffic_Model","description":"Annotation 2023-04-18 053533_SimpleTrafficModel"},"SIR_Split_in_Agents_Multiple_Strains":{"id":"SIR_Split_in_Agents_Multiple_Strains","title":"SIR_Split_in_Agents_Multiple_Strains","description":"Annotation 2023-04-18 112345_SIRSplitInAgents"},"Soccer_Game":{"id":"Soccer_Game","title":"Soccer_Game","description":"Annotation 2023-04-17 123743_soccer"},"SpatialGraph3d":{"id":"SpatialGraph3d","title":"SpatialGraph3d","description":"Annotation 2023-04-16 035911_GraphFrmBugMirror"},"stairs":{"id":"stairs","title":"stairs","description":"Annotation 2023-04-18 110056_stairs"},"StartWithGAML":{"id":"StartWithGAML","title":"Start with GAML","description":"In this part, we will present you some basic concepts of GAML that will help you a lot for the next pages.","sidebar":"main"},"Statements":{"id":"Statements","title":"Statements","description":"----","sidebar":"main"},"Stochastic_Differential_Equations":{"id":"Stochastic_Differential_Equations","title":"Stochastic_Differential_Equations","description":"Annotation 2023-04-18 054542_stochasticDifferentialEquations"},"Strahler":{"id":"Strahler","title":"Strahler","description":"Annotation 2023-04-19 090722_Strahler"},"Sugarscape":{"id":"Sugarscape","title":"Sugarscape","description":"Annotation 2023-04-15 202842_sugarScape"},"Team":{"id":"Team","title":"Team","description":"Development Teams","sidebar":"extra"},"ThreeD":{"id":"ThreeD","title":"3D Tutorial","description":"This tutorial introduces the 3D features offered by GAMA.","sidebar":"tuto"},"ThreeD_step1":{"id":"ThreeD_step1","title":"1. Basic Model","description":"In this first step, we will see how to define a 3D environment and populate it.","sidebar":"tuto"},"ThreeD_step2":{"id":"ThreeD_step2","title":"2. Moving Cells","description":"This second step model adds the moving3D skill to the cell agents and simply makes the cell agents move by defining a reflex that will call the action move. We will also add additional visual information to the display.","sidebar":"tuto"},"ThreeD_step3":{"id":"ThreeD_step3","title":"3. Connections","description":"Formulation","sidebar":"tuto"},"Traffic_and_Pollution":{"id":"Traffic_and_Pollution","title":"Traffic_and_Pollution","description":"Annotation 2023-04-17 125357_TrafficAndPollution"},"TrainingSession":{"id":"TrainingSession","title":"Training Session","description":"SEARCA Phillippines 2021 (Online)","sidebar":"extra"},"TreesAndSeasons":{"id":"TreesAndSeasons","title":"TreesAndSeasons","description":"Annotation 2023-04-14 181339_TreesAndSeasons"},"Troubleshooting":{"id":"Troubleshooting","title":"Troubleshooting","description":"This page exposes some of the most common problems a user may encounter when running GAMA \u2014 and offers advices and workarounds for them. It will be regularly enriched with new contents. Note also that the Issues section of the website might contain precious information on crashes and bugs encountered by other users. If neither the workarounds described here nor the solutions provided by other users allow to solve your particular problem, please submit a new issue report to the developers.","sidebar":"main"},"Tutorials":{"id":"Tutorials","title":"Tutorials","description":"We propose some tutorials that are designed to allow modelers to become progressively autonomous with the GAMA platform. These tutorials cover different aspects of GAMA (Grid environment, GIS integration, 3D, multi-level modeling, equation-based models...). It is a good idea to keep a copy of the reference of the GAML language around when undertaking one of these tutorials.","sidebar":"tuto"},"UnitsAndConstants":{"id":"UnitsAndConstants","title":"Units and constants","description":"----","sidebar":"main"},"Updating":{"id":"Updating","title":"Updating GAMA","description":"Unless you are using the version of GAMA built from the sources available in the GIT repository of the project (see here), you are normally running a specific release of GAMA that sports a given version number (e.g. GAMA 1.8.1, GAMA 1.7, GAMA 1.6.1, etc.). When new features were developed, or when serious issues were fixed, the release you had on your disk, prior to GAMA 1.6.1, could not benefit from them. Since the version 1.6.1, however, GAMA has been enhanced to support a self\\\\update_ mechanism, which allows you to import from the GAMA update site additional plugins (offering new features) or updated versions of the plugins that constitute the core of GAMA.","sidebar":"main"},"UserResources":{"id":"UserResources","title":"User Resources","description":"This page contains several resources collected from the internet that refer to GAMA and use of GAMA on different projects from Users and Developers. These include videos, webpages, reading material, source code, code snippets etc. This page is regularly updated and if you wish to contribute items to be added to this list, please feel free to contact developers or write to the GAMA user group on google."},"Using_Git":{"id":"Using_Git","title":"Using Git from GAMA to version and share models","description":"Install the Git client [Tested on the GAMA 1.9.0]","sidebar":"main"},"Using-BEN-simple-bdi":{"id":"Using-BEN-simple-bdi","title":"Using BEN (simple_bdi)","description":"[//]: # (keyword|concept_bdi)","sidebar":"main"},"Using-extensions":{"id":"Using-extensions","title":"Using extensions","description":"The core GAMA software can be extended with some additional plugins, allowing the model to give more capabilities to agents (negotiation, using fuzzy logic, or Bayesian network) or providing connections to external softwares such as R or Matlab.","sidebar":"main"},"UsingDatabase":{"id":"UsingDatabase","title":"Using Database Access","description":"Database features of GAMA provide a set of actions on Database Management Systems (DBMS). Database features are implemented in the irit.gaml.extensions.database plug-in with these features:","sidebar":"main"},"UsingDrivingSkill":{"id":"UsingDrivingSkill","title":"Advanced Driving Skill","description":"[//]: # (keyword|concept_transport)","sidebar":"main"},"UsingFIPAACL":{"id":"UsingFIPAACL","title":"Using FIPA ACL","description":"GAMA allows modelers to provide agents the capability to communicate with other agents using FIPA Communication Acts (such as inform, request, call for proposal...) and Interaction Protocols (such Contract Net Interaction Protocol, Request Interaction Protocol).","sidebar":"main"},"UsingNetwork":{"id":"UsingNetwork","title":"Using network","description":"Introduction","sidebar":"main"},"ValidationOfModels":{"id":"ValidationOfModels","title":"Validation of Models","description":"When editing a model, GAMA will continuously validate (i.e. compile) what the modeler is entering and indicate, with specific visual affordances, various information on the state of the model. This information ranges from documentation items to errors indications. We will review some of them in this section.","sidebar":"main"},"VariablesAndAttributes":{"id":"VariablesAndAttributes","title":"Variables and Attributes","description":"Variables and attributes represent named data that can be used in an expression. They can be accessed depending on their scope:","sidebar":"main"},"Wander":{"id":"Wander","title":"Wander","description":"Annotation 2023-04-18 130337_wanderOnGraph"},"Waterflowgridelevation":{"id":"Waterflowgridelevation","title":"Waterflowgridelevation","description":"Annotation 2023-04-17 162657_WaterflowFieldElevation"},"WorkspaceProjectsAndModels":{"id":"WorkspaceProjectsAndModels","title":"Workspace, Projects and Models","description":"The workspace is a directory in which GAMA stores all the current projects on which the user is working, links to other projects, as well as some meta-data like preference settings, the current status of the different projects, error markers, and so on.","sidebar":"main"},"Writing_Tests":{"id":"Writing_Tests","title":"Writing Unit Tests in GAML","description":"Unit testing is an essential instrument to ensure the quality of any software and it has been implemented in GAMA: this allows in particular that parts of the model are behaving as expected and that evolutions in the model do not introduce unexpected changes. To these purposes, the modeler can define a set of assertions that will be tested. Before the execution of the embedded set of instructions, if a setup is defined in the species, model or experiment, it is executed. In a test, if one assertion fails, the evaluation of other assertions continue.","sidebar":"main"},"WritingModels":{"id":"WritingModels","title":"Writing Models","description":"Models in GAMA play the same role as classes in Java or C++: they represent both the knowledge about a particular phenomenon a user wants to simulate and the way(s) to simulate it. A model is nothing more than a text file (or a collection of text files that refer to each other), which contains instructions in a specific language called GAML (for \\"GAMA Modeling Language\\")."}}}')}}]);