"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[10581],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var i=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=i.createContext({}),s=function(e){var t=i.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return i.createElement(c.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(n),m=r,f=u["".concat(c,".").concat(m)]||u[m]||d[m]||a;return n?i.createElement(f,o(o({ref:t},p),{},{components:n})):i.createElement(f,o({ref:t},p))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[u]="string"==typeof e?e:r,o[1]=l;for(var s=2;s<a;s++)o[s]=n[s];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},65676:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>c,default:()=>f,frontMatter:()=>l,metadata:()=>s,toc:()=>u});var i=n(87462),r=n(63366),a=(n(67294),n(3905)),o=["components"],l={title:"The 'agent' built-in species (Under Construction)"},c=void 0,s={unversionedId:"AgentBuiltIn",id:"version-1.8.1/AgentBuiltIn",title:"The 'agent' built-in species (Under Construction)",description:"As described in the presentation of GAML, the hierarchy of species derives from a single built-in species called agent. All its components (attributes, actions) will then be inherited by all direct or indirect children species (including model and experiment), with the exception of species that explicitly mention useminimalagents: true as a facet, which inherit from a stripped-down version of agent (see below).",source:"@site/versioned_docs/version-1.8.1/AgentBuiltIn.md",sourceDirName:".",slug:"/AgentBuiltIn",permalink:"/wiki/1.8.1/AgentBuiltIn",draft:!1,editUrl:"https://github.com/gama-platform/gama/wiki/AgentBuiltIn/_edit",tags:[],version:"1.8.1",frontMatter:{title:"The 'agent' built-in species (Under Construction)"},sidebar:"side",previous:{title:"Built-in Species",permalink:"/wiki/1.8.1/BuiltInSpecies"},next:{title:"The 'model' built-in species (Under Construction)",permalink:"/wiki/1.8.1/ModelBuiltIn"}},p={},u=[{value:"<code>agent</code> attributes",id:"agent-attributes",level:2},{value:"<code>agent</code> actions",id:"agent-actions",level:2}],d={toc:u},m="wrapper";function f(e){var t=e.components,n=(0,r.Z)(e,o);return(0,a.kt)(m,(0,i.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"As described in the ",(0,a.kt)("a",{parentName:"p",href:"Introduction"},"presentation of GAML"),", the hierarchy of species derives from a single built-in species called ",(0,a.kt)("inlineCode",{parentName:"p"},"agent"),". All its components (attributes, actions) will then be inherited by all direct or indirect children species (including ",(0,a.kt)("a",{parentName:"p",href:"ModelBuiltIn"},(0,a.kt)("inlineCode",{parentName:"a"},"model"))," and ",(0,a.kt)("a",{parentName:"p",href:"ExperimentBuiltIn"},(0,a.kt)("inlineCode",{parentName:"a"},"experiment")),"), with the exception of species that explicitly mention ",(0,a.kt)("inlineCode",{parentName:"p"},"use_minimal_agents: true")," as a facet, which inherit from a stripped-down version of ",(0,a.kt)("inlineCode",{parentName:"p"},"agent")," (see below)."),(0,a.kt)("h2",{id:"agent-attributes"},(0,a.kt)("inlineCode",{parentName:"h2"},"agent")," attributes"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"agent")," defines several attributes, which form the minimal set of knowledge any agent will have in a model."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"})),(0,a.kt)("h2",{id:"agent-actions"},(0,a.kt)("inlineCode",{parentName:"h2"},"agent")," actions"))}f.isMDXComponent=!0}}]);