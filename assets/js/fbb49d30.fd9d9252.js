"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[74899],{99871:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var i=n(74848),a=n(28453);const s={title:"Headless Batch"},r=void 0,l={id:"HeadlessBatch",title:"Headless Batch",description:"Getting started",source:"@site/versioned_docs/version-1.8.2-RC2/HeadlessBatch.md",sourceDirName:".",slug:"/HeadlessBatch",permalink:"/wiki/1.8.2-RC2/HeadlessBatch",draft:!1,unlisted:!1,editUrl:"https://github.com/gama-platform/gama/wiki/HeadlessBatch/_edit",tags:[],version:"1.8.2-RC2",frontMatter:{title:"Headless Batch"},sidebar:"main",previous:{title:"Headless Legacy",permalink:"/wiki/1.8.2-RC2/HeadlessLegacy"},next:{title:"Server",permalink:"/wiki/1.8.2-RC2/HeadlessServer"}},o={},c=[{value:"Getting started",id:"getting-started",level:2},{value:"Simulation Output",id:"simulation-output",level:2}];function d(e){const t={a:"a",code:"code",em:"em",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h2,{id:"getting-started",children:"Getting started"}),"\n",(0,i.jsxs)(t.p,{children:["This headless mode is the ",(0,i.jsx)(t.em,{children:"Batch"})," one."]}),"\n",(0,i.jsxs)(t.p,{children:["The advantage of this mode is how easily it is to prepare and launch, contrarily to the ",(0,i.jsx)(t.a,{href:"HeadlessLegacy",children:"Headless Legacy"}),", this mode do not need any other file than the GAML file holding the experiment of ",(0,i.jsxs)(t.a,{href:"BatchExperiments",children:[(0,i.jsx)(t.em,{children:"type"})," ",(0,i.jsx)(t.code,{children:"batch"})]}),"."]}),"\n",(0,i.jsx)(t.p,{children:"Once you finished preparing your batch experiment, you can run it with a command similar to this out:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"bash ./gama-headless.sh [option] -batch experimentName /path/to/file.gaml\n"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["with:","\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"-batch"}),": the runner flag to launch a batch exploration"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"experimentName"}),": the name of your batch experiment in the following file"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"/path/to/file.gaml"}),": the path (relative or absolute) containing the batch experiment"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"simulation-output",children:"Simulation Output"}),"\n",(0,i.jsx)(t.p,{children:"Unfortunatly, this mode can't save output data automatically, the actual way to do is saving wanted data inside CSV files from your model."})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>l});var i=n(96540);const a={},s=i.createContext(a);function r(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);