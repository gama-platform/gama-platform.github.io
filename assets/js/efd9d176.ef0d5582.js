"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[18041],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>m});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},l=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),u=c(r),f=a,m=u["".concat(s,".").concat(f)]||u[f]||d[f]||i;return r?n.createElement(m,o(o({ref:t},l),{},{components:r})):n.createElement(m,o({ref:t},l))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=f;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p[u]="string"==typeof e?e:a,o[1]=p;for(var c=2;c<i;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},74440:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>p,metadata:()=>c,toc:()=>u});var n=r(87462),a=r(63366),i=(r(67294),r(3905)),o=["components"],p={title:"Defining advanced species"},s=void 0,c={unversionedId:"DefiningAdvancedSpecies",id:"version-1.8.1/DefiningAdvancedSpecies",title:"Defining advanced species",description:"In the previous chapter, we saw how to declare and manipulate regular species and the global species (as a reminder, the instance of the global species is the world agent).",source:"@site/versioned_docs/version-1.8.1/DefiningAdvancedSpecies.md",sourceDirName:".",slug:"/DefiningAdvancedSpecies",permalink:"/wiki/1.8.1/DefiningAdvancedSpecies",draft:!1,editUrl:"https://github.com/gama-platform/gama/wiki/DefiningAdvancedSpecies/_edit",tags:[],version:"1.8.1",frontMatter:{title:"Defining advanced species"},sidebar:"side",previous:{title:"Inheritance",permalink:"/wiki/1.8.1/Inheritance"},next:{title:"Grid Species",permalink:"/wiki/1.8.1/GridSpecies"}},l={},u=[],d={toc:u},f="wrapper";function m(e){var t=e.components,r=(0,a.Z)(e,o);return(0,i.kt)(f,(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"In the previous chapter, we saw how to declare and manipulate ",(0,i.kt)("a",{parentName:"p",href:"RegularSpecies"},(0,i.kt)("strong",{parentName:"a"},"regular species"))," and the ",(0,i.kt)("a",{parentName:"p",href:"GlobalSpecies"},(0,i.kt)("strong",{parentName:"a"},"global species"))," (as a reminder, the instance of the ",(0,i.kt)("strong",{parentName:"p"},"global species")," is the ",(0,i.kt)("strong",{parentName:"p"},"world agent"),"). "),(0,i.kt)("p",null,"We will now see that GAMA provides you the possibility to declare some special species, such as ",(0,i.kt)("a",{parentName:"p",href:"GridSpecies"},(0,i.kt)("strong",{parentName:"a"},"grids"))," or ",(0,i.kt)("a",{parentName:"p",href:"GraphSpecies"},(0,i.kt)("strong",{parentName:"a"},"graphs")),", with their own built-in attributes and their own built-in actions. We will also see how to declare ",(0,i.kt)("a",{parentName:"p",href:"MirrorSpecies"},(0,i.kt)("strong",{parentName:"a"},"mirror species")),', which is a "copy" of a regular species, in order to give it an other representation. Finally, we will learn how to represent several agents through one unique agent, with ',(0,i.kt)("a",{parentName:"p",href:"MultiLevelArchitecture"},(0,i.kt)("strong",{parentName:"a"},"multi-level architecture")),"."))}m.isMDXComponent=!0}}]);