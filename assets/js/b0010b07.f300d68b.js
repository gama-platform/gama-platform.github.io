"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[31601],{64423:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>t,default:()=>a,frontMatter:()=>l,metadata:()=>d,toc:()=>c});var i=s(74848),r=s(28453);const l={title:"Built-in Skills"},t=void 0,d={id:"BuiltInSkills",title:"Built-in Skills",description:"----",source:"@site/versioned_docs/version-1.8.1/BuiltInSkills.md",sourceDirName:".",slug:"/BuiltInSkills",permalink:"/wiki/1.8.1/BuiltInSkills",draft:!1,unlisted:!1,editUrl:"https://github.com/gama-platform/gama/wiki/BuiltInSkills/_edit",tags:[],version:"1.8.1",frontMatter:{title:"Built-in Skills"},sidebar:"main",previous:{title:"The 'experiment' built-in species (Under Construction)",permalink:"/wiki/1.8.1/ExperimentBuiltIn"},next:{title:"Built-in Architectures",permalink:"/wiki/1.8.1/BuiltInArchitectures"}},o={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Table of Contents",id:"table-of-contents",level:2},{value:"<code>advanced_driving</code>",id:"advanced_driving",level:2},{value:"Variables",id:"variables",level:3},{value:"Actions",id:"actions",level:3},{value:"<strong><code>advanced_follow_driving</code></strong>",id:"advanced_follow_driving",level:4},{value:"<strong><code>compute_path</code></strong>",id:"compute_path",level:4},{value:"<strong><code>die</code></strong>",id:"die",level:4},{value:"<strong><code>drive</code></strong>",id:"drive",level:4},{value:"<strong><code>drive_random</code></strong>",id:"drive_random",level:4},{value:"<strong><code>external_factor_impact</code></strong>",id:"external_factor_impact",level:4},{value:"<strong><code>is_ready_next_road</code></strong>",id:"is_ready_next_road",level:4},{value:"<strong><code>lane_choice</code></strong>",id:"lane_choice",level:4},{value:"<strong><code>path_from_nodes</code></strong>",id:"path_from_nodes",level:4},{value:"<strong><code>speed_choice</code></strong>",id:"speed_choice",level:4},{value:"<strong><code>test_next_road</code></strong>",id:"test_next_road",level:4},{value:"<code>driving</code>",id:"driving",level:2},{value:"Variables",id:"variables-1",level:3},{value:"Actions",id:"actions-1",level:3},{value:"<strong><code>follow_driving</code></strong>",id:"follow_driving",level:4},{value:"<strong><code>goto_driving</code></strong>",id:"goto_driving",level:4},{value:"<code>fipa</code>",id:"fipa",level:2},{value:"Variables",id:"variables-2",level:3},{value:"Actions",id:"actions-2",level:3},{value:"<strong><code>accept_proposal</code></strong>",id:"accept_proposal",level:4},{value:"<strong><code>agree</code></strong>",id:"agree",level:4},{value:"<strong><code>cancel</code></strong>",id:"cancel",level:4},{value:"<strong><code>cfp</code></strong>",id:"cfp",level:4},{value:"<strong><code>end_conversation</code></strong>",id:"end_conversation",level:4},{value:"<strong><code>failure</code></strong>",id:"failure",level:4},{value:"<strong><code>inform</code></strong>",id:"inform",level:4},{value:"<strong><code>propose</code></strong>",id:"propose",level:4},{value:"<strong><code>query</code></strong>",id:"query",level:4},{value:"<strong><code>refuse</code></strong>",id:"refuse",level:4},{value:"<strong><code>reject_proposal</code></strong>",id:"reject_proposal",level:4},{value:"<strong><code>reply</code></strong>",id:"reply",level:4},{value:"<strong><code>request</code></strong>",id:"request",level:4},{value:"<strong><code>send</code></strong>",id:"send",level:4},{value:"<strong><code>start_conversation</code></strong>",id:"start_conversation",level:4},{value:"<strong><code>subscribe</code></strong>",id:"subscribe",level:4},{value:"<code>MDXSKILL</code>",id:"mdxskill",level:2},{value:"Variables",id:"variables-3",level:3},{value:"Actions",id:"actions-3",level:3},{value:"<strong><code>select</code></strong>",id:"select",level:4},{value:"<strong><code>testConnection</code></strong>",id:"testconnection",level:4},{value:"<strong><code>timeStamp</code></strong>",id:"timestamp",level:4},{value:"<code>messaging</code>",id:"messaging",level:2},{value:"Variables",id:"variables-4",level:3},{value:"Actions",id:"actions-4",level:3},{value:"<strong><code>send</code></strong>",id:"send-1",level:4},{value:"<code>moving</code>",id:"moving",level:2},{value:"Variables",id:"variables-5",level:3},{value:"Actions",id:"actions-5",level:3},{value:"<strong><code>follow</code></strong>",id:"follow",level:4},{value:"<strong><code>goto</code></strong>",id:"goto",level:4},{value:"<strong><code>move</code></strong>",id:"move",level:4},{value:"<strong><code>wander</code></strong>",id:"wander",level:4},{value:"<code>moving3D</code>",id:"moving3d",level:2},{value:"Variables",id:"variables-6",level:3},{value:"Actions",id:"actions-6",level:3},{value:"<strong><code>move</code></strong>",id:"move-1",level:4},{value:"<code>network</code>",id:"network",level:2},{value:"Variables",id:"variables-7",level:3},{value:"Actions",id:"actions-7",level:3},{value:"<strong><code>connect</code></strong>",id:"connect",level:4},{value:"<strong><code>execute</code></strong>",id:"execute",level:4},{value:"<strong><code>fetch_message</code></strong>",id:"fetch_message",level:4},{value:"<strong><code>has_more_message</code></strong>",id:"has_more_message",level:4},{value:"<strong><code>join_group</code></strong>",id:"join_group",level:4},{value:"<strong><code>leave_group</code></strong>",id:"leave_group",level:4},{value:"<strong><code>simulate_step</code></strong>",id:"simulate_step",level:4},{value:"<code>physics</code>",id:"physics",level:2},{value:"Variables",id:"variables-8",level:3},{value:"Actions",id:"actions-8",level:3},{value:"<code>skill_road</code>",id:"skill_road",level:2},{value:"Variables",id:"variables-9",level:3},{value:"Actions",id:"actions-9",level:3},{value:"<strong><code>register</code></strong>",id:"register",level:4},{value:"<strong><code>unregister</code></strong>",id:"unregister",level:4},{value:"<strong><code>update_lanes</code></strong>",id:"update_lanes",level:4},{value:"<code>skill_road_node</code>",id:"skill_road_node",level:2},{value:"Variables",id:"variables-10",level:3},{value:"Actions",id:"actions-10",level:3},{value:"<code>SQLSKILL</code>",id:"sqlskill",level:2},{value:"Variables",id:"variables-11",level:3},{value:"Actions",id:"actions-11",level:3},{value:"<strong><code>executeUpdate</code></strong>",id:"executeupdate",level:4},{value:"<strong><code>getCurrentDateTime</code></strong>",id:"getcurrentdatetime",level:4},{value:"<strong><code>getDateOffset</code></strong>",id:"getdateoffset",level:4},{value:"<strong><code>insert</code></strong>",id:"insert",level:4},{value:"<strong><code>list2Matrix</code></strong>",id:"list2matrix",level:4},{value:"<strong><code>select</code></strong>",id:"select-1",level:4},{value:"<strong><code>testConnection</code></strong>",id:"testconnection-1",level:4},{value:"<strong><code>timeStamp</code></strong>",id:"timestamp-1",level:4}];function h(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"This file is automatically generated from java files. Do Not Edit It."})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,i.jsx)(n.p,{children:"Skills are built-in modules, written in Java, that provide a set of related built-in variables and built-in actions (in addition to those already provided by GAMA) to the species that declare them. A declaration of skill is done by filling the skills attribute in the species definition:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"species my_species skills: [skill1, skill2] {\n    ...\n}\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Skills have been designed to be mutually compatible so that any combination of them will result in a functional species. An example of skill is the ",(0,i.jsx)(n.code,{children:"moving"})," skill."]}),"\n",(0,i.jsx)(n.p,{children:"So, for instance, if a species is declared as:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"species foo skills: [moving]{\n...\n}\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Its agents will automatically be provided with the following variables : ",(0,i.jsx)(n.code,{children:"speed"}),", ",(0,i.jsx)(n.code,{children:"heading"}),", ",(0,i.jsx)(n.code,{children:"destination"})," and the following actions: ",(0,i.jsx)(n.code,{children:"move"}),", ",(0,i.jsx)(n.code,{children:"goto"}),", ",(0,i.jsx)(n.code,{children:"wander"}),", ",(0,i.jsx)(n.code,{children:"follow"})," in addition to those built-in in species and declared by the modeller. Most of these variables, except the ones marked read-only, can be customized and modified like normal variables by the modeller. For instance, one could want to set a maximum for the speed; this would be done by redeclaring it like this:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"float speed max:100 min:0;\n"})}),"\n",(0,i.jsx)(n.p,{children:"Or, to obtain a speed increasing at each simulation step:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"float speed max:100 min:0  <- 1 update: speed * 1.01;\n"})}),"\n",(0,i.jsx)(n.p,{children:"Or, to change the speed in a behavior:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"if speed = 5 {\n    speed <- 10;\n}\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"#advanced_driving",children:"advanced_driving"}),", ",(0,i.jsx)(n.a,{href:"#driving",children:"driving"}),", ",(0,i.jsx)(n.a,{href:"#fipa",children:"fipa"}),", ",(0,i.jsx)(n.a,{href:"#mdxskill",children:"MDXSKILL"}),", ",(0,i.jsx)(n.a,{href:"#messaging",children:"messaging"}),", ",(0,i.jsx)(n.a,{href:"#moving",children:"moving"}),", ",(0,i.jsx)(n.a,{href:"#moving3d",children:"moving3D"}),", ",(0,i.jsx)(n.a,{href:"#network",children:"network"}),", ",(0,i.jsx)(n.a,{href:"#physics",children:"physics"}),", ",(0,i.jsx)(n.a,{href:"#skill_road",children:"skill_road"}),", ",(0,i.jsx)(n.a,{href:"#skill_road_node",children:"skill_road_node"}),", ",(0,i.jsx)(n.a,{href:"#sqlskill",children:"SQLSKILL"}),","]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"advanced_driving",children:(0,i.jsx)(n.code,{children:"advanced_driving"})}),"\n",(0,i.jsx)(n.h3,{id:"variables",children:"Variables"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"current_index"})})," (",(0,i.jsx)(n.code,{children:"int"}),"): the current index of the agent target (according to the targets list)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"current_lane"})})," (",(0,i.jsx)(n.code,{children:"int"}),"): the current lane on which the agent is"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"current_path"})})," (",(0,i.jsx)(n.code,{children:"path"}),"): the current path that tha agent follow"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"current_road"})})," (",(0,i.jsx)(n.code,{children:"agent"}),"): current road on which the agent is"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"current_target"})})," (",(0,i.jsx)(n.code,{children:"point"}),"): the current target of the agent"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"distance_to_goal"})})," (",(0,i.jsx)(n.code,{children:"float"}),"): euclidean distance to the next point of the current segment"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"final_target"})})," (",(0,i.jsx)(n.code,{children:"point"}),"): the final target of the agent"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"max_acceleration"})})," (",(0,i.jsx)(n.code,{children:"float"}),"): maximum acceleration of the car for a cycle"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"max_speed"})})," (",(0,i.jsx)(n.code,{children:"float"}),"): maximal speed of the vehicle"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"min_safety_distance"})})," (",(0,i.jsx)(n.code,{children:"float"}),"): the minimal distance to another driver"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"min_security_distance"})})," (",(0,i.jsx)(n.code,{children:"float"}),"): the minimal distance to another driver"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"on_linked_road"})})," (",(0,i.jsx)(n.code,{children:"boolean"}),"): is the agent on the linked road?"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"proba_block_node"})})," (",(0,i.jsx)(n.code,{children:"float"}),"): probability to block a node (do not let other driver cross the crossroad)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"proba_lane_change_down"})})," (",(0,i.jsx)(n.code,{children:"float"}),"): probability to change lane to a lower lane (right lane if right side driving) if necessary"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"proba_lane_change_up"})})," (",(0,i.jsx)(n.code,{children:"float"}),"): probability to change lane to a upper lane (left lane if right side driving) if necessary"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"proba_respect_priorities"})})," (",(0,i.jsx)(n.code,{children:"float"}),"): probability to respect priority (right or left) laws"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"proba_respect_stops"})})," (",(0,i.jsx)(n.code,{children:"list"}),"): probability to respect stop laws - one value for each type of stop"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"proba_use_linked_road"})})," (",(0,i.jsx)(n.code,{children:"float"}),"): probability to change lane to a linked road lane if necessary"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"real_speed"})})," (",(0,i.jsx)(n.code,{children:"float"}),"): the actual speed of the agent (in meter/second)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"right_side_driving"})})," (",(0,i.jsx)(n.code,{children:"boolean"}),"): are drivers driving on the right size of the road?"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"safety_distance_coeff"})})," (",(0,i.jsx)(n.code,{children:"float"}),"): the coefficient for the computation of the the min distance between two drivers (according to the vehicle speed - security_distance =max(min_security_distance, security_distance_coeff ",(0,i.jsx)(n.code,{children:"*"})," min(self.real_speed, other.real_speed) )"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"security_distance_coeff"})})," (",(0,i.jsx)(n.code,{children:"float"}),"): the coefficient for the computation of the the min distance between two drivers (according to the vehicle speed - safety_distance =max(min_safety_distance, safety_distance_coeff ",(0,i.jsx)(n.code,{children:"*"})," min(self.real_speed, other.real_speed) )"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"segment_index_on_road"})})," (",(0,i.jsx)(n.code,{children:"int"}),"): current segment index of the agent on the current road"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"speed"})})," (",(0,i.jsx)(n.code,{children:"float"}),"): the speed of the agent (in meter/second)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"speed_coeff"})})," (",(0,i.jsx)(n.code,{children:"float"}),"): speed coefficient for the speed that the driver want to reach (according to the max speed of the road)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"targets"})})," (",(0,i.jsx)(n.code,{children:"list"}),"): the current list of points that the agent has to reach (path)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"vehicle_length"})})," (",(0,i.jsx)(n.code,{children:"float"}),"): the length of the vehicle (in meters)"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"actions",children:"Actions"}),"\n",(0,i.jsx)(n.h4,{id:"advanced_follow_driving",children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"advanced_follow_driving"})})}),"\n",(0,i.jsx)(n.p,{children:"moves the agent towards along the path passed in the arguments while considering the other agents in the network (only for graph topology)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"returns: float"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"path"})})," (path): a path to be followed."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"target"})})," (point): the target to reach"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"speed"})})," (float): the speed to use for this move (replaces the current value of speed)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"time"})})," (float): time to travel"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"compute_path",children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"compute_path"})})}),"\n",(0,i.jsx)(n.p,{children:"action to compute a path to a target location according to a given graph"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"returns: path"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"graph"})})," (graph): the graph on wich compute the path"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"target"})})," (agent): the target node to reach"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"source"})})," (agent): the source node (optional, if not defined, closest node to the agent location)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"on_road"})})," (agent): the road on which the agent is located (optional)"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"die",children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"die"})})}),"\n",(0,i.jsx)(n.p,{children:"remove the driving agent from its current road and make it die"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"returns: void"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"drive",children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"drive"})})}),"\n",(0,i.jsx)(n.p,{children:"action to drive toward the final target"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"returns: void"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"drive_random",children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"drive_random"})})}),"\n",(0,i.jsx)(n.p,{children:"action to drive by chosen randomly the next road"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"returns: void"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"proba_roads"})})," (map): a map containing for each road (key), the probability to be selected as next road (value)"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"external_factor_impact",children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"external_factor_impact"})})}),"\n",(0,i.jsx)(n.p,{children:"action that allows to define how the remaining time is impacted by external factor"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"returns: float"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"new_road"})})," (agent): the road on which to the driver wants to go"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"remaining_time"})})," (float): the remaining time"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"is_ready_next_road",children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"is_ready_next_road"})})}),"\n",(0,i.jsx)(n.p,{children:"action to test if the driver can take the given road at the given lane"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"returns: bool"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"new_road"})})," (agent): the road to test"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"lane"})})," (int): the lane to test"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"lane_choice",children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"lane_choice"})})}),"\n",(0,i.jsx)(n.p,{children:"action to choose a lane"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"returns: int"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"new_road"})})," (agent): the road on which to choose the lane"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"path_from_nodes",children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"path_from_nodes"})})}),"\n",(0,i.jsx)(n.p,{children:"action to compute a path from a list of nodes according to a given graph"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"returns: path"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"graph"})})," (graph): the graph on wich compute the path"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"nodes"})})," (list): the list of nodes composing the path"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"speed_choice",children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"speed_choice"})})}),"\n",(0,i.jsx)(n.p,{children:"action to choose a speed"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"returns: float"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"new_road"})})," (agent): the road on which to choose the speed"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"test_next_road",children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"test_next_road"})})}),"\n",(0,i.jsx)(n.p,{children:"action to test if the driver can take the given road"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"returns: bool"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"new_road"})})," (agent): the road to test"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"driving",children:(0,i.jsx)(n.code,{children:"driving"})}),"\n",(0,i.jsx)(n.h3,{id:"variables-1",children:"Variables"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"lanes_attribute"})})," (",(0,i.jsx)(n.code,{children:"string"}),"): the name of the attribut of the road agent that determine the number of road lanes"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"living_space"})})," (",(0,i.jsx)(n.code,{children:"float"}),"): the min distance between the agent and an obstacle (in meter)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"obstacle_species"})})," (",(0,i.jsx)(n.code,{children:"list"}),"): the list of species that are considered as obstacles"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"speed"})})," (",(0,i.jsx)(n.code,{children:"float"}),"): the speed of the agent (in meter/second)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"tolerance"})})," (",(0,i.jsx)(n.code,{children:"float"}),"): the tolerance distance used for the computation (in meter)"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"actions-1",children:"Actions"}),"\n",(0,i.jsx)(n.h4,{id:"follow_driving",children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"follow_driving"})})}),"\n",(0,i.jsx)(n.p,{children:"moves the agent along a given path passed in the arguments while considering the other agents in the network."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"returns: path"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"speed"})})," (float): the speed to use for this move (replaces the current value of speed)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"path"})})," (path): a path to be followed."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"return_path"})})," (boolean): if true, return the path followed (by default: false)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"move_weights"})})," (map): Weigths used for the moving."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"living_space"})})," (float): min distance between the agent and an obstacle (replaces the current value of living_space)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"tolerance"})})," (float): tolerance distance used for the computation (replaces the current value of tolerance)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"lanes_attribute"})})," (string): the name of the attribut of the road agent that determine the number of road lanes (replaces the current value of lanes_attribute)"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"goto_driving",children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"goto_driving"})})}),"\n",(0,i.jsx)(n.p,{children:"moves the agent towards the target passed in the arguments while considering the other agents in the network (only for graph topology)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"returns: path"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"target"})})," (geometry): the location or entity towards which to move."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"speed"})})," (float): the speed to use for this move (replaces the current value of speed)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"on"})})," (any type): list, agent, graph, geometry that restrains this move (the agent moves inside this geometry)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"return_path"})})," (boolean): if true, return the path followed (by default: false)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"move_weights"})})," (map): Weigths used for the moving."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"living_space"})})," (float): min distance between the agent and an obstacle (replaces the current value of living_space)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"tolerance"})})," (float): tolerance distance used for the computation (replaces the current value of tolerance)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"lanes_attribute"})})," (string): the name of the attribut of the road agent that determine the number of road lanes (replaces the current value of lanes_attribute)"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"fipa",children:(0,i.jsx)(n.code,{children:"fipa"})}),"\n",(0,i.jsx)(n.p,{children:"The fipa skill offers some primitives and built-in variables which enable agent to communicate with each other using the FIPA interaction protocol."}),"\n",(0,i.jsx)(n.h3,{id:"variables-2",children:"Variables"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"accept_proposals"})})," (",(0,i.jsx)(n.code,{children:"list"}),"): A list of 'accept_proposal' performative messages in the agent's mailbox"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"agrees"})})," (",(0,i.jsx)(n.code,{children:"list"}),"): A list of 'agree' performative messages."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"cancels"})})," (",(0,i.jsx)(n.code,{children:"list"}),"): A list of 'cancel' performative messages."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"cfps"})})," (",(0,i.jsx)(n.code,{children:"list"}),"): A list of 'cfp' (call for proposal) performative messages."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"conversations"})})," (",(0,i.jsx)(n.code,{children:"list"}),"): A list containing the current conversations of agent. Ended conversations are automatically removed from this list."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"failures"})})," (",(0,i.jsx)(n.code,{children:"list"}),"): A list of 'failure' performative messages."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"informs"})})," (",(0,i.jsx)(n.code,{children:"list"}),"): A list of 'inform' performative messages."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"proposes"})})," (",(0,i.jsx)(n.code,{children:"list"}),"): A list of 'propose' performative messages ."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"queries"})})," (",(0,i.jsx)(n.code,{children:"list"}),"): A list of 'query' performative messages."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"refuses"})})," (",(0,i.jsx)(n.code,{children:"list"}),"): A list of 'propose' performative messages."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"reject_proposals"})})," (",(0,i.jsx)(n.code,{children:"list"}),"): A list of 'reject_proposal' performative messages."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"requests"})})," (",(0,i.jsx)(n.code,{children:"list"}),"): A list of 'request' performative messages."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"requestWhens"})})," (",(0,i.jsx)(n.code,{children:"list"}),"): A list of 'request-when' performative messages."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"subscribes"})})," (",(0,i.jsx)(n.code,{children:"list"}),"): A list of 'subscribe' performative messages."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"actions-2",children:"Actions"}),"\n",(0,i.jsx)(n.h4,{id:"accept_proposal",children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"accept_proposal"})})}),"\n",(0,i.jsx)(n.p,{children:"Replies a message with an 'accept_proposal' performative message."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"returns: unknown"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"message"})})," (24): The message to be replied"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"contents"})})," (list): The content of the replying message"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"agree",children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"agree"})})}),"\n",(0,i.jsx)(n.p,{children:"Replies a message with an 'agree' performative message."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"returns: unknown"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"message"})})," (24): The message to be replied"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"contents"})})," (list): The content of the replying message"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"cancel",children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"cancel"})})}),"\n",(0,i.jsx)(n.p,{children:"Replies a message with a 'cancel' peformative message."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"returns: unknown"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"message"})})," (24): The message to be replied"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"contents"})})," (list): The content of the replying message"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"cfp",children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"cfp"})})}),"\n",(0,i.jsx)(n.p,{children:"Replies a message with a 'cfp' performative message."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"returns: unknown"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"message"})})," (24): The message to be replied"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"contents"})})," (list): The content of the replying message"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"end_conversation",children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"end_conversation"})})}),"\n",(0,i.jsx)(n.p,{children:"Reply a message with an 'end_conversation' peprformative message. This message marks the end of a conversation. In a 'no-protocol' conversation, it is the responsible of the modeler to explicitly send this message to mark the end of a conversation/interaction protocol."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"returns: unknown"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"message"})})," (24): The message to be replied"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"contents"})})," (list): The content of the replying message"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"failure",children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"failure"})})}),"\n",(0,i.jsx)(n.p,{children:"Replies a message with a 'failure' performative message."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"returns: unknown"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"message"})})," (24): The message to be replied"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"contents"})})," (list): The content of the replying message"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"inform",children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"inform"})})}),"\n",(0,i.jsx)(n.p,{children:"Replies a message with an 'inform' performative message."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"returns: unknown"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"message"})})," (24): The message to be replied"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"contents"})})," (list): The content of the replying message"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"propose",children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"propose"})})}),"\n",(0,i.jsx)(n.p,{children:"Replies a message with a 'propose' performative message."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"returns: unknown"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"message"})})," (24): The message to be replied"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"contents"})})," (list): The content of the replying message"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"query",children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"query"})})}),"\n",(0,i.jsx)(n.p,{children:"Replies a message with a 'query' performative message."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"returns: unknown"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"message"})})," (24): The message to be replied"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"contents"})})," (list): The content of the replying message"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"refuse",children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"refuse"})})}),"\n",(0,i.jsx)(n.p,{children:"Replies a message with a 'refuse' performative message."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"returns: unknown"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"message"})})," (24): The message to be replied"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"contents"})})," (list): The contents of the replying message"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"reject_proposal",children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"reject_proposal"})})}),"\n",(0,i.jsx)(n.p,{children:"Replies a message with a 'reject_proposal' performative message."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"returns: unknown"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"message"})})," (24): The message to be replied"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"contents"})})," (list): The content of the replying message"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"reply",children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"reply"})})}),"\n",(0,i.jsx)(n.p,{children:"Replies a message. This action should be only used to reply a message in a 'no-protocol' conversation and with a 'user defined performative'. For performatives supported by GAMA (i.e., standard FIPA performatives), please use the 'action' with the same name of 'performative'. For example, to reply a message with a 'request' performative message, the modeller should use the 'request' action."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"returns: unknown"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"message"})})," (24): The message to be replied"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"performative"})})," (string): The performative of the replying message"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"contents"})})," (list): The content of the replying message"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"request",children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"request"})})}),"\n",(0,i.jsx)(n.p,{children:"Replies a message with a 'request' performative message."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"returns: unknown"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"message"})})," (24): The message to be replied"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"contents"})})," (list): The content of the replying message"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"send",children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"send"})})}),"\n",(0,i.jsx)(n.p,{children:"Starts a conversation/interaction protocol."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"returns: msi.gaml.extensions.fipa.FIPAMessage"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"to"})})," (list): A list of receiver agents"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"contents"})})," (list): The content of the message. A list of any GAML type"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"performative"})})," (string): A string, representing the message performative"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"protocol"})})," (string): A string representing the name of interaction protocol"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"start_conversation",children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"start_conversation"})})}),"\n",(0,i.jsx)(n.p,{children:"Starts a conversation/interaction protocol."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"returns: msi.gaml.extensions.fipa.FIPAMessage"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"to"})})," (list): A list of receiver agents"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"contents"})})," (list): The content of the message. A list of any GAML type"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"performative"})})," (string): A string, representing the message performative"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"protocol"})})," (string): A string representing the name of interaction protocol"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"subscribe",children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"subscribe"})})}),"\n",(0,i.jsx)(n.p,{children:"Replies a message with a 'subscribe' performative message."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"returns: unknown"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"message"})})," (24): The message to be replied"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"contents"})})," (list): The content of the replying message"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"mdxskill",children:(0,i.jsx)(n.code,{children:"MDXSKILL"})}),"\n",(0,i.jsx)(n.p,{children:"This skill allows agents to be provided with actions and attributes in order to connect to MDX databases"}),"\n",(0,i.jsx)(n.h3,{id:"variables-3",children:"Variables"}),"\n",(0,i.jsx)(n.h3,{id:"actions-3",children:"Actions"}),"\n",(0,i.jsx)(n.h4,{id:"select",children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"select"})})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"returns: list<unknown>"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"params"})})," (map): Connection parameters"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"onColumns"})})," (string): select string with question marks"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"onRows"})})," (list): List of values that are used to replace question marks"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"from"})})," (list): List of values that are used to replace question marks"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"where"})})," (list): List of values that are used to replace question marks"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"values"})})," (list): List of values that are used to replace question marks"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"testconnection",children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"testConnection"})})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"returns: bool"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"params"})})," (map): Connection parameters"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"timestamp",children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"timeStamp"})})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"returns: float"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"messaging",children:(0,i.jsx)(n.code,{children:"messaging"})}),"\n",(0,i.jsx)(n.p,{children:"A simple skill that provides agents with a mailbox than can be filled with messages"}),"\n",(0,i.jsx)(n.h3,{id:"variables-4",children:"Variables"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"mailbox"})})," (",(0,i.jsx)(n.code,{children:"list"}),"): The list of messages that can be consulted by the agent"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"actions-4",children:"Actions"}),"\n",(0,i.jsx)(n.h4,{id:"send-1",children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"send"})})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"returns: msi.gama.extensions.messaging.GamaMessage"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"to"})})," (any type): The agent, or server, to which this message will be sent to"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"contents"})})," (any type): The contents of the message, an arbitrary object"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"moving",children:(0,i.jsx)(n.code,{children:"moving"})}),"\n",(0,i.jsx)(n.p,{children:"The moving skill is intended to define the minimal set of behaviours required for agents that are able to move on different topologies"}),"\n",(0,i.jsx)(n.h3,{id:"variables-5",children:"Variables"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"current_edge"})})," (",(0,i.jsx)(n.code,{children:"geometry"}),"): Represents the agent/geometry on which the agent is located (only used with a graph)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"current_path"})})," (",(0,i.jsx)(n.code,{children:"path"}),"): Represents the path on which the agent is moving on (goto action on a graph)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"destination"})})," (",(0,i.jsx)(n.code,{children:"point"}),"): Represents the next location of the agent if it keeps its current speed and heading (read-only). ** Only correct in continuous topologies and may return nil values if the destination is outside the environment **"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"heading"})})," (",(0,i.jsx)(n.code,{children:"float"}),"): Represents the absolute heading of the agent in degrees."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"location"})})," (",(0,i.jsx)(n.code,{children:"point"}),"): Represents the current position of the agent"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"real_speed"})})," (",(0,i.jsx)(n.code,{children:"float"}),"): Represents the actual speed of the agent (in meter/second)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"speed"})})," (",(0,i.jsx)(n.code,{children:"float"}),"): Represents the speed of the agent (in meter/second)"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"actions-5",children:"Actions"}),"\n",(0,i.jsx)(n.h4,{id:"follow",children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"follow"})})}),"\n",(0,i.jsx)(n.p,{children:"moves the agent along a given path passed in the arguments."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"returns: path"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"speed"})})," (float): the speed to use for this move (replaces the current value of speed)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"path"})})," (path): a path to be followed."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"move_weights"})})," (map): Weights used for the moving."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"return_path"})})," (boolean): if true, return the path followed (by default: false)"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"goto",children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"goto"})})}),"\n",(0,i.jsx)(n.p,{children:"moves the agent towards the target passed in the arguments."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"returns: path"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"target"})})," (geometry): the location or entity towards which to move."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"speed"})})," (float): the speed to use for this move (replaces the current value of speed)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"on"})})," (any type): graph, topology, list of geometries or map of geometries that restrain this move"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"recompute_path"})})," (boolean): if false, the path is not recompute even if the graph is modified (by default: true)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"return_path"})})," (boolean): if true, return the path followed (by default: false)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"move_weights"})})," (map): Weights used for the moving."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"move",children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"move"})})}),"\n",(0,i.jsx)(n.p,{children:"moves the agent forward, the distance being computed with respect to its speed and heading. The value of the corresponding variables are used unless arguments are passed."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"returns: path"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"speed"})})," (float): the speed to use for this move (replaces the current value of speed)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"heading"})})," (float): the angle (in degree) of the target direction."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"bounds"})})," (geometry): the geometry (the localized entity geometry) that restrains this move (the agent moves inside this geometry"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"wander",children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"wander"})})}),"\n",(0,i.jsx)(n.p,{children:"Moves the agent towards a random location at the maximum distance (with respect to its speed). The heading of the agent is chosen randomly if no amplitude is specified. This action changes the value of heading."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"returns: void"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"speed"})})," (float): the speed to use for this move (replaces the current value of speed)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"amplitude"})})," (float): a restriction placed on the random heading choice. The new heading is chosen in the range (heading - amplitude/2, heading+amplitude/2)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"bounds"})})," (geometry): the geometry (the localized entity geometry) that restrains this move (the agent moves inside this geometry)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"on"})})," (graph): the graph that restrains this move (the agent moves on the graph"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"proba_edges"})})," (map): When the agent moves on a graph, the probability to choose another edge. If not defined, each edge has the same probability to be chosen"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"moving3d",children:(0,i.jsx)(n.code,{children:"moving3D"})}),"\n",(0,i.jsx)(n.p,{children:"The moving skill 3D is intended to define the minimal set of behaviours required for agents that are able to move on different topologies"}),"\n",(0,i.jsx)(n.h3,{id:"variables-6",children:"Variables"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"destination"})})," (",(0,i.jsx)(n.code,{children:"point"}),"): continuously updated destination of the agent with respect to its speed and heading (read-only)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"heading"})})," (",(0,i.jsx)(n.code,{children:"float"}),"): the absolute heading of the agent in degrees (in the range 0-359)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"pitch"})})," (",(0,i.jsx)(n.code,{children:"float"}),"): the absolute pitch of the agent in degrees (in the range 0-359)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"roll"})})," (",(0,i.jsx)(n.code,{children:"float"}),"): the absolute roll of the agent in degrees (in the range 0-359)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"speed"})})," (",(0,i.jsx)(n.code,{children:"float"}),"): the speed of the agent (in meter/second)"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"actions-6",children:"Actions"}),"\n",(0,i.jsx)(n.h4,{id:"move-1",children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"move"})})}),"\n",(0,i.jsx)(n.p,{children:"moves the agent forward, the distance being computed with respect to its speed and heading. The value of the corresponding variables are used unless arguments are passed."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"returns: path"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"speed"})})," (float): the speed to use for this move (replaces the current value of speed)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"heading"})})," (int): int, optional, the direction to take for this move (replaces the current value of heading)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"pitch"})})," (int): int, optional, the direction to take for this move (replaces the current value of pitch)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"heading"})})," (int): int, optional, the direction to take for this move (replaces the current value of roll)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"bounds"})})," (geometry): the geometry (the localized entity geometry) that restrains this move (the agent moves inside this geometry"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"network",children:(0,i.jsx)(n.code,{children:"network"})}),"\n",(0,i.jsx)(n.p,{children:"The network skill provides new features to let agents exchange message through network."}),"\n",(0,i.jsx)(n.h3,{id:"variables-7",children:"Variables"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"network_groups"})})," (",(0,i.jsx)(n.code,{children:"list"}),"): The set of groups the agent belongs to"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"network_name"})})," (",(0,i.jsx)(n.code,{children:"string"}),"): Net ID of the agent"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"network_server"})})," (",(0,i.jsx)(n.code,{children:"list"}),"): The list of all the servers to which the agent is connected"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"actions-7",children:"Actions"}),"\n",(0,i.jsx)(n.h4,{id:"connect",children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"connect"})})}),"\n",(0,i.jsx)(n.p,{children:"Action used by a networking agent to connect to a server or as a server."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"returns: void"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"protocol"})})," (string): protocol type (MQTT (by default), TCP, UDP): the possible value ares 'udp_server', 'udp_emitter', 'tcp_server', 'tcp_client', otherwise the MQTT protocol is used."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"port"})})," (int): Port number"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"with_name"})})," (string): ID of the agent (its name) for the simulation"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"login"})})," (string): login for the connection to the server"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"password"})})," (string): password associated to the login"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"force_network_use"})})," (boolean): force the use of the network even interaction between local agents"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"to"})})," (string): server URL (localhost or a server URL)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"size_packet"})})," (int): For UDP connection, it sets the maximum size of received packets (deafault = 1024bits)."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"execute",children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"execute"})})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"returns: string"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"command"})})," (string): command to execute"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"fetch_message",children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"fetch_message"})})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"returns: msi.gama.extensions.messaging.GamaMessage"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"has_more_message",children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"has_more_message"})})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"returns: bool"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"join_group",children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"join_group"})})}),"\n",(0,i.jsx)(n.p,{children:'allow an agent to join a group of agents in order to broadcast messages to other membersor to receive messages sent by other members. Note that all members of the group called : "ALL".'}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"returns: void"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"with_name"})})," (string): name of the group"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"leave_group",children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"leave_group"})})}),"\n",(0,i.jsx)(n.p,{children:"leave a group of agents. The leaving agent will not receive any message from the group. Overwhise, it can send messages to the left group"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"returns: void"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"with_name"})})," (string): name of the group the agent wants to leave"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"simulate_step",children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"simulate_step"})})}),"\n",(0,i.jsx)(n.p,{children:"Simulate a step to test the skill. It must be used for Gama-platform test only"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"returns: void"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"physics",children:(0,i.jsx)(n.code,{children:"physics"})}),"\n",(0,i.jsx)(n.h3,{id:"variables-8",children:"Variables"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"ang_damping"})})," (",(0,i.jsx)(n.code,{children:"float"}),"): angular dampling"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"collisionBound"})})," (",(0,i.jsx)(n.code,{children:"map"}),"): map describing the shape of the agent. format for sphere: ['shape'::'sphere', 'radius'::10.0]; for floor: ['shape'::'floor', 'x'::100.0, 'y'::100.0, 'z'::2.0]; if not defined, the shape attribute of the agent is used."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"friction"})})," (",(0,i.jsx)(n.code,{children:"float"}),"): coefficient of friction of the agent"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"lin_damping"})})," (",(0,i.jsx)(n.code,{children:"float"}),"): linear dampling"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"mass"})})," (",(0,i.jsx)(n.code,{children:"float"}),"): mass of the agent"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"restitution"})})," (",(0,i.jsx)(n.code,{children:"float"}),"): coefficient of restitution force of the agent"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"velocity"})})," (",(0,i.jsx)(n.code,{children:"list"}),"): velocity of the agent"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"actions-8",children:"Actions"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"skill_road",children:(0,i.jsx)(n.code,{children:"skill_road"})}),"\n",(0,i.jsx)(n.h3,{id:"variables-9",children:"Variables"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"agents_on"})})," (",(0,i.jsx)(n.code,{children:"list"}),"): for each lane of the road, the list of agents for each segment"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"all_agents"})})," (",(0,i.jsx)(n.code,{children:"list"}),"): the list of agents on the road"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"lanes"})})," (",(0,i.jsx)(n.code,{children:"int"}),"): the number of lanes"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"linked_road"})})," (",(0,i.jsx)(n.code,{children:"-199"}),"): the linked road: the lanes of this linked road will be usable by drivers on the road"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"maxspeed"})})," (",(0,i.jsx)(n.code,{children:"float"}),"): the maximal speed on the road"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"source_node"})})," (",(0,i.jsx)(n.code,{children:"agent"}),"): the source node of the road"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"target_node"})})," (",(0,i.jsx)(n.code,{children:"agent"}),"): the target node of the road"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"actions-9",children:"Actions"}),"\n",(0,i.jsx)(n.h4,{id:"register",children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"register"})})}),"\n",(0,i.jsx)(n.p,{children:"register the agent on the road at the given lane"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"returns: void"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"agent"})})," (agent): the agent to register on the road."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"lane"})})," (int): the lane index on which to register; if lane index >= number of lanes, then register on the linked road"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"unregister",children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"unregister"})})}),"\n",(0,i.jsx)(n.p,{children:"unregister the agent on the road"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"returns: void"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"agent"})})," (agent): the agent to unregister on the road."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"update_lanes",children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"update_lanes"})})}),"\n",(0,i.jsx)(n.p,{children:"change the number of lanes of the road"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"returns: void"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"lanes"})})," (int): the new number of lanes."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"skill_road_node",children:(0,i.jsx)(n.code,{children:"skill_road_node"})}),"\n",(0,i.jsx)(n.h3,{id:"variables-10",children:"Variables"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"block"})})," (",(0,i.jsx)(n.code,{children:"map"}),"): define the list of agents blocking the node, and for each agent, the list of concerned roads"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"priority_roads"})})," (",(0,i.jsx)(n.code,{children:"list"}),"): the list of priority roads"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"roads_in"})})," (",(0,i.jsx)(n.code,{children:"list"}),"): the list of input roads"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"roads_out"})})," (",(0,i.jsx)(n.code,{children:"list"}),"): the list of output roads"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"stop"})})," (",(0,i.jsx)(n.code,{children:"list"}),"): define for each type of stop, the list of concerned roads"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"actions-10",children:"Actions"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"sqlskill",children:(0,i.jsx)(n.code,{children:"SQLSKILL"})}),"\n",(0,i.jsx)(n.p,{children:"This skill allows agents to be provided with actions and attributes in order to connect to SQL databases"}),"\n",(0,i.jsx)(n.h3,{id:"variables-11",children:"Variables"}),"\n",(0,i.jsx)(n.h3,{id:"actions-11",children:"Actions"}),"\n",(0,i.jsx)(n.h4,{id:"executeupdate",children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"executeUpdate"})})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"returns: int"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"params"})})," (map): Connection parameters"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"updateComm"})})," (string): SQL commands such as Create, Update, Delete, Drop with question mark"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"values"})})," (list): List of values that are used to replace question mark"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"getcurrentdatetime",children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"getCurrentDateTime"})})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"returns: string"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"dateFormat"})})," (string): date format examples: 'yyyy-MM-dd' , 'yyyy-MM-dd HH:mm",":ss","'"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"getdateoffset",children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"getDateOffset"})})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"returns: string"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"dateFormat"})})," (string): date format examples: 'yyyy-MM-dd' , 'yyyy-MM-dd HH:mm",":ss","'"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"dateStr"})})," (string): Start date"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"offset"})})," (string): number on day to increase or decrease"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"insert",children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"insert"})})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"returns: int"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"params"})})," (map): Connection parameters"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"into"})})," (string): Table name"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"columns"})})," (list): List of column name of table"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"values"})})," (list): List of values that are used to insert into table. Columns and values must have same size"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"list2matrix",children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"list2Matrix"})})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"returns: matrix"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"param"})})," (list): Param: a list of records and metadata"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"getName"})})," (boolean): getType: a boolean value, optional parameter"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"getType"})})," (boolean): getType: a boolean value, optional parameter"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"select-1",children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"select"})})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"returns: list"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"params"})})," (map): Connection parameters"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"select"})})," (string): select string with question marks"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"values"})})," (list): List of values that are used to replace question marks"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"testconnection-1",children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"testConnection"})})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"returns: bool"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"params"})})," (map): Connection parameters"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"timestamp-1",children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"timeStamp"})})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"returns: float"}),"\n"]})]})}function a(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>d});var i=s(96540);const r={},l=i.createContext(r);function t(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);