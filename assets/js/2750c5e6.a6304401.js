"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[96960],{23105:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>h});const i=JSON.parse('{"id":"Event__CP12Batch","title":"Batch Experiments","description":"By the Batch People","source":"@site/versioned_docs/version-1.8.2-RC2/Event__CP12Batch.md","sourceDirName":".","slug":"/Event__CP12Batch","permalink":"/wiki/1.8.2-RC2/Event__CP12Batch","draft":false,"unlisted":false,"editUrl":"https://github.com/gama-platform/gama/wiki/Event__CP12Batch/_edit","tags":[],"version":"1.8.2-RC2","frontMatter":{"title":"Batch Experiments"}}');var a=t(74848),r=t(28453);const l={title:"Batch Experiments"},o=void 0,s={},h=[{value:"What do we have?",id:"what-do-we-have",level:2},{value:"How does it work?",id:"how-does-it-work",level:2},{value:"What would be great in Gama 12.4?",id:"what-would-be-great-in-gama-124",level:2},{value:"The Solution",id:"the-solution",level:2},{value:"One simple example of what would be great:",id:"one-simple-example-of-what-would-be-great",level:2},{value:"TODO",id:"todo",level:2}];function p(e){const n={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"By the Batch People"}),"\n",(0,a.jsx)(n.p,{children:"Philippe Caillou,\nThomas Louail,\nNicolas Marilleau,\nHuynh Quang Nghi,\nSerge Stinckwich,\nPatrick Taillandier,\nJean-Daniel Zucker"}),"\n",(0,a.jsx)(n.h2,{id:"what-do-we-have",children:"What do we have?"}),"\n",(0,a.jsx)(n.p,{children:"Define an experiment, batch mode (but same capabilities as GUI mode)"}),"\n",(0,a.jsx)(n.p,{children:"\xb7         Parameter exploration:  Param element"}),"\n",(0,a.jsx)(n.p,{children:"o   Explicit"}),"\n",(0,a.jsx)(n.p,{children:"o   List with step"}),"\n",(0,a.jsx)(n.p,{children:"\xb7         Method Element"}),"\n",(0,a.jsx)(n.p,{children:"o   Exhaustive"}),"\n",(0,a.jsx)(n.p,{children:"o   Hill climbing"}),"\n",(0,a.jsx)(n.p,{children:"o   Simulated annealing"}),"\n",(0,a.jsx)(n.p,{children:"o   Tabu Search"}),"\n",(0,a.jsx)(n.p,{children:"o   Reactive Tabu Search"}),"\n",(0,a.jsx)(n.p,{children:"o   Genetic Algorithm"}),"\n",(0,a.jsx)(n.p,{children:"\xb7         File export"}),"\n",(0,a.jsx)(n.p,{children:"o   File"}),"\n",(0,a.jsx)(n.h2,{id:"how-does-it-work",children:"How does it work?"}),"\n",(0,a.jsx)(n.p,{children:"\xb7         The experiment (the plan) creates the simulation (future: Headless mode)"}),"\n",(0,a.jsx)(n.h2,{id:"what-would-be-great-in-gama-124",children:"What would be great in Gama 12.4?"}),"\n",(0,a.jsx)(n.p,{children:"\xb7         Export agent/simulation data in the file"}),"\n",(0,a.jsx)(n.p,{children:"o   =>Define code in the experiment (loop over agents)"}),"\n",(0,a.jsx)(n.p,{children:"\xb7         Put rules for variable exploration"}),"\n",(0,a.jsx)(n.p,{children:"o   Ex: explore b={1,2,3}. if a=2 explore b={2,3} only"}),"\n",(0,a.jsx)(n.p,{children:"o   How? Put code in the exploring loop => put real GAML code in the agent"}),"\n",(0,a.jsx)(n.p,{children:'o   => reflex "method" or "explore"'}),"\n",(0,a.jsx)(n.p,{children:"o   Some existing exploration actions can be used with a ParameterSet (Map?) parameter"}),"\n",(0,a.jsx)(n.p,{children:"\xb7         Show plots in batch"}),"\n",(0,a.jsx)(n.p,{children:"o   Define output with the code/variable of the experiment agent"}),"\n",(0,a.jsx)(n.p,{children:"o   Require a getVariable() operator that gets the last simulation variables values"}),"\n",(0,a.jsx)(n.p,{children:"\xb7         Compare agent trajectories"}),"\n",(0,a.jsx)(n.p,{children:"o   Stats a posteriori"}),"\n",(0,a.jsx)(n.p,{children:"o   (not possible inside a simulation because there is no end)"}),"\n",(0,a.jsx)(n.p,{children:"o   => action \xab aftersimulation \xbb d\xe9fined by the user"}),"\n",(0,a.jsx)(n.p,{children:"o   Require a getVariable() operator that gets the last simulation variables values (to be able to loop on agents)"}),"\n",(0,a.jsx)(n.p,{children:"\xb7         Define more parameters/variables in the file (CSV)"}),"\n",(0,a.jsx)(n.p,{children:"o   => use of the Save already working"}),"\n",(0,a.jsx)(n.p,{children:"\xb7         Launch parallel simulation on multicore/clusters"}),"\n",(0,a.jsx)(n.p,{children:'o   => special action "runSimulation" parameter to launch 4 in parallel?'}),"\n",(0,a.jsx)(n.p,{children:'\xb7         "Generate" agents'}),"\n",(0,a.jsx)(n.p,{children:"o   Define agent parameters by using global/previous variables/files"}),"\n",(0,a.jsx)(n.p,{children:'o   Use of an "initSimulation" action before the "runSimulation" to  be able to change manually the simulation parameters'}),"\n",(0,a.jsx)(n.p,{children:"\xb7         D\xe9finition graphique de l\u2019espace de valeur, \xe9ventuellement en 2D et disjoint"}),"\n",(0,a.jsx)(n.p,{children:"o   Specific OutPut"}),"\n",(0,a.jsx)(n.h2,{id:"the-solution",children:"The Solution"}),"\n",(0,a.jsxs)(n.p,{children:["Define a new ",(0,a.jsx)(n.strong,{children:"Experimenter"})," agent and put real code/reflexes/actions... GAML code inside the Experimenter."]}),"\n",(0,a.jsx)(n.h2,{id:"one-simple-example-of-what-would-be-great",children:"One simple example of what would be great:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"experiment InteliExplore type: batch repeat: 2 keep_seed: true until: ( time > 200 ) {\n      int nbprey init:0;\n      int nbpredator init:0;\n\n      init\n      {\n            //for example read experiment plan from file\n           \n      }\n     \n\n      reflex method\n      {\n            loop prm over:prey_max\n            {\n                   do: createsimulation\n                   setParameter(\"nb_preys_init\",pr)\n\n                   do: initsimulation\n\n                   if (prey_max<100)\n                   setParameter(\"nb_predators_init\",200)\n                   if (prey_max>100)\n                   setParameter(\"nb_predators_init\",200)\n\n                   do: runsimulation;\n\n                   do: aftersimulation;\n                  \n            }\n      }\n\n      action aftersimulation\n      {\n            loop over getVariable(agents)\n            {\n                   log(\"everything dans file\");      //with the save function?\n            }     \n      }\n\n      chart name: 'Species evolution' type: series background: rgb('white') size: {1,0.4} position: {0, 0.05}\n      {\n      data initial_number_of_preys value: getValue(\"nb_preys_init\") color: rgb('blue') ;\n        data final_number_of_predator value: getValue(\"nb_predators\") color: rgb('red') ;\n      }\n    file name: 'logsimple' type: text data: 'simulation: '+ step\n                                  +'; allparams' + getAllParamters // PROBLEME comment sauver tous les parametres?\n                                   + '; nbPreys: ' + getValue(\"nb_preys_init\")\n                                    + '; finalPredators: ' + getValue(\"nb_preys\") ;\n}\n\n"})}),"\n",(0,a.jsx)(n.h2,{id:"todo",children:"TODO"}),"\n",(0,a.jsx)(n.p,{children:"And Alexis did almost all this in less than a day....... But how does he do that??"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"A new type of Custom Experiment"}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"In this experiment block, an ExperimenterAgent manages the simulations"}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Init() may have to create a Simulation to get a Scheduler (?) and/or a World(?)"}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"He must have a Scheduler to be able to stop/wait in a loop for the end of a Simulation (contradiction with previous point...)"}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Its most important function is to be able to call Simulation.step()"}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"=>Create a Simulation Type which has a Step() operator"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Create a ExperimentatorSkill with a lot of usefull actions (Step(int), ...)"}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Check that it is possible to define plots, logs, ..."}),"\n"]}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>o});var i=t(96540);const a={},r=i.createContext(a);function l(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);