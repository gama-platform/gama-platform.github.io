"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[22647],{5353:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>a,frontMatter:()=>l,metadata:()=>d,toc:()=>o});var s=i(74848),t=i(28453);const l={title:"Built-in Architectures"},r=void 0,d={id:"BuiltInArchitectures",title:"Built-in Architectures",description:"----",source:"@site/versioned_docs/version-1.8.1/BuiltInArchitectures.md",sourceDirName:".",slug:"/BuiltInArchitectures",permalink:"/wiki/1.8.1/BuiltInArchitectures",draft:!1,unlisted:!1,editUrl:"https://github.com/gama-platform/gama/wiki/BuiltInArchitectures/_edit",tags:[],version:"1.8.1",frontMatter:{title:"Built-in Architectures"},sidebar:"main",previous:{title:"Built-in Skills",permalink:"/wiki/1.8.1/BuiltInSkills"},next:{title:"Statements",permalink:"/wiki/1.8.1/Statements"}},c={},o=[{value:"INTRODUCTION",id:"introduction",level:2},{value:"Table of Contents",id:"table-of-contents",level:2},{value:"fsm",id:"fsm",level:2},{value:"Variables",id:"variables",level:3},{value:"Actions",id:"actions",level:3},{value:"parallel_bdi",id:"parallel_bdi",level:2},{value:"Variables",id:"variables-1",level:3},{value:"Actions",id:"actions-1",level:3},{value:"probabilistic_tasks",id:"probabilistic_tasks",level:2},{value:"Variables",id:"variables-2",level:3},{value:"Actions",id:"actions-2",level:3},{value:"reflex",id:"reflex",level:2},{value:"Variables",id:"variables-3",level:3},{value:"Actions",id:"actions-3",level:3},{value:"rules",id:"rules",level:2},{value:"Variables",id:"variables-4",level:3},{value:"Actions",id:"actions-4",level:3},{value:"simple_bdi",id:"simple_bdi",level:2},{value:"Variables",id:"variables-5",level:3},{value:"Actions",id:"actions-5",level:3},{value:"<strong><code>add_belief</code></strong>",id:"add_belief",level:4},{value:"<strong><code>add_belief_emotion</code></strong>",id:"add_belief_emotion",level:4},{value:"<strong><code>add_belief_mental_state</code></strong>",id:"add_belief_mental_state",level:4},{value:"<strong><code>add_desire</code></strong>",id:"add_desire",level:4},{value:"<strong><code>add_desire_emotion</code></strong>",id:"add_desire_emotion",level:4},{value:"<strong><code>add_desire_mental_state</code></strong>",id:"add_desire_mental_state",level:4},{value:"<strong><code>add_directly_belief</code></strong>",id:"add_directly_belief",level:4},{value:"<strong><code>add_directly_desire</code></strong>",id:"add_directly_desire",level:4},{value:"<strong><code>add_directly_ideal</code></strong>",id:"add_directly_ideal",level:4},{value:"<strong><code>add_directly_uncertainty</code></strong>",id:"add_directly_uncertainty",level:4},{value:"<strong><code>add_emotion</code></strong>",id:"add_emotion",level:4},{value:"<strong><code>add_ideal</code></strong>",id:"add_ideal",level:4},{value:"<strong><code>add_ideal_emotion</code></strong>",id:"add_ideal_emotion",level:4},{value:"<strong><code>add_ideal_mental_state</code></strong>",id:"add_ideal_mental_state",level:4},{value:"<strong><code>add_intention</code></strong>",id:"add_intention",level:4},{value:"<strong><code>add_intention_emotion</code></strong>",id:"add_intention_emotion",level:4},{value:"<strong><code>add_intention_mental_state</code></strong>",id:"add_intention_mental_state",level:4},{value:"<strong><code>add_obligation</code></strong>",id:"add_obligation",level:4},{value:"<strong><code>add_social_link</code></strong>",id:"add_social_link",level:4},{value:"<strong><code>add_subintention</code></strong>",id:"add_subintention",level:4},{value:"<strong><code>add_uncertainty</code></strong>",id:"add_uncertainty",level:4},{value:"<strong><code>add_uncertainty_emotion</code></strong>",id:"add_uncertainty_emotion",level:4},{value:"<strong><code>add_uncertainty_mental_state</code></strong>",id:"add_uncertainty_mental_state",level:4},{value:"<strong><code>change_dominance</code></strong>",id:"change_dominance",level:4},{value:"<strong><code>change_familiarity</code></strong>",id:"change_familiarity",level:4},{value:"<strong><code>change_liking</code></strong>",id:"change_liking",level:4},{value:"<strong><code>change_solidarity</code></strong>",id:"change_solidarity",level:4},{value:"<strong><code>change_trust</code></strong>",id:"change_trust",level:4},{value:"<strong><code>clear_beliefs</code></strong>",id:"clear_beliefs",level:4},{value:"<strong><code>clear_desires</code></strong>",id:"clear_desires",level:4},{value:"<strong><code>clear_emotions</code></strong>",id:"clear_emotions",level:4},{value:"<strong><code>clear_ideals</code></strong>",id:"clear_ideals",level:4},{value:"<strong><code>clear_intentions</code></strong>",id:"clear_intentions",level:4},{value:"<strong><code>clear_obligations</code></strong>",id:"clear_obligations",level:4},{value:"<strong><code>clear_social_links</code></strong>",id:"clear_social_links",level:4},{value:"<strong><code>clear_uncertainties</code></strong>",id:"clear_uncertainties",level:4},{value:"<strong><code>current_intention_on_hold</code></strong>",id:"current_intention_on_hold",level:4},{value:"<strong><code>get_belief</code></strong>",id:"get_belief",level:4},{value:"<strong><code>get_belief_emotion</code></strong>",id:"get_belief_emotion",level:4},{value:"<strong><code>get_belief_mental_state</code></strong>",id:"get_belief_mental_state",level:4},{value:"<strong><code>get_belief_with_name</code></strong>",id:"get_belief_with_name",level:4},{value:"<strong><code>get_beliefs</code></strong>",id:"get_beliefs",level:4},{value:"<strong><code>get_beliefs_metal_state</code></strong>",id:"get_beliefs_metal_state",level:4},{value:"<strong><code>get_beliefs_with_name</code></strong>",id:"get_beliefs_with_name",level:4},{value:"<strong><code>get_current_intention</code></strong>",id:"get_current_intention",level:4},{value:"<strong><code>get_current_plan</code></strong>",id:"get_current_plan",level:4},{value:"<strong><code>get_desire</code></strong>",id:"get_desire",level:4},{value:"<strong><code>get_desire_mental_state</code></strong>",id:"get_desire_mental_state",level:4},{value:"<strong><code>get_desire_with_name</code></strong>",id:"get_desire_with_name",level:4},{value:"<strong><code>get_desires</code></strong>",id:"get_desires",level:4},{value:"<strong><code>get_desires_mental_state</code></strong>",id:"get_desires_mental_state",level:4},{value:"<strong><code>get_desires_with_name</code></strong>",id:"get_desires_with_name",level:4},{value:"<strong><code>get_emotion</code></strong>",id:"get_emotion",level:4},{value:"<strong><code>get_emotion_with_name</code></strong>",id:"get_emotion_with_name",level:4},{value:"<strong><code>get_ideal</code></strong>",id:"get_ideal",level:4},{value:"<strong><code>get_ideal_mental_state</code></strong>",id:"get_ideal_mental_state",level:4},{value:"<strong><code>get_intention</code></strong>",id:"get_intention",level:4},{value:"<strong><code>get_intention_mental_state</code></strong>",id:"get_intention_mental_state",level:4},{value:"<strong><code>get_intention_with_name</code></strong>",id:"get_intention_with_name",level:4},{value:"<strong><code>get_intentions</code></strong>",id:"get_intentions",level:4},{value:"<strong><code>get_intentions_mental_state</code></strong>",id:"get_intentions_mental_state",level:4},{value:"<strong><code>get_intentions_with_name</code></strong>",id:"get_intentions_with_name",level:4},{value:"<strong><code>get_obligation</code></strong>",id:"get_obligation",level:4},{value:"<strong><code>get_plan</code></strong>",id:"get_plan",level:4},{value:"<strong><code>get_plans</code></strong>",id:"get_plans",level:4},{value:"<strong><code>get_social_link</code></strong>",id:"get_social_link",level:4},{value:"<strong><code>get_social_link_with_agent</code></strong>",id:"get_social_link_with_agent",level:4},{value:"<strong><code>get_uncertainty</code></strong>",id:"get_uncertainty",level:4},{value:"<strong><code>get_uncertainty_mental_state</code></strong>",id:"get_uncertainty_mental_state",level:4},{value:"<strong><code>has_belief</code></strong>",id:"has_belief",level:4},{value:"<strong><code>has_belief_mental_state</code></strong>",id:"has_belief_mental_state",level:4},{value:"<strong><code>has_belief_with_name</code></strong>",id:"has_belief_with_name",level:4},{value:"<strong><code>has_desire</code></strong>",id:"has_desire",level:4},{value:"<strong><code>has_desire_mental_state</code></strong>",id:"has_desire_mental_state",level:4},{value:"<strong><code>has_desire_with_name</code></strong>",id:"has_desire_with_name",level:4},{value:"<strong><code>has_emotion</code></strong>",id:"has_emotion",level:4},{value:"<strong><code>has_emotion_with_name</code></strong>",id:"has_emotion_with_name",level:4},{value:"<strong><code>has_ideal</code></strong>",id:"has_ideal",level:4},{value:"<strong><code>has_ideal_mental_state</code></strong>",id:"has_ideal_mental_state",level:4},{value:"<strong><code>has_ideal_with_name</code></strong>",id:"has_ideal_with_name",level:4},{value:"<strong><code>has_obligation</code></strong>",id:"has_obligation",level:4},{value:"<strong><code>has_social_link</code></strong>",id:"has_social_link",level:4},{value:"<strong><code>has_social_link_with_agent</code></strong>",id:"has_social_link_with_agent",level:4},{value:"<strong><code>has_uncertainty</code></strong>",id:"has_uncertainty",level:4},{value:"<strong><code>has_uncertainty_mental_state</code></strong>",id:"has_uncertainty_mental_state",level:4},{value:"<strong><code>has_uncertainty_with_name</code></strong>",id:"has_uncertainty_with_name",level:4},{value:"<strong><code>is_current_intention</code></strong>",id:"is_current_intention",level:4},{value:"<strong><code>is_current_intention_mental_state</code></strong>",id:"is_current_intention_mental_state",level:4},{value:"<strong><code>is_current_plan</code></strong>",id:"is_current_plan",level:4},{value:"<strong><code>remove_all_beliefs</code></strong>",id:"remove_all_beliefs",level:4},{value:"<strong><code>remove_belief</code></strong>",id:"remove_belief",level:4},{value:"<strong><code>remove_belief_mental_state</code></strong>",id:"remove_belief_mental_state",level:4},{value:"<strong><code>remove_desire</code></strong>",id:"remove_desire",level:4},{value:"<strong><code>remove_desire_mental_state</code></strong>",id:"remove_desire_mental_state",level:4},{value:"<strong><code>remove_emotion</code></strong>",id:"remove_emotion",level:4},{value:"<strong><code>remove_ideal</code></strong>",id:"remove_ideal",level:4},{value:"<strong><code>remove_ideal_mental_state</code></strong>",id:"remove_ideal_mental_state",level:4},{value:"<strong><code>remove_intention</code></strong>",id:"remove_intention",level:4},{value:"<strong><code>remove_intention_mental_state</code></strong>",id:"remove_intention_mental_state",level:4},{value:"<strong><code>remove_obligation</code></strong>",id:"remove_obligation",level:4},{value:"<strong><code>remove_social_link</code></strong>",id:"remove_social_link",level:4},{value:"<strong><code>remove_social_link_with_agent</code></strong>",id:"remove_social_link_with_agent",level:4},{value:"<strong><code>remove_uncertainty</code></strong>",id:"remove_uncertainty",level:4},{value:"<strong><code>remove_uncertainty_mental_state</code></strong>",id:"remove_uncertainty_mental_state",level:4},{value:"<strong><code>replace_belief</code></strong>",id:"replace_belief",level:4},{value:"sorted_tasks",id:"sorted_tasks",level:2},{value:"Variables",id:"variables-6",level:3},{value:"Actions",id:"actions-6",level:3},{value:"user_first",id:"user_first",level:2},{value:"Variables",id:"variables-7",level:3},{value:"Actions",id:"actions-7",level:3},{value:"user_last",id:"user_last",level:2},{value:"Variables",id:"variables-8",level:3},{value:"Actions",id:"actions-8",level:3},{value:"user_only",id:"user_only",level:2},{value:"Variables",id:"variables-9",level:3},{value:"Actions",id:"actions-9",level:3},{value:"weighted_tasks",id:"weighted_tasks",level:2},{value:"Variables",id:"variables-10",level:3},{value:"Actions",id:"actions-10",level:3}];function h(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"This file is automatically generated from java files. Do Not Edit It."})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"introduction",children:"INTRODUCTION"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"#fsm",children:"fsm"}),", ",(0,s.jsx)(n.a,{href:"#parallel_bdi",children:"parallel_bdi"}),", ",(0,s.jsx)(n.a,{href:"#probabilistic_tasks",children:"probabilistic_tasks"}),", ",(0,s.jsx)(n.a,{href:"#reflex",children:"reflex"}),", ",(0,s.jsx)(n.a,{href:"#rules",children:"rules"}),", ",(0,s.jsx)(n.a,{href:"#simple_bdi",children:"simple_bdi"}),", ",(0,s.jsx)(n.a,{href:"#sorted_tasks",children:"sorted_tasks"}),", ",(0,s.jsx)(n.a,{href:"#user_first",children:"user_first"}),", ",(0,s.jsx)(n.a,{href:"#user_last",children:"user_last"}),", ",(0,s.jsx)(n.a,{href:"#user_only",children:"user_only"}),", ",(0,s.jsx)(n.a,{href:"#weighted_tasks",children:"weighted_tasks"}),","]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"fsm",children:"fsm"}),"\n",(0,s.jsx)(n.h3,{id:"variables",children:"Variables"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"state"})})," (string): Returns the current state in which the agent is"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"states"})})," (list): Returns the list of all possible states the agents can be in"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"actions",children:"Actions"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"parallel_bdi",children:"parallel_bdi"}),"\n",(0,s.jsx)(n.p,{children:"compute the bdi architecture in parallel"}),"\n",(0,s.jsx)(n.h3,{id:"variables-1",children:"Variables"}),"\n",(0,s.jsx)(n.h3,{id:"actions-1",children:"Actions"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"probabilistic_tasks",children:"probabilistic_tasks"}),"\n",(0,s.jsx)(n.h3,{id:"variables-2",children:"Variables"}),"\n",(0,s.jsx)(n.h3,{id:"actions-2",children:"Actions"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"reflex",children:"reflex"}),"\n",(0,s.jsx)(n.h3,{id:"variables-3",children:"Variables"}),"\n",(0,s.jsx)(n.h3,{id:"actions-3",children:"Actions"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"rules",children:"rules"}),"\n",(0,s.jsx)(n.h3,{id:"variables-4",children:"Variables"}),"\n",(0,s.jsx)(n.h3,{id:"actions-4",children:"Actions"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"simple_bdi",children:"simple_bdi"}),"\n",(0,s.jsx)(n.p,{children:"this architecture enables to define a behaviour using BDI. It is an implementation of the BEN architecture (Behaviour with Emotions and Norms)"}),"\n",(0,s.jsx)(n.h3,{id:"variables-5",children:"Variables"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"agreeableness"})})," (float): an agreeableness value for the personality"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"belief_base"})})," (list): the belief base of the agent"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"charisma"})})," (float): a charisma value. By default, it is computed with personality"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"conscientiousness"})})," (float): a conscientiousness value for the personality"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"current_norm"})})," (any type): the current norm of the agent"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"current_plan"})})," (any type): thecurrent plan of the agent"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"desire_base"})})," (list): the desire base of the agent"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"emotion_base"})})," (list): the emotion base of the agent"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"extroversion"})})," (float): an extraversion value for the personality"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"ideal_base"})})," (list): the ideal base of the agent"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"intention_base"})})," (list): the intention base of the agent"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"intention_persistence"})})," (float): intention persistence"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"law_base"})})," (list): the law base of the agent"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"neurotism"})})," (float): a neurotism value for the personality"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"norm_base"})})," (list): the norm base of the agent"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"obedience"})})," (float): an obedience value. By default, it is computed with personality"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"obligation_base"})})," (list): the obligation base of the agent"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"openness"})})," (float): an openness value for the personality"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"plan_base"})})," (list): the plan base of the agent"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"plan_persistence"})})," (float): plan persistence"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"probabilistic_choice"})})," (boolean): indicates if the choice is deterministic or probabilistic"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"receptivity"})})," (float): a receptivity value. By default, it is computed with personality"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"sanction_base"})})," (list): the sanction base of the agent"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"social_link_base"})})," (list): the social link base of the agent"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"thinking"})})," (list): the list of the last thoughts of the agent"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"uncertainty_base"})})," (list): the uncertainty base of the agent"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"use_emotions_architecture"})})," (boolean): indicates if emotions are automaticaly computed"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"use_norms"})})," (boolean): indicates if the normative engine is used"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"use_persistence"})})," (boolean): indicates if the persistence coefficient is computed with personality (false) or with the value given by the modeler"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"use_personality"})})," (boolean): indicates if the personnality is used"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"use_social_architecture"})})," (boolean): indicates if social relations are automaticaly computed"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"actions-5",children:"Actions"}),"\n",(0,s.jsx)(n.h4,{id:"add_belief",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"add_belief"})})}),"\n",(0,s.jsx)(n.p,{children:"add the predicate in the belief base."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"predicate"})})," (predicate): predicate to add as a belief"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"strength"})})," (float): the stregth of the belief"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"lifetime"})})," (int): the lifetime of the belief"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"add_belief_emotion",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"add_belief_emotion"})})}),"\n",(0,s.jsx)(n.p,{children:"add the belief about an emotion in the belief base."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"emotion"})})," (emotion): emotion to add as a belief"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"strength"})})," (float): the stregth of the belief"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"lifetime"})})," (int): the lifetime of the belief"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"add_belief_mental_state",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"add_belief_mental_state"})})}),"\n",(0,s.jsx)(n.p,{children:"add the predicate in the belief base."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"mental_state"})})," (mental_state): predicate to add as a belief"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"strength"})})," (float): the stregth of the belief"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"lifetime"})})," (int): the lifetime of the belief"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"add_desire",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"add_desire"})})}),"\n",(0,s.jsx)(n.p,{children:"adds the predicates is in the desire base."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"predicate"})})," (predicate): predicate to add as a desire"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"strength"})})," (float): the stregth of the belief"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"lifetime"})})," (int): the lifetime of the belief"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"todo"})})," (predicate): add the desire as a subintention of this parameter"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"add_desire_emotion",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"add_desire_emotion"})})}),"\n",(0,s.jsx)(n.p,{children:"adds the emotion in the desire base."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"emotion"})})," (emotion): emotion to add as a desire"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"strength"})})," (float): the stregth of the desire"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"lifetime"})})," (int): the lifetime of the desire"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"todo"})})," (predicate): add the desire as a subintention of this parameter"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"add_desire_mental_state",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"add_desire_mental_state"})})}),"\n",(0,s.jsx)(n.p,{children:"adds the mental state is in the desire base."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"mental_state"})})," (mental_state): mental_state to add as a desire"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"strength"})})," (float): the stregth of the desire"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"lifetime"})})," (int): the lifetime of the desire"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"todo"})})," (predicate): add the desire as a subintention of this parameter"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"add_directly_belief",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"add_directly_belief"})})}),"\n",(0,s.jsx)(n.p,{children:"add the belief in the belief base."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"belief"})})," (mental_state): belief to add in th belief base"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"add_directly_desire",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"add_directly_desire"})})}),"\n",(0,s.jsx)(n.p,{children:"add the desire in the desire base."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"desire"})})," (mental_state): desire to add in th belief base"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"add_directly_ideal",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"add_directly_ideal"})})}),"\n",(0,s.jsx)(n.p,{children:"add the ideal in the ideal base."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"ideal"})})," (mental_state): ideal to add in the ideal base"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"add_directly_uncertainty",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"add_directly_uncertainty"})})}),"\n",(0,s.jsx)(n.p,{children:"add the uncertainty in the uncertainty base."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"uncertainty"})})," (mental_state): uncertainty to add in the uncertainty base"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"add_emotion",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"add_emotion"})})}),"\n",(0,s.jsx)(n.p,{children:"add the emotion to the emotion base."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"emotion"})})," (emotion): emotion to add to the base"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"add_ideal",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"add_ideal"})})}),"\n",(0,s.jsx)(n.p,{children:"add a predicate in the ideal base."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"predicate"})})," (predicate): predicate to add as an ideal"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"praiseworthiness"})})," (float): the praiseworthiness value of the ideal"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"lifetime"})})," (int): the lifetime of the ideal"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"add_ideal_emotion",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"add_ideal_emotion"})})}),"\n",(0,s.jsx)(n.p,{children:"add a predicate in the ideal base."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"emotion"})})," (emotion): emotion to add as an ideal"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"praiseworthiness"})})," (float): the praiseworthiness value of the ideal"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"lifetime"})})," (int): the lifetime of the ideal"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"add_ideal_mental_state",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"add_ideal_mental_state"})})}),"\n",(0,s.jsx)(n.p,{children:"add a predicate in the ideal base."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"mental_state"})})," (mental_state): mental state to add as an ideal"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"praiseworthiness"})})," (float): the praiseworthiness value of the ideal"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"lifetime"})})," (int): the lifetime of the ideal"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"add_intention",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"add_intention"})})}),"\n",(0,s.jsx)(n.p,{children:"check if the predicates is in the desire base."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"predicate"})})," (predicate): predicate to check"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"strength"})})," (float): the stregth of the belief"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"lifetime"})})," (int): the lifetime of the belief"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"add_intention_emotion",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"add_intention_emotion"})})}),"\n",(0,s.jsx)(n.p,{children:"check if the predicates is in the desire base."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"emotion"})})," (emotion): emotion to add as an intention"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"strength"})})," (float): the stregth of the belief"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"lifetime"})})," (int): the lifetime of the belief"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"add_intention_mental_state",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"add_intention_mental_state"})})}),"\n",(0,s.jsx)(n.p,{children:"check if the predicates is in the desire base."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"mental_state"})})," (mental_state): predicate to add as an intention"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"strength"})})," (float): the stregth of the belief"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"lifetime"})})," (int): the lifetime of the belief"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"add_obligation",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"add_obligation"})})}),"\n",(0,s.jsx)(n.p,{children:"add a predicate in the ideal base."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"predicate"})})," (predicate): predicate to add as an obligation"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"strength"})})," (float): the strength value of the obligation"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"lifetime"})})," (int): the lifetime of the obligation"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"add_social_link",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"add_social_link"})})}),"\n",(0,s.jsx)(n.p,{children:"add the social link to the social link base."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"social_link"})})," (social_link): social link to add to the base"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"add_subintention",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"add_subintention"})})}),"\n",(0,s.jsx)(n.p,{children:"adds the predicates is in the desire base."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"predicate"})})," (mental_state): the intention that receives the sub_intention"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"subintentions"})})," (predicate): the predicate to add as a subintention to the intention"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"add_as_desire"})})," (boolean): add the subintention as a desire as well (by default, false)"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"add_uncertainty",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"add_uncertainty"})})}),"\n",(0,s.jsx)(n.p,{children:"add a predicate in the uncertainty base."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"predicate"})})," (predicate): predicate to add"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"strength"})})," (float): the stregth of the belief"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"lifetime"})})," (int): the lifetime of the belief"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"add_uncertainty_emotion",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"add_uncertainty_emotion"})})}),"\n",(0,s.jsx)(n.p,{children:"add a predicate in the uncertainty base."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"emotion"})})," (emotion): emotion to add as an uncertainty"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"strength"})})," (float): the stregth of the belief"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"lifetime"})})," (int): the lifetime of the belief"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"add_uncertainty_mental_state",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"add_uncertainty_mental_state"})})}),"\n",(0,s.jsx)(n.p,{children:"add a predicate in the uncertainty base."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"mental_state"})})," (mental_state): mental state to add as an uncertainty"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"strength"})})," (float): the stregth of the belief"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"lifetime"})})," (int): the lifetime of the belief"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"change_dominance",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"change_dominance"})})}),"\n",(0,s.jsx)(n.p,{children:"changes the dominance value of the social relation with the agent specified."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"agent"})})," (agent): an agent with who I get a social link"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"dominance"})})," (float): a value to change the dominance value"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"change_familiarity",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"change_familiarity"})})}),"\n",(0,s.jsx)(n.p,{children:"changes the familiarity value of the social relation with the agent specified."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"agent"})})," (agent): an agent with who I get a social link"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"familiarity"})})," (float): a value to change the familiarity value"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"change_liking",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"change_liking"})})}),"\n",(0,s.jsx)(n.p,{children:"changes the liking value of the social relation with the agent specified."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"agent"})})," (agent): an agent with who I get a social link"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"liking"})})," (float): a value to change the liking value"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"change_solidarity",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"change_solidarity"})})}),"\n",(0,s.jsx)(n.p,{children:"changes the solidarity value of the social relation with the agent specified."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"agent"})})," (agent): an agent with who I get a social link"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"solidarity"})})," (float): a value to change the solidarity value"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"change_trust",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"change_trust"})})}),"\n",(0,s.jsx)(n.p,{children:"changes the trust value of the social relation with the agent specified."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"agent"})})," (agent): an agent with who I get a social link"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"trust"})})," (float): a value to change the trust value"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"clear_beliefs",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"clear_beliefs"})})}),"\n",(0,s.jsx)(n.p,{children:"clear the belief base"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"clear_desires",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"clear_desires"})})}),"\n",(0,s.jsx)(n.p,{children:"clear the desire base"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"clear_emotions",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"clear_emotions"})})}),"\n",(0,s.jsx)(n.p,{children:"clear the emotion base"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"clear_ideals",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"clear_ideals"})})}),"\n",(0,s.jsx)(n.p,{children:"clear the ideal base"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"clear_intentions",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"clear_intentions"})})}),"\n",(0,s.jsx)(n.p,{children:"clear the intention base"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"clear_obligations",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"clear_obligations"})})}),"\n",(0,s.jsx)(n.p,{children:"clear the obligation base"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"clear_social_links",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"clear_social_links"})})}),"\n",(0,s.jsx)(n.p,{children:"clear the intention base"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"clear_uncertainties",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"clear_uncertainties"})})}),"\n",(0,s.jsx)(n.p,{children:"clear the uncertainty base"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"current_intention_on_hold",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"current_intention_on_hold"})})}),"\n",(0,s.jsx)(n.p,{children:"puts the current intention on hold until the specified condition is reached or all subintentions are reached (not in desire base anymore)."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"until"})})," (any type): the current intention is put on hold (fited plan are not considered) until specific condition is reached. Can be an expression (which will be tested), a list (of subintentions), or nil (by default the condition will be the current list of subintentions of the intention)"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"get_belief",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"get_belief"})})}),"\n",(0,s.jsx)(n.p,{children:"return the belief about the predicate in the belief base (if several, returns the first one)."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: mental_state"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"predicate"})})," (predicate): predicate to get"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"get_belief_emotion",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"get_belief_emotion"})})}),"\n",(0,s.jsx)(n.p,{children:"return the belief about the emotion in the belief base (if several, returns the first one)."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: mental_state"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"emotion"})})," (emotion): emotion about which the belief to get is"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"get_belief_mental_state",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"get_belief_mental_state"})})}),"\n",(0,s.jsx)(n.p,{children:"return the belief about the mental state in the belief base (if several, returns the first one)."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: mental_state"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"mental_state"})})," (mental_state): mental state to get"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"get_belief_with_name",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"get_belief_with_name"})})}),"\n",(0,s.jsx)(n.p,{children:"get the predicates is in the belief base (if several, returns the first one)."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: mental_state"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"name"})})," (string): name of the predicate to check"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"get_beliefs",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"get_beliefs"})})}),"\n",(0,s.jsx)(n.p,{children:"get the list of predicates in the belief base"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: list<mental_state>"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"predicate"})})," (predicate): predicate to check"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"get_beliefs_metal_state",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"get_beliefs_metal_state"})})}),"\n",(0,s.jsx)(n.p,{children:"get the list of bliefs in the belief base containing the mental state"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: list<mental_state>"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"mental_state"})})," (mental_state): mental state to check"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"get_beliefs_with_name",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"get_beliefs_with_name"})})}),"\n",(0,s.jsx)(n.p,{children:"get the list of predicates is in the belief base with the given name."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: list<mental_state>"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"name"})})," (string): name of the predicates to check"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"get_current_intention",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"get_current_intention"})})}),"\n",(0,s.jsx)(n.p,{children:"returns the current intention (last entry of intention base)."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: mental_state"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"get_current_plan",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"get_current_plan"})})}),"\n",(0,s.jsx)(n.p,{children:"get the current plan."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: BDIPlan"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"get_desire",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"get_desire"})})}),"\n",(0,s.jsx)(n.p,{children:"get the predicates is in the desire base (if several, returns the first one)."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: mental_state"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"predicate"})})," (predicate): predicate to check"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"get_desire_mental_state",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"get_desire_mental_state"})})}),"\n",(0,s.jsx)(n.p,{children:"get the mental state is in the desire base (if several, returns the first one)."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: mental_state"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"mental_state"})})," (mental_state): mental state to check"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"get_desire_with_name",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"get_desire_with_name"})})}),"\n",(0,s.jsx)(n.p,{children:"get the predicates is in the belief base (if several, returns the first one)."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: mental_state"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"name"})})," (string): name of the predicate to check"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"get_desires",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"get_desires"})})}),"\n",(0,s.jsx)(n.p,{children:"get the list of predicates is in the desire base"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: list<mental_state>"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"predicate"})})," (predicate): name of the predicates to check"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"get_desires_mental_state",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"get_desires_mental_state"})})}),"\n",(0,s.jsx)(n.p,{children:"get the list of mental states is in the desire base"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: list<mental_state>"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"mental_state"})})," (mental_state): name of the mental states to check"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"get_desires_with_name",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"get_desires_with_name"})})}),"\n",(0,s.jsx)(n.p,{children:"get the list of predicates is in the belief base with the given name."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: list<mental_state>"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"name"})})," (string): name of the predicates to check"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"get_emotion",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"get_emotion"})})}),"\n",(0,s.jsx)(n.p,{children:"get the emotion in the emotion base (if several, returns the first one)."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: emotion"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"emotion"})})," (emotion): emotion to get"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"get_emotion_with_name",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"get_emotion_with_name"})})}),"\n",(0,s.jsx)(n.p,{children:"get the emotion is in the emotion base (if several, returns the first one)."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: emotion"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"name"})})," (string): name of the emotion to check"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"get_ideal",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"get_ideal"})})}),"\n",(0,s.jsx)(n.p,{children:"get the ideal about the predicate in the ideal base (if several, returns the first one)."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: mental_state"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"predicate"})})," (predicate): predicate to check ad an ideal"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"get_ideal_mental_state",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"get_ideal_mental_state"})})}),"\n",(0,s.jsx)(n.p,{children:"get the mental state in the ideal base (if several, returns the first one)."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: mental_state"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"mental_state"})})," (mental_state): mental state to return"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"get_intention",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"get_intention"})})}),"\n",(0,s.jsx)(n.p,{children:"get the predicates in the intention base (if several, returns the first one)."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: mental_state"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"predicate"})})," (predicate): predicate to check"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"get_intention_mental_state",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"get_intention_mental_state"})})}),"\n",(0,s.jsx)(n.p,{children:"get the mental state is in the intention base (if several, returns the first one)."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: mental_state"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"mental_state"})})," (mental_state): mental state to check"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"get_intention_with_name",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"get_intention_with_name"})})}),"\n",(0,s.jsx)(n.p,{children:"get the predicates is in the belief base (if several, returns the first one)."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: mental_state"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"name"})})," (string): name of the predicate to check"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"get_intentions",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"get_intentions"})})}),"\n",(0,s.jsx)(n.p,{children:"get the list of predicates is in the intention base"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: list<mental_state>"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"predicate"})})," (predicate): name of the predicates to check"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"get_intentions_mental_state",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"get_intentions_mental_state"})})}),"\n",(0,s.jsx)(n.p,{children:"get the list of mental state is in the intention base"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: list<mental_state>"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"mental_state"})})," (mental_state): mental state to check"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"get_intentions_with_name",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"get_intentions_with_name"})})}),"\n",(0,s.jsx)(n.p,{children:"get the list of predicates is in the belief base with the given name."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: list<mental_state>"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"name"})})," (string): name of the predicates to check"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"get_obligation",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"get_obligation"})})}),"\n",(0,s.jsx)(n.p,{children:"get the predicates in the obligation base (if several, returns the first one)."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: mental_state"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"predicate"})})," (predicate): predicate to return"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"get_plan",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"get_plan"})})}),"\n",(0,s.jsx)(n.p,{children:"get the first plan with the given name"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: BDIPlan"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"name"})})," (string): the name of the planto get"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"get_plans",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"get_plans"})})}),"\n",(0,s.jsx)(n.p,{children:"get the list of plans."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: list<BDIPlan>"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"get_social_link",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"get_social_link"})})}),"\n",(0,s.jsx)(n.p,{children:"get the social link (if several, returns the first one)."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: social_link"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"social_link"})})," (social_link): social link to check"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"get_social_link_with_agent",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"get_social_link_with_agent"})})}),"\n",(0,s.jsx)(n.p,{children:"get the social link with the agent concerned (if several, returns the first one)."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: social_link"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"agent"})})," (agent): an agent with who I get a social link"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"get_uncertainty",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"get_uncertainty"})})}),"\n",(0,s.jsx)(n.p,{children:"get the predicates is in the uncertainty base (if several, returns the first one)."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: mental_state"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"predicate"})})," (predicate): predicate to return"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"get_uncertainty_mental_state",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"get_uncertainty_mental_state"})})}),"\n",(0,s.jsx)(n.p,{children:"get the mental state is in the uncertainty base (if several, returns the first one)."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: mental_state"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"mental_state"})})," (mental_state): mental state to return"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"has_belief",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"has_belief"})})}),"\n",(0,s.jsx)(n.p,{children:"check if the predicates is in the belief base."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"predicate"})})," (predicate): predicate to check"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"has_belief_mental_state",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"has_belief_mental_state"})})}),"\n",(0,s.jsx)(n.p,{children:"check if the mental state is in the belief base."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"mental_state"})})," (mental_state): mental state to check"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"has_belief_with_name",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"has_belief_with_name"})})}),"\n",(0,s.jsx)(n.p,{children:"check if the predicate is in the belief base."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"name"})})," (string): name of the predicate to check"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"has_desire",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"has_desire"})})}),"\n",(0,s.jsx)(n.p,{children:"check if the predicates is in the desire base."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"predicate"})})," (predicate): predicate to check"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"has_desire_mental_state",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"has_desire_mental_state"})})}),"\n",(0,s.jsx)(n.p,{children:"check if the mental state is in the desire base."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"mental_state"})})," (mental_state): mental state to check"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"has_desire_with_name",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"has_desire_with_name"})})}),"\n",(0,s.jsx)(n.p,{children:"check if the prediate is in the desire base."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"name"})})," (string): name of the predicate to check"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"has_emotion",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"has_emotion"})})}),"\n",(0,s.jsx)(n.p,{children:"check if the emotion is in the belief base."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"emotion"})})," (emotion): emotion to check"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"has_emotion_with_name",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"has_emotion_with_name"})})}),"\n",(0,s.jsx)(n.p,{children:"check if the emotion is in the emotion base."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"name"})})," (string): name of the emotion to check"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"has_ideal",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"has_ideal"})})}),"\n",(0,s.jsx)(n.p,{children:"check if the predicates is in the ideal base."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"predicate"})})," (predicate): predicate to check"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"has_ideal_mental_state",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"has_ideal_mental_state"})})}),"\n",(0,s.jsx)(n.p,{children:"check if the mental state is in the ideal base."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"mental_state"})})," (mental_state): mental state to check"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"has_ideal_with_name",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"has_ideal_with_name"})})}),"\n",(0,s.jsx)(n.p,{children:"check if the predicate is in the ideal base."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"name"})})," (string): name of the predicate to check"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"has_obligation",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"has_obligation"})})}),"\n",(0,s.jsx)(n.p,{children:"check if the predicates is in the obligation base."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"predicate"})})," (predicate): predicate to check"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"has_social_link",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"has_social_link"})})}),"\n",(0,s.jsx)(n.p,{children:"check if the social link base."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"social_link"})})," (social_link): social link to check"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"has_social_link_with_agent",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"has_social_link_with_agent"})})}),"\n",(0,s.jsx)(n.p,{children:"check if the social link base."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"agent"})})," (agent): an agent with who I want to check if I have a social link"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"has_uncertainty",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"has_uncertainty"})})}),"\n",(0,s.jsx)(n.p,{children:"check if the predicates is in the uncertainty base."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"predicate"})})," (predicate): predicate to check"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"has_uncertainty_mental_state",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"has_uncertainty_mental_state"})})}),"\n",(0,s.jsx)(n.p,{children:"check if the mental state is in the uncertainty base."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"mental_state"})})," (mental_state): mental state to check"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"has_uncertainty_with_name",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"has_uncertainty_with_name"})})}),"\n",(0,s.jsx)(n.p,{children:"check if the predicate is in the uncertainty base."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"name"})})," (string): name of the uncertainty to check"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"is_current_intention",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"is_current_intention"})})}),"\n",(0,s.jsx)(n.p,{children:"check if the predicates is the current intention (last entry of intention base)."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"predicate"})})," (predicate): predicate to check"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"is_current_intention_mental_state",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"is_current_intention_mental_state"})})}),"\n",(0,s.jsx)(n.p,{children:"check if the mental state is the current intention (last entry of intention base)."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"mental_state"})})," (mental_state): mental state to check"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"is_current_plan",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"is_current_plan"})})}),"\n",(0,s.jsx)(n.p,{children:"tell if the current plan has the same name as tested"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"name"})})," (string): the name of the plan to test"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"remove_all_beliefs",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"remove_all_beliefs"})})}),"\n",(0,s.jsx)(n.p,{children:"removes the predicates from the belief base."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"predicate"})})," (predicate): predicate to remove"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"remove_belief",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"remove_belief"})})}),"\n",(0,s.jsx)(n.p,{children:"removes the predicate from the belief base."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"predicate"})})," (predicate): predicate to remove"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"remove_belief_mental_state",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"remove_belief_mental_state"})})}),"\n",(0,s.jsx)(n.p,{children:"removes the mental state from the belief base."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"mental_state"})})," (mental_state): mental state to remove"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"remove_desire",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"remove_desire"})})}),"\n",(0,s.jsx)(n.p,{children:"removes the predicates from the desire base."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"predicate"})})," (predicate): predicate to remove from desire base"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"remove_desire_mental_state",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"remove_desire_mental_state"})})}),"\n",(0,s.jsx)(n.p,{children:"removes the mental state from the desire base."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"mental_state"})})," (mental_state): mental state to remove from desire base"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"remove_emotion",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"remove_emotion"})})}),"\n",(0,s.jsx)(n.p,{children:"removes the emotion from the emotion base."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"emotion"})})," (emotion): emotion to remove"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"remove_ideal",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"remove_ideal"})})}),"\n",(0,s.jsx)(n.p,{children:"removes the predicates from the ideal base."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"predicate"})})," (predicate): predicate to remove"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"remove_ideal_mental_state",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"remove_ideal_mental_state"})})}),"\n",(0,s.jsx)(n.p,{children:"removes the mental state from the ideal base."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"mental_state"})})," (mental_state): metal state to remove"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"remove_intention",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"remove_intention"})})}),"\n",(0,s.jsx)(n.p,{children:"removes the predicates from the intention base."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"predicate"})})," (predicate): intention's predicate to remove"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"desire_also"})})," (boolean): removes also desire"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"remove_intention_mental_state",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"remove_intention_mental_state"})})}),"\n",(0,s.jsx)(n.p,{children:"removes the mental state from the intention base."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"mental_state"})})," (mental_state): intention's mental state to remove"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"desire_also"})})," (boolean): removes also desire"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"remove_obligation",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"remove_obligation"})})}),"\n",(0,s.jsx)(n.p,{children:"removes the predicates from the obligation base."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"predicate"})})," (predicate): predicate to remove"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"remove_social_link",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"remove_social_link"})})}),"\n",(0,s.jsx)(n.p,{children:"removes the social link from the social relation base."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"social_link"})})," (social_link): social link to remove"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"remove_social_link_with_agent",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"remove_social_link_with_agent"})})}),"\n",(0,s.jsx)(n.p,{children:"removes the social link from the social relation base."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"agent"})})," (agent): an agent with who I get the social link to remove"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"remove_uncertainty",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"remove_uncertainty"})})}),"\n",(0,s.jsx)(n.p,{children:"removes the predicates from the uncertainty base."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"predicate"})})," (predicate): predicate to remove"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"remove_uncertainty_mental_state",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"remove_uncertainty_mental_state"})})}),"\n",(0,s.jsx)(n.p,{children:"removes the mental state from the uncertainty base."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"mental_state"})})," (mental_state): mental state to remove"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"replace_belief",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"replace_belief"})})}),"\n",(0,s.jsx)(n.p,{children:"replace the old predicate by the new one."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"returns: bool"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"old_predicate"})})," (predicate): predicate to remove"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"predicate"})})," (predicate): predicate to add"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"sorted_tasks",children:"sorted_tasks"}),"\n",(0,s.jsx)(n.h3,{id:"variables-6",children:"Variables"}),"\n",(0,s.jsx)(n.h3,{id:"actions-6",children:"Actions"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"user_first",children:"user_first"}),"\n",(0,s.jsx)(n.h3,{id:"variables-7",children:"Variables"}),"\n",(0,s.jsx)(n.h3,{id:"actions-7",children:"Actions"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"user_last",children:"user_last"}),"\n",(0,s.jsx)(n.h3,{id:"variables-8",children:"Variables"}),"\n",(0,s.jsx)(n.h3,{id:"actions-8",children:"Actions"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"user_only",children:"user_only"}),"\n",(0,s.jsx)(n.h3,{id:"variables-9",children:"Variables"}),"\n",(0,s.jsx)(n.h3,{id:"actions-9",children:"Actions"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"weighted_tasks",children:"weighted_tasks"}),"\n",(0,s.jsx)(n.h3,{id:"variables-10",children:"Variables"}),"\n",(0,s.jsx)(n.h3,{id:"actions-10",children:"Actions"})]})}function a(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>d});var s=i(96540);const t={},l=s.createContext(t);function r(e){const n=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);