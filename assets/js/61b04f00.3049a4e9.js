"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[25008],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>f});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),s=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},l=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=s(r),f=a,m=d["".concat(p,".").concat(f)]||d[f]||u[f]||i;return r?n.createElement(m,o(o({ref:t},l),{},{components:r})):n.createElement(m,o({ref:t},l))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=d;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var s=2;s<i;s++)o[s]=r[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},23968:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>p,default:()=>f,frontMatter:()=>c,metadata:()=>s,toc:()=>u});var n=r(87462),a=r(63366),i=(r(67294),r(3905)),o=["components"],c={title:"Defining advanced species"},p=void 0,s={unversionedId:"DefiningAdvancedSpecies",id:"DefiningAdvancedSpecies",title:"Defining advanced species",description:"In the previous chapter, we saw how to declare and manipulate regular species and the global species (as a reminder, the instance of the global species is the world agent).",source:"@site/../docs/DefiningAdvancedSpecies.md",sourceDirName:".",slug:"/DefiningAdvancedSpecies",permalink:"/wiki/next/DefiningAdvancedSpecies",draft:!1,editUrl:"https://github.com/gama-platform/gama/wiki/DefiningAdvancedSpecies/_edit",tags:[],version:"current",frontMatter:{title:"Defining advanced species"},sidebar:"side",previous:{title:"Inheritance",permalink:"/wiki/next/Inheritance"},next:{title:"Grid Species",permalink:"/wiki/next/GridSpecies"}},l={},u=[],d={toc:u};function f(e){var t=e.components,r=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"In the previous chapter, we saw how to declare and manipulate ",(0,i.kt)("a",{parentName:"p",href:"RegularSpecies"},(0,i.kt)("strong",{parentName:"a"},"regular species"))," and the ",(0,i.kt)("a",{parentName:"p",href:"GlobalSpecies"},(0,i.kt)("strong",{parentName:"a"},"global species"))," (as a reminder, the instance of the ",(0,i.kt)("strong",{parentName:"p"},"global species")," is the ",(0,i.kt)("strong",{parentName:"p"},"world agent"),"). "),(0,i.kt)("p",null,"We will now see that GAMA provides you the possibility to declare some special species, such as ",(0,i.kt)("a",{parentName:"p",href:"GridSpecies"},(0,i.kt)("strong",{parentName:"a"},"grids"))," or ",(0,i.kt)("a",{parentName:"p",href:"GraphSpecies"},(0,i.kt)("strong",{parentName:"a"},"graphs")),", with their own built-in attributes and their own built-in actions. We will also see how to declare ",(0,i.kt)("a",{parentName:"p",href:"MirrorSpecies"},(0,i.kt)("strong",{parentName:"a"},"mirror species")),', which is a "copy" of a regular species, in order to give it an other representation. Finally, we will learn how to represent several agents through one unique agent, with ',(0,i.kt)("a",{parentName:"p",href:"MultiLevelArchitecture"},(0,i.kt)("strong",{parentName:"a"},"multi-level architecture")),"."))}f.isMDXComponent=!0}}]);