"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[45780],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>u});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=s(n),f=o,u=d["".concat(p,".").concat(f)]||d[f]||m[f]||a;return n?r.createElement(u,i(i({ref:t},c),{},{components:n})):r.createElement(u,i({ref:t},c))}));function u(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=f;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[d]="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},34374:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>p,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>d});var r=n(87462),o=n(63366),a=(n(67294),n(3905)),i=["components"],l={title:"2. People Agents"},p=void 0,s={unversionedId:"RoadTrafficModel_step2",id:"version-1.8.2-RC1/RoadTrafficModel_step2",title:"2. People Agents",description:"This second step illustrates how to obtain a random point inside a geometry. We will also define some moving agent called people.",source:"@site/versioned_docs/version-1.8.2-RC1/RoadTrafficModel_step2.md",sourceDirName:".",slug:"/RoadTrafficModel_step2",permalink:"/wiki/1.8.2-RC1/RoadTrafficModel_step2",draft:!1,editUrl:"https://github.com/gama-platform/gama/wiki/RoadTrafficModel_step2/_edit",tags:[],version:"1.8.2-RC1",frontMatter:{title:"2. People Agents"},sidebar:"tuto",previous:{title:"1. Loading of GIS Data",permalink:"/wiki/1.8.2-RC1/RoadTrafficModel_step1"},next:{title:"3. Movement of People",permalink:"/wiki/1.8.2-RC1/RoadTrafficModel_step3"}},c={},d=[{value:"Formulation",id:"formulation",level:2},{value:"Model Definition",id:"model-definition",level:2},{value:"species",id:"species",level:3}],m={toc:d},f="wrapper";function u(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)(f,(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"This second step illustrates how to obtain a random point inside a geometry. We will also define some moving agent called ",(0,a.kt)("inlineCode",{parentName:"p"},"people"),"."),(0,a.kt)("h2",{id:"formulation"},"Formulation"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Define a new species of agents: the ",(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"strong"},"people"))," agents. The ",(0,a.kt)("inlineCode",{parentName:"li"},"people")," agents have a point for geometry and are represented by a yellow circle of radius 10m."),(0,a.kt)("li",{parentName:"ul"},"At initialization, 100 ",(0,a.kt)("inlineCode",{parentName:"li"},"people")," agents are created. Each ",(0,a.kt)("inlineCode",{parentName:"li"},"people")," agent is placed inside a building of type 'Residential' (randomly selected).")),(0,a.kt)("h2",{id:"model-definition"},"Model Definition"),(0,a.kt)("h3",{id:"species"},"species"),(0,a.kt)("p",null,"We define a new species of agents: the ",(0,a.kt)("strong",{parentName:"p"},"people")," agents. In this model, these agents will not have a specific behavior yet. They will be just displayed. Thus, we just have to define an aspect for the agents. We want to represent the ",(0,a.kt)("inlineCode",{parentName:"p"},"people")," agents by a yellow circle of radius 10m. We then use the ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"circle"))," operator to define the shape to draw in the ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"draw"))," command, with the expected inner color (facet ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"color")),") and border color (facet ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"border")),")."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"https://github.com/gama-platform/gama/blob/GAMA_1.8.2/msi.gama.models/models/Tutorials/Road%20Traffic/models/Model%2002.gaml\n")))}u.isMDXComponent=!0}}]);