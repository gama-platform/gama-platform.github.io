"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[60572],{3905:(e,t,i)=>{i.d(t,{Zo:()=>p,kt:()=>d});var n=i(67294);function l(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function a(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function o(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?a(Object(i),!0).forEach((function(t){l(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):a(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function r(e,t){if(null==e)return{};var i,n,l=function(e,t){if(null==e)return{};var i,n,l={},a=Object.keys(e);for(n=0;n<a.length;n++)i=a[n],t.indexOf(i)>=0||(l[i]=e[i]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)i=a[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(l[i]=e[i])}return l}var h=n.createContext({}),s=function(e){var t=n.useContext(h),i=t;return e&&(i="function"==typeof e?e(t):o(o({},t),e)),i},p=function(e){var t=s(e.components);return n.createElement(h.Provider,{value:t},e.children)},g="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var i=e.components,l=e.mdxType,a=e.originalType,h=e.parentName,p=r(e,["components","mdxType","originalType","parentName"]),g=s(i),c=l,d=g["".concat(h,".").concat(c)]||g[c]||u[c]||a;return i?n.createElement(d,o(o({ref:t},p),{},{components:i})):n.createElement(d,o({ref:t},p))}));function d(e,t){var i=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=i.length,o=new Array(a);o[0]=c;var r={};for(var h in t)hasOwnProperty.call(t,h)&&(r[h]=t[h]);r.originalType=e,r[g]="string"==typeof e?e:l,o[1]=r;for(var s=2;s<a;s++)o[s]=i[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,i)}c.displayName="MDXCreateElement"},27782:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>p,contentTitle:()=>h,default:()=>c,frontMatter:()=>r,metadata:()=>s,toc:()=>g});var n=i(87462),l=i(63366),a=(i(67294),i(3905)),o=["components"],r={title:"Implementing light"},h=void 0,s={unversionedId:"ManipulateLight",id:"ManipulateLight",title:"Implementing light",description:"[//]: # (startConcept|light)",source:"@site/../docs/ManipulateLight.md",sourceDirName:".",slug:"/ManipulateLight",permalink:"/wiki/next/ManipulateLight",draft:!1,editUrl:"https://github.com/gama-platform/gama/wiki/ManipulateLight/_edit",tags:[],version:"current",frontMatter:{title:"Implementing light"},sidebar:"side",previous:{title:"Manipulate Dates",permalink:"/wiki/next/ManipulateDates"},next:{title:"Using Comodel",permalink:"/wiki/next/Comodel"}},p={},g=[{value:"Index",id:"index",level:2},{value:"Light generalities",id:"light-generalities",level:2},{value:"Ambient light",id:"ambient-light",level:3},{value:"Diffuse light",id:"diffuse-light",level:3},{value:"Positional lights",id:"positional-lights",level:4},{value:"Directional lights",id:"directional-lights",level:4},{value:"Specular light",id:"specular-light",level:3},{value:"Default light",id:"default-light",level:2},{value:"Custom lights",id:"custom-lights",level:2},{value:"Ambient light",id:"ambient-light-1",level:3},{value:"Declaring direction light",id:"declaring-direction-light",level:4},{value:"Declaring point light",id:"declaring-point-light",level:4},{value:"Declaring spot light",id:"declaring-spot-light",level:4}],u={toc:g};function c(e){var t=e.components,r=(0,l.Z)(e,o);return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"When using OpenGL display, GAMA provides you the possibility to manipulate one or several lights, making your display more realistic.\nMost of the following screenshots will be taken with the following short example gaml: "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'model test_light\n\ngrid cells {\n    aspect base {\n    draw square(1) at:{grid_x,grid_y} color:#white;\n    }\n}\n\nexperiment my_experiment type:gui{\n    output {\n    display my_display type: opengl background: #darkblue {\n        species cells aspect: base;\n        graphics "my_layer" {\n        draw square(100) color:#white at:{50,50};\n        draw cube(5) color:#lightgrey at:{50,30};\n        draw cube(5) color:#lightgrey at:{30,35};\n        draw cube(5) color:#lightgrey at:{60,35};\n        draw sphere(5) color:#lightgrey at:{10,10,2.5};\n        draw sphere(5) color:#lightgrey at:{20,30,2.5};\n        draw sphere(5) color:#lightgrey at:{40,30,2.5};\n        draw sphere(5) color:#lightgrey at:{40,60,2.5};\n        draw cone3D(5,5) color:#lightgrey at:{55,10,0};\n        draw cylinder(5,5) color:#lightgrey at:{10,60,0};\n        }\n    }\n    }\n}\n')),(0,a.kt)("h2",{id:"index"},"Index"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#light-generalities"},"Light generalities")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#default-light"},"Default light")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#custom-lights"},"Custom lights"))),(0,a.kt)("h2",{id:"light-generalities"},"Light generalities"),(0,a.kt)("p",null,"Before going deep into the code, here is a quick explanation about how light works in OpenGL.\nFirst of all, you need to know that there are 3 types of lights you can manipulate: the ",(0,a.kt)("strong",{parentName:"p"},"ambient light"),", the ",(0,a.kt)("strong",{parentName:"p"},"diffuse light")," and the ",(0,a.kt)("strong",{parentName:"p"},"specular light"),'. Each "light" in OpenGL is in fact composed of those 3 types of lights.'),(0,a.kt)("h3",{id:"ambient-light"},"Ambient light"),(0,a.kt)("p",null,"The ",(0,a.kt)("strong",{parentName:"p"},"ambient light")," is the light of your world without any lighting. If a face of a cube is not stricken by the light rays, for instance, this face will appear totally black if there is no ambient light. To make your world more realistic, it is better to have ambient light.\nAmbient light has then no position or direction. It is equally distributed to all the objects of your scene."),(0,a.kt)("p",null,"Here is an example of our GAML scene using only ambient light (color red) (see below ",(0,a.kt)("a",{parentName:"p",href:"ManipulateLight#ambient-light-1"},"how to define ambient light in GAML"),"): "),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Example of a scene with a red ambient light.",src:i(41289).Z,width:"1367",height:"556"})),(0,a.kt)("h3",{id:"diffuse-light"},"Diffuse light"),(0,a.kt)("p",null,"The ",(0,a.kt)("strong",{parentName:"p"},"diffuse light")," can be seen as the light rays: if a face of a cube is stricken by the diffuse light, it will take the color of this diffuse light. You have to know that the more perpendicular the face of your object will be to the light ray, the more lightened the face will be."),(0,a.kt)("p",null,"A diffuse light has then a direction. It can have also a position.\nYou have 2 categories of diffuse light: the ",(0,a.kt)("strong",{parentName:"p"},"positional lights"),", and the ",(0,a.kt)("strong",{parentName:"p"},"directional lights"),"."),(0,a.kt)("h4",{id:"positional-lights"},"Positional lights"),(0,a.kt)("p",null,"Those lights have a position in your world. It is the case of ",(0,a.kt)("strong",{parentName:"p"},"point lights")," and ",(0,a.kt)("strong",{parentName:"p"},"spot lights"),"."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Point lights"))),(0,a.kt)("p",null,"Points lights can be seen as a candle in your world, diffusing the light equally in all the direction."),(0,a.kt)("p",null,"Here is an example of our GAML scene using only diffuse light, with a point light (color red, the light source is displayed as a red sphere) : "),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Scene with only a red point light.",src:i(45812).Z,width:"1369",height:"545"})),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Spot lights"))),(0,a.kt)("p",null,"Spot lights can be seen as a torch light in your world. It needs a position, and also a direction and an angle."),(0,a.kt)("p",null,"Here is an example of our GAML scene using only diffusion light, with a spot light (color red, the light source is displayed as a red cone) : "),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Scene with only a red spot light.",src:i(31552).Z,width:"1362",height:"595"})),(0,a.kt)("p",null,"Positional lights, as they have a position, can also have an attenuation according to the distance between the light source and the object. The value of positional lights are computed with the following formula:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"diffuse_light = diffuse_light * ( 1 / (1 + constante_attenuation + linear_attenuation * d + quadratic_attenuation * d))\n")),(0,a.kt)("p",null,'By changing those 3 values (constante_attenuation, linear_attenuation and quadratic_attenuation), you can control the way light is diffused over your world (if your world is "foggy" for instance, you may turn your linear and quadratic attenuation on). Note that by default, all those attenuations are equal to 0.'),(0,a.kt)("p",null,"Here is an example of our GAML scene using only diffusion light, with a point light with linear attenuation (color red, the light source is displayed as a red sphere): "),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Scene with only diffusion light and red point light with linear attenuation.",src:i(65792).Z,width:"1363",height:"570"})),(0,a.kt)("h4",{id:"directional-lights"},"Directional lights"),(0,a.kt)("p",null,'Directional lights have no real "position": they only have a direction. A directional light will strike all the objects of your world in the same direction. An example of directional light you have in the real world would be the light of the sun: the sun is so far away from us that you can consider that the rays have the same direction and the same intensity wherever they strike.\nSince there is no position for directional lights, there is no attenuation either.'),(0,a.kt)("p",null,"Here is an example of our GAML scene using only diffusion light, with a directional light (color red) : "),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Scene with a red directional light.",src:i(58023).Z,width:"1366",height:"532"})),(0,a.kt)("h3",{id:"specular-light"},"Specular light"),(0,a.kt)("p",null,'This is a more advanced concept, giving an aspect a little bit "shinny" to the objects stricken by the specular light. It is used to simulate the interaction between the light and a special material (ex: wood, steel, rubber...).\nThis specular light is not implemented yet in GAMA, only the two others are.'),(0,a.kt)("h2",{id:"default-light"},"Default light"),(0,a.kt)("p",null,"In your OpenGL display, without specifying any light, you will have only one light, with those following properties :"),(0,a.kt)("p",null,'Those values have been chosen in order to have the same visual effect in both OpenGL and java2D displays, when you display 2D objects, and also to have a nice "3D effect" when using the OpenGL displays. We chose the following setting by default: '),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The ambient light value: rgb(127,127,127,255)"),(0,a.kt)("li",{parentName:"ul"},"diffuse light value: rgb(127,127,127,255)"),(0,a.kt)("li",{parentName:"ul"},"type of light: direction"),(0,a.kt)("li",{parentName:"ul"},"direction of the light: (0.5,0.5,-1);")),(0,a.kt)("p",null,"Here is an example of our GAML scene using the default light: "),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Scene with the default light.",src:i(7216).Z,width:"1369",height:"570"})),(0,a.kt)("h2",{id:"custom-lights"},"Custom lights"),(0,a.kt)("p",null,"In your OpenGL display, you can create several lights, giving them the properties you want."),(0,a.kt)("p",null,"In order to add lights, or modifying the existing lights, you have to use the statement ",(0,a.kt)("inlineCode",{parentName:"p"},"light")," inside your ",(0,a.kt)("inlineCode",{parentName:"p"},"display")," scope:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'experiment my_experiment type:gui {\n    output {\n    display "my_display" type:opengl {\n        light "my_light";\n    }\n    }\n}\n')),(0,a.kt)("p",null,"A name has to be declared for the light. Through this facet, you can specify which light you want.\nOnce you are manipulating a light through the ",(0,a.kt)("inlineCode",{parentName:"p"},"light")," statement, the light is turned on. To switch off the light, you have to add the facet ",(0,a.kt)("inlineCode",{parentName:"p"},"active"),", and turn it to ",(0,a.kt)("inlineCode",{parentName:"p"},"false"),".\nThe light you are declaring through the ",(0,a.kt)("inlineCode",{parentName:"p"},"light"),' statement is, in fact, a "diffuse" light. You can specify the color of the diffuse light through the facet ',(0,a.kt)("inlineCode",{parentName:"p"},"intensity")," (by default, the color will be turned to white).\nAnother very important facet is the ",(0,a.kt)("inlineCode",{parentName:"p"},"type")," facet. This facet accepts a value among ",(0,a.kt)("inlineCode",{parentName:"p"},"#direction"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"#point")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"#spot"),"."),(0,a.kt)("h3",{id:"ambient-light-1"},"Ambient light"),(0,a.kt)("p",null,"The ambient light can be set when declaring a light, using the #ambient constant, through the facet ",(0,a.kt)("inlineCode",{parentName:"p"},"intensity"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'experiment my_experiment type: gui {\n    output {\n    display "my_display" type: opengl  {\n        light #ambient intensity: 100;\n    }\n    }\n}\n')),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Note for developers"),": Note that this ambient light is set to the GL_LIGHT0. This GL_LIGHT0 only contains an ambient light, and no either diffuse nor specular light."),(0,a.kt)("h4",{id:"declaring-direction-light"},"Declaring direction light"),(0,a.kt)("p",null,"A direction light, as explained in the first part, is a light without any position. Instead of the facet ",(0,a.kt)("inlineCode",{parentName:"p"},"position"),", you will use the facet ",(0,a.kt)("inlineCode",{parentName:"p"},"direction"),", giving a 3D vector."),(0,a.kt)("p",null,"Example of implementation: "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'light "my_direction_light" type: #direction direction: {1,1,1} intensity: #red;\n')),(0,a.kt)("h4",{id:"declaring-point-light"},"Declaring point light"),(0,a.kt)("p",null,"A point light will need a facet ",(0,a.kt)("inlineCode",{parentName:"p"},"position"),", in order to give the position of the light source."),(0,a.kt)("p",null,"Example of implementation of a basic point light: "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'light "my_point_light" type: #point location: {10,20,10} intensity: #red;\n')),(0,a.kt)("p",null,"You can add, if you want, a custom attenuation of the light, through the facets ",(0,a.kt)("inlineCode",{parentName:"p"},"linear_attenuation")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"quadratic_attenuation"),"."),(0,a.kt)("p",null,"Example of implementation of a point light with attenuation : "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'light "my_point_light"  type: #point location: {10,20,10} intensity: #red linear_attenuation: 0.1;\n')),(0,a.kt)("h4",{id:"declaring-spot-light"},"Declaring spot light"),(0,a.kt)("p",null,"A spot light will need the facet ",(0,a.kt)("inlineCode",{parentName:"p"},"position")," (a spot light is a positional light) and the facet ",(0,a.kt)("inlineCode",{parentName:"p"},"direction"),". A spot light will also need a special facet ",(0,a.kt)("inlineCode",{parentName:"p"},"spot_angle")," to determine the angle of the spot (by default, this value is set to 45 degree)."),(0,a.kt)("p",null,"Example of implementation of a basic spot light: "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'light "my_spot_light" type: #spot location: {0,0,100}direction:{0.5,0.5,-1} intensity: #red angle: 20;\n')),(0,a.kt)("p",null,"Same as for point light, you can specify an attenuation for a spot light."),(0,a.kt)("p",null,"Example of implementation of a spot light with attenuation: "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'light "my_spot_light" type:#spot location:{0,0,100} direction:{0.5,0.5,-1} intensity:#red angle:30 linear_attenuation: 0.1;\n')),(0,a.kt)("p",null,"Note that when you are working with lights, you can display your lights through the facet ",(0,a.kt)("inlineCode",{parentName:"p"},"show")," (of ",(0,a.kt)("inlineCode",{parentName:"p"},"light"),") to help you to implement your model. The three types of lights are displayed differently:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The ",(0,a.kt)("strong",{parentName:"li"},"point")," light is represented by a sphere with the color of the diffuse light you specified, in the position of your light source."),(0,a.kt)("li",{parentName:"ul"},"The ",(0,a.kt)("strong",{parentName:"li"},"spot")," light is represented by a cone with the color of the diffuse light you specified, in the position of your light source, the orientation of your light source. The size of the base of the cone will depend on the angle you specified."),(0,a.kt)("li",{parentName:"ul"},"The ",(0,a.kt)("strong",{parentName:"li"},"direction")," light, as it has no real position, is represented with arrows a bit above the world, with the direction of your direction light, and the color of the diffuse light you specified.")),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Scene with direction, spot and point lights.",src:i(36432).Z,width:"788",height:"518"})),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Note for developers"),": Note that, since the GL_LIGHT0 is already reserved for the ambient light (only !), all the other lights (from 1 to 7) are the lights from GL_LIGHT1 to GL_LIGHT7."))}c.isMDXComponent=!0},41289:(e,t,i)=>{i.d(t,{Z:()=>n});const n=i.p+"assets/images/ambient_light-e699eb830f74fca3c6a8168cef99e269.png"},7216:(e,t,i)=>{i.d(t,{Z:()=>n});const n=i.p+"assets/images/default_light-3a8030fd9d50b28712dafd2c89df677a.png"},58023:(e,t,i)=>{i.d(t,{Z:()=>n});const n=i.p+"assets/images/direction_light-21c555b007a66d02ee2c0333f1c3f178.png"},36432:(e,t,i)=>{i.d(t,{Z:()=>n});const n=i.p+"assets/images/draw_light-02c5f699a0ff52aa17184efa3b1a0a28.png"},45812:(e,t,i)=>{i.d(t,{Z:()=>n});const n=i.p+"assets/images/point_light-52e7b31f4441f781ce33b67c8e02ac4f.png"},65792:(e,t,i)=>{i.d(t,{Z:()=>n});const n=i.p+"assets/images/point_light_with_attenuation-158544c67432d71171155c9363cc1338.png"},31552:(e,t,i)=>{i.d(t,{Z:()=>n});const n=i.p+"assets/images/spot_light-7015c6fe25adf4de5358dc707205f78a.png"}}]);