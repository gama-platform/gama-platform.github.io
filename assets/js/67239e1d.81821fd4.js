"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[90647],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>c});var n=a(67294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function r(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=n.createContext({}),d=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=d(e.components);return n.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,l=e.originalType,s=e.parentName,p=r(e,["components","mdxType","originalType","parentName"]),u=d(a),c=i,h=u["".concat(s,".").concat(c)]||u[c]||m[c]||l;return a?n.createElement(h,o(o({ref:t},p),{},{components:a})):n.createElement(h,o({ref:t},p))}));function c(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=a.length,o=new Array(l);o[0]=u;var r={};for(var s in t)hasOwnProperty.call(t,s)&&(r[s]=t[s]);r.originalType=e,r.mdxType="string"==typeof e?e:i,o[1]=r;for(var d=2;d<l;d++)o[d]=a[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},26493:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>c,frontMatter:()=>r,metadata:()=>d,toc:()=>m});var n=a(87462),i=a(63366),l=(a(67294),a(3905)),o=["components"],r={title:"Changes from 1.6.1 to 1.8"},s=void 0,d={unversionedId:"New-Version-Changes",id:"version-1.8.1/New-Version-Changes",title:"Changes from 1.6.1 to 1.8",description:"Java version",source:"@site/versioned_docs/version-1.8.1/New-Version-Changes.md",sourceDirName:".",slug:"/New-Version-Changes",permalink:"/wiki/1.8.1/New-Version-Changes",draft:!1,editUrl:"https://github.com/gama-platform/gama/wiki/New-Version-Changes/_edit",tags:[],version:"1.8.1",frontMatter:{title:"Changes from 1.6.1 to 1.8"},sidebar:"side",previous:{title:"Introduction",permalink:"/wiki/1.8.1/Overview"},next:{title:"Next-Version-Goals",permalink:"/wiki/1.8.1/Next-Version-Goals"}},p={},m=[{value:"Java version",id:"java-version",level:2},{value:"Changes between 1.6.1 and 1.7/1.8 that can influence the dynamics of models",id:"changes-between-161-and-1718-that-can-influence-the-dynamics-of-models",level:2},{value:"Simulations",id:"simulations",level:2},{value:"Language",id:"language",level:2},{value:"Data import",id:"data-import",level:2},{value:"Navigator",id:"navigator",level:2},{value:"Editor",id:"editor",level:2},{value:"Headless",id:"headless",level:2},{value:"Models library",id:"models-library",level:2},{value:"Preferences",id:"preferences",level:2},{value:"Simulation displays",id:"simulation-displays",level:2},{value:"Error view",id:"error-view",level:2},{value:"Validation",id:"validation",level:2},{value:"Console",id:"console",level:2},{value:"Monitor view",id:"monitor-view",level:2},{value:"GAMA-wide online help on the language",id:"gama-wide-online-help-on-the-language",level:2},{value:"Serialization",id:"serialization",level:2},{value:"Allow TCP, UDP and MQTT communications between agents in different simulations",id:"allow-tcp-udp-and-mqtt-communications-between-agents-in-different-simulations",level:2}],u={toc:m};function c(e){var t=e.components,a=(0,i.Z)(e,o);return(0,l.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"java-version"},"Java version"),(0,l.kt)("p",null,"Due to changes in the libraries used by GAMA 1.7 and 1.8, this version now ",(0,l.kt)("strong",{parentName:"p"},"requires JDK/JVM 1.8")," to run. Please note that GAMA ",(0,l.kt)("strong",{parentName:"p"},"has not been tested with JDK 1.9 and 1.10"),"."),(0,l.kt)("h2",{id:"changes-between-161-and-1718-that-can-influence-the-dynamics-of-models"},"Changes between 1.6.1 and 1.7/1.8 that can influence the dynamics of models"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Initialization order between the initialization of variables and the execution of the ",(0,l.kt)("inlineCode",{parentName:"li"},"init")," block in grids\ninit -> vars in 1.6.1 / vars -> init in 1.7"),(0,l.kt)("li",{parentName:"ul"},"Initialization order of agents -> now, the init block of the agents are not executed at the end of the global init, but during it.\nput a sample model to explain the order of creation and its differences"),(0,l.kt)("li",{parentName:"ul"},"Initialization of vars to their default value\nmap ? list ? "),(0,l.kt)("li",{parentName:"ul"},"Systematic casting and verification of types\ngive examples"),(0,l.kt)("li",{parentName:"ul"},"header of CSV files: be careful, in GAMA 1.7, if the first line is detected as a header, it is not read when the file is casted as a matrix (so the first row of the matrix is not the header, but the first line of data)\ngives examples"),(0,l.kt)("li",{parentName:"ul"},"the step of batch experiments is now executed after all repetitions of simulations are done (not after each one). They can however be still accessed using the attributes ",(0,l.kt)("inlineCode",{parentName:"li"},"simulations")," (see Batch.gaml in Models Library)"),(0,l.kt)("li",{parentName:"ul"},"signal and diffuse have been merged into a single statement"),(0,l.kt)("li",{parentName:"ul"},"facets do not accept a space between their identifier and the ",(0,l.kt)("inlineCode",{parentName:"li"},":")," anymore."),(0,l.kt)("li",{parentName:"ul"},"simplification of equation/solve statements and deprecation of old facets"),(0,l.kt)("li",{parentName:"ul"},"in FIPA skill, ",(0,l.kt)("inlineCode",{parentName:"li"},"content")," is replaced everywhere with ",(0,l.kt)("inlineCode",{parentName:"li"},"contents")),(0,l.kt)("li",{parentName:"ul"},"in FIPA skill, ",(0,l.kt)("inlineCode",{parentName:"li"},"receivers")," is replaced everywhere with ",(0,l.kt)("inlineCode",{parentName:"li"},"to")),(0,l.kt)("li",{parentName:"ul"},"in FIPA skill, ",(0,l.kt)("inlineCode",{parentName:"li"},"messages")," is replaced by ",(0,l.kt)("inlineCode",{parentName:"li"},"mailbox")),(0,l.kt)("li",{parentName:"ul"},"The pseudo-attribute ",(0,l.kt)("inlineCode",{parentName:"li"},"user_location"),' has been removed (not deprecated, unfortunately) and replaced by the "unit" ',(0,l.kt)("inlineCode",{parentName:"li"},"#user_location"),"."),(0,l.kt)("li",{parentName:"ul"},"The actions called by an ",(0,l.kt)("inlineCode",{parentName:"li"},"event")," layer do not need anymore to define ",(0,l.kt)("inlineCode",{parentName:"li"},"point")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"list<agent>")," arguments to receive the mouse location and the list of agents selected. Instead, they can now use ",(0,l.kt)("inlineCode",{parentName:"li"},"#user_location")," and they have to compute the selected agents by themselves (using an arbitrary function)."),(0,l.kt)("li",{parentName:"ul"},"The random number generators now better handle seeding (larger range), but it can change the series of values previously obtained from a given seed in 1.6.1"),(0,l.kt)("li",{parentName:"ul"},"all models now have a starting_date and a current_date. They then don't begin at a hypothetical \"zero\" date, but at the epoch date defined by ISO 8601 (1970/1/1). It should not change models that don't rely on dates, except that:"),(0,l.kt)("li",{parentName:"ul"},"the ",(0,l.kt)("inlineCode",{parentName:"li"},"#year")," (and its nicknames ",(0,l.kt)("inlineCode",{parentName:"li"},"#y"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"#years"),") and ",(0,l.kt)("inlineCode",{parentName:"li"},"#month")," (and its nickname ",(0,l.kt)("inlineCode",{parentName:"li"},"#month"),") do not longer have a default value (of resp. 30 days and 360 days). Instead, they are always evaluated against the current_date of the model. If no starting_date is defined, the values of ",(0,l.kt)("inlineCode",{parentName:"li"},"#month")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"#year")," will then depend on the sequence of months and year since epoch day."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"as_time"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"as_system_time"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"as_date")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"as_system_date")," have been removed")),(0,l.kt)("h2",{id:"simulations"},"Simulations"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"simulations can now be run in parallel withing an experiment (with their outputs, displays, etc.)"),(0,l.kt)("li",{parentName:"ul"},"batch experiments inherit from this possibility and can now run their repetitions in parallel too."),(0,l.kt)("li",{parentName:"ul"},"concurrency between agents is now possible and can be controlled on a species/grid/ask basis (from multi-threaded concurrency to complete parallelism within a species/grid or between the targets of an ",(0,l.kt)("inlineCode",{parentName:"li"},"ask")," statement)")),(0,l.kt)("h2",{id:"language"},"Language"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"gama")," : a new immutable agent that can be invoked to change preferences or access to platform-only properties (like ",(0,l.kt)("inlineCode",{parentName:"li"},"machine-time"),")"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"abort"),": a new behavior (like ",(0,l.kt)("inlineCode",{parentName:"li"},"reflex")," or ",(0,l.kt)("inlineCode",{parentName:"li"},"init"),") that is executed once when the agent is about to die"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"try")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"catch")," statements now provide a robust way to catch errors happening in the simulations. "),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"super")," (instead of ",(0,l.kt)("inlineCode",{parentName:"li"},"self"),") and ",(0,l.kt)("inlineCode",{parentName:"li"},"invoke")," (instead of ",(0,l.kt)("inlineCode",{parentName:"li"},"do"),") can now be used to call an action defined in a parent species. "),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"date")," : new data type that offers the possibility to use a real calendar, to define a ",(0,l.kt)("inlineCode",{parentName:"li"},"starting_date")," and to query a ",(0,l.kt)("inlineCode",{parentName:"li"},"current_date")," from a simulation, to parse dates from date files or to output them in custom formats. Dates can be added, subtracted, compared. Various new operators (",(0,l.kt)("inlineCode",{parentName:"li"},"minus_months"),", etc.) allow for a fine manipulation of their data. Time units (",(0,l.kt)("inlineCode",{parentName:"li"},"#sec"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"#s"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"#mn"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"#minute"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"#h"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"#hour"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"#day"),", etc.) can be used in conjunction with them. Interval of dates (date1 to date2) can be created and used as a basis for loops, etc. Various simple operators allow for defining conditions based on the current_date (after(date1), before(date2), since(date1), etc.)."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"font")," type allows to define fonts more precisely in ",(0,l.kt)("inlineCode",{parentName:"li"},"draw")," statements"),(0,l.kt)("li",{parentName:"ul"},"BDI control architecture for agents"),(0,l.kt)("li",{parentName:"ul"},"file management, new operators, new statements, new skills(?), new built-in variables, files can now download their contents from the web by using standard http: https: addresses instead of file paths."),(0,l.kt)("li",{parentName:"ul"},"The ",(0,l.kt)("inlineCode",{parentName:"li"},"save")," can now directly manipulate files and ... save them. So something like ",(0,l.kt)("inlineCode",{parentName:"li"},'save shape_file("bb.shp", my_agents collect each.shape);')," is possible. In addition, a new facet ",(0,l.kt)("inlineCode",{parentName:"li"},"attributes")," allows to define complex attributes to be saved. "),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"assert")," has a simpler syntax and can be used in any behaviour to raise an error if a condition is not met. "),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test")," is a new type of experiments (",(0,l.kt)("inlineCode",{parentName:"li"},"experiment aaa type: test ... "),"), equivalent to a ",(0,l.kt)("inlineCode",{parentName:"li"},"batch")," with an exhaustive search method, which automatically displays the status of tests found in the model. "),(0,l.kt)("li",{parentName:"ul"},"new operators (",(0,l.kt)("inlineCode",{parentName:"li"},"sum_of"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"product_of"),", etc.)"),(0,l.kt)("li",{parentName:"ul"},"casting of files works"),(0,l.kt)("li",{parentName:"ul"},"co-modeling (importation of micro-models that can be managed within a macro-model)"),(0,l.kt)("li",{parentName:"ul"},"populations of agents can now be easily exported to CSV files using the ",(0,l.kt)("inlineCode",{parentName:"li"},"save")," statement "),(0,l.kt)("li",{parentName:"ul"},"Simple ",(0,l.kt)("inlineCode",{parentName:"li"},"messaging")," skill between agents  "),(0,l.kt)("li",{parentName:"ul"},"Terminal commands can now be issued from within GAMA using the ",(0,l.kt)("inlineCode",{parentName:"li"},"console")," operator"),(0,l.kt)("li",{parentName:"ul"},"New ",(0,l.kt)("inlineCode",{parentName:"li"},"status")," statement allows to change the text of the status."),(0,l.kt)("li",{parentName:"ul"},"light statement in 3D display provides the possibility to custom your lights (point lights, direction lights, spot lights)"),(0,l.kt)("li",{parentName:"ul"},"Displays can now inherit from other displays (facets ",(0,l.kt)("inlineCode",{parentName:"li"},"parent")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"virtual")," to describe abstract displays)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"on_change:")," facet for attributes/parameters allows to define a sequence of statements to run whenever the value changes. "),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"species")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"experiment")," now support the ",(0,l.kt)("inlineCode",{parentName:"li"},"virtual")," boolean facet (virtual species can not be instantiated, and virtual experiments do not show up)."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"experiment")," now supports the ",(0,l.kt)("inlineCode",{parentName:"li"},"auto_run")," boolean facet (to run automatically when launched)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"experiment")," now supports the ",(0,l.kt)("inlineCode",{parentName:"li"},"benchmark")," boolean facet (to produce a CSV summary of the time spent in the different statements / operators of GAMA)"),(0,l.kt)("li",{parentName:"ul"},"experiments can now have their own file (",(0,l.kt)("inlineCode",{parentName:"li"},"xxx.experiment"),") and specify the model they are targeting by providing the path to the model in the new ",(0,l.kt)("inlineCode",{parentName:"li"},"model:")," facet (similar to ",(0,l.kt)("inlineCode",{parentName:"li"},"import"),"). "),(0,l.kt)("li",{parentName:"ul"},"experiments can sport a new type: ",(0,l.kt)("inlineCode",{parentName:"li"},"test"),", a specialised type of batch experiment that can be run automatically from the GUI or in headless and reports back the result of the tests found in its model")),(0,l.kt)("h2",{id:"data-import"},"Data import"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"draw of complex shapes through obj file"),(0,l.kt)("li",{parentName:"ul"},"new types fo files are taken into account: geotiff and dxf"),(0,l.kt)("li",{parentName:"ul"},"viewers for common files"),(0,l.kt)("li",{parentName:"ul"},"addition of plugin and test models ")),(0,l.kt)("h2",{id:"navigator"},"Navigator"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Shapefiles are now copied, pasted and deleted together with their support files"),(0,l.kt)("li",{parentName:"ul"},"External files are automatically linked from the workspace and the links are filed under an automatically created ",(0,l.kt)("inlineCode",{parentName:"li"},"external")," folder in the project"),(0,l.kt)("li",{parentName:"ul"},'The "Refresh" command in the navigator pop-up refreshes the files, cleans the metadata and recompiles the models in order to obtain a "fresh" workspace again'),(0,l.kt)("li",{parentName:"ul"},"A search control allows to instantaneously find models based on their names (not contents)"),(0,l.kt)("li",{parentName:"ul"},"Wizards for creating ",(0,l.kt)("inlineCode",{parentName:"li"},".experiment")," file and test experiments "),(0,l.kt)("li",{parentName:"ul"},"The new project Wizard now leads by default to the new file wizard")),(0,l.kt)("h2",{id:"editor"},"Editor"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"doc on built-in elements, templates, shortcuts to common tasks, hyperlinks to files used"),(0,l.kt)("li",{parentName:"ul"},"improvement in time, gathering of infos/todos"),(0,l.kt)("li",{parentName:"ul"},"warnings can be removed from model files"),(0,l.kt)("li",{parentName:"ul"},"resources / files can be dropped into editors to obtain declaration/import of the corresponding files")),(0,l.kt)("h2",{id:"headless"},"Headless"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"A new option ",(0,l.kt)("inlineCode",{parentName:"li"},"-validate path/to/dir")," allows to run a complete validation of all the models in the directory"),(0,l.kt)("li",{parentName:"ul"},"A new option ",(0,l.kt)("inlineCode",{parentName:"li"},"-test path/to/dir")," allows to run all the tests defined in a directory")),(0,l.kt)("h2",{id:"models-library"},"Models library"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"New models (make a list)")),(0,l.kt)("h2",{id:"preferences"},"Preferences"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"For performances and bug fixes in displays"),(0,l.kt)("li",{parentName:"ul"},"For charts defaults")),(0,l.kt)("h2",{id:"simulation-displays"},"Simulation displays"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"OpenGL displays should be up to 3 times faster in rendering"),(0,l.kt)("li",{parentName:"ul"},"fullscreen mode for displays (ESC key)"),(0,l.kt)("li",{parentName:"ul"},"CTRL+O for overlay and CTRL+L for layers side controls"),(0,l.kt)("li",{parentName:"ul"},"cleaner OpenGL displays (less garbage, better drawing of lines, rotation helper, sticky ROI, etc.)"),(0,l.kt)("li",{parentName:"ul"},"possibility to use a new OpenGl pipeline and to define keystoning parameters (for projections)"),(0,l.kt)("li",{parentName:"ul"},"faster java2D displays (esp. on zoom)"),(0,l.kt)("li",{parentName:"ul"},"better user interaction (mouse move, hover, key listener)"),(0,l.kt)("li",{parentName:"ul"},"a whole new set of charts"),(0,l.kt)("li",{parentName:"ul"},"getting values when moving the mouse on charts"),(0,l.kt)("li",{parentName:"ul"},"possibility to declare ",(0,l.kt)("inlineCode",{parentName:"li"},"permanent layout: ")," + ",(0,l.kt)("inlineCode",{parentName:"li"},"#splitted"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"#horizontal"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"#vertical"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"#stacked")," in the ",(0,l.kt)("inlineCode",{parentName:"li"},"output")," section to automatically layout the display view."),(0,l.kt)("li",{parentName:"ul"},'Outputs can now be managed from the "Views" menu. Closed outputs can be reopened. '),(0,l.kt)("li",{parentName:"ul"},"Changing simulation names is reflected in their display titles (and it can be dynamic)"),(0,l.kt)("li",{parentName:"ul"},"OpenGL displays now handle rotations of 2D and 3D shapes, combinations of textures and colours, and keystoning")),(0,l.kt)("h2",{id:"error-view"},"Error view"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Much faster (up to 100x !) display of errors"),(0,l.kt)("li",{parentName:"ul"},"Contextual menu to copy the text of errors to clipboard or open the editor on it")),(0,l.kt)("h2",{id:"validation"},"Validation"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Faster validation of multi-file models (x2 approx.)"),(0,l.kt)("li",{parentName:"ul"},"Much less memory used compared to 1.6.1 (/10 approx.)"),(0,l.kt)("li",{parentName:"ul"},'No more "false positive" errors')),(0,l.kt)("h2",{id:"console"},"Console"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Interactive console allows to directly interact with agents (experiments, simulations and any agent) and get a direct feedback on the impact of code execution using a new interpreter integrated with the console. Available in the modeling perspective (to interact with the new ",(0,l.kt)("inlineCode",{parentName:"li"},"gama")," agent) as well as the simulation perspective (to interact with the current ",(0,l.kt)("inlineCode",{parentName:"li"},"experiment")," agent)."),(0,l.kt)("li",{parentName:"ul"},"Console now accepts colored text output ")),(0,l.kt)("h2",{id:"monitor-view"},"Monitor view"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"monitors can have colors"),(0,l.kt)("li",{parentName:"ul"},"monitors now have contextual menus depending on the value displayed (save as CSV, inspect, browse...)")),(0,l.kt)("h2",{id:"gama-wide-online-help-on-the-language"},"GAMA-wide online help on the language"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"A global search engine is now available in the top-right corner of the GAMA window to look for GAML idioms")),(0,l.kt)("h2",{id:"serialization"},"Serialization"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Serialize simulations and replay them"),(0,l.kt)("li",{parentName:"ul"},"Serialization and deserialization of agents between simulations")),(0,l.kt)("h2",{id:"allow-tcp-udp-and-mqtt-communications-between-agents-in-different-simulations"},"Allow TCP, UDP and MQTT communications between agents in different simulations"))}c.isMDXComponent=!0}}]);