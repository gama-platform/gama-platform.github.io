"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[75817],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>c});var i=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=i.createContext({}),d=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=d(e.components);return i.createElement(s.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},f=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=d(n),f=a,c=m["".concat(s,".").concat(f)]||m[f]||u[f]||r;return n?i.createElement(c,l(l({ref:t},p),{},{components:n})):i.createElement(c,l({ref:t},p))}));function c(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,l=new Array(r);l[0]=f;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[m]="string"==typeof e?e:a,l[1]=o;for(var d=2;d<r;d++)l[d]=n[d];return i.createElement.apply(null,l)}return i.createElement.apply(null,n)}f.displayName="MDXCreateElement"},15953:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>f,frontMatter:()=>o,metadata:()=>d,toc:()=>m});var i=n(87462),a=n(63366),r=(n(67294),n(3905)),l=["components"],o={title:"7. Differential Equations"},s=void 0,d={unversionedId:"IncrementalModel_step7",id:"IncrementalModel_step7",title:"7. Differential Equations",description:"This step illustrates how to use differential equations.",source:"@site/../docs/IncrementalModel_step7.md",sourceDirName:".",slug:"/IncrementalModel_step7",permalink:"/wiki/next/IncrementalModel_step7",draft:!1,editUrl:"https://github.com/gama-platform/gama/wiki/IncrementalModel_step7/_edit",tags:[],version:"current",frontMatter:{title:"7. Differential Equations"},sidebar:"tuto",previous:{title:"6. Multi-Level",permalink:"/wiki/next/IncrementalModel_step6"},next:{title:"Luneray's flu",permalink:"/wiki/next/LuneraysFlu"}},p={},m=[{value:"Formulation",id:"formulation",level:2},{value:"Model Definition",id:"model-definition",level:2},{value:"global variables",id:"global-variables",level:3},{value:"building",id:"building",level:3},{value:"Complete Model",id:"complete-model",level:2}],u={toc:m};function f(e){var t=e.components,o=(0,a.Z)(e,l);return(0,r.kt)("wrapper",(0,i.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This step illustrates how to use differential equations."),(0,r.kt)("h2",{id:"formulation"},"Formulation"),(0,r.kt)("p",null,"We are interested in the spreading of the disease inside the buildings. In order to model it, we will use ",(0,r.kt)("a",{parentName:"p",href:"Equations"},"differential equations"),". So, we will need to:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Add two global variables to define the building epidemic properties (",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"beta")),") and numerical integration parameter (",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"h")),")."),(0,r.kt)("li",{parentName:"ul"},"Add new variables for the buildings (",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"I")),", ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"S")),", ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"T")),", ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"t")),", ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"I_to1")),") to manage epidemic;"),(0,r.kt)("li",{parentName:"ul"},"Define differential equations for disease spreading inside buildings."),(0,r.kt)("li",{parentName:"ul"},"Add one behavior for buildings for the spreading of the disease.")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Incremental model 7: final step introducing a mathematical model for disease spread in buildings.",src:n(52562).Z,width:"1612",height:"831"})),(0,r.kt)("h2",{id:"model-definition"},"Model Definition"),(0,r.kt)("h3",{id:"global-variables"},"global variables"),(0,r.kt)("p",null,"We define two new global variables used in the disease spreading dynamic inside the buildings: (i) ",(0,r.kt)("inlineCode",{parentName:"p"},"beta")," is the contamination rate,  and ",(0,r.kt)("inlineCode",{parentName:"p"},"h")," is the integration step (used in the ",(0,r.kt)("inlineCode",{parentName:"p"},"solve")," statement)."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"global  {\n    ...\n    float beta <- 0.01;\n    float h <- 0.1;\n    ...\n}\n")),(0,r.kt)("h3",{id:"building"},"building"),(0,r.kt)("p",null,"In order to define the disease spread dynamics, we define several variables that will be used by the differential equations:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"I")),": float, number of people infected in the building."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"S")),": float, number of people not infected in the building."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"T")),": float, the total number of people in the building."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"t")),": float, the current time of the equation system integration."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"I_to1")),": float, the remaining number of people infected (float number lower between 0 and 1 according to the differential equations).")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"species building {\n    ...\n    float I;\n    float S;\n    float T;\n    float t;   \n    float I_to1; \n    ...\n}\n")),(0,r.kt)("p",null,"Then, we define the differential equations system that will be used for the disease spreading dynamic. Note that to define a differential equation system we use the block ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"equation"))," + name. These equations are the classic ones used by SI mathematical models."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"species building {\n    ....\n    equation SI{ \n    diff(S,t) = (- beta * S * I / T) ;\n    diff(I,t) = (  beta * S * I / T) ;\n    }\n    ...\n}\n")),(0,r.kt)("p",null,"At last, we define a new reflex for the building called ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"epidemic"))," that will be activated only when there is someone inside the building. This reflex first computes the number of people inside the building (",(0,r.kt)("inlineCode",{parentName:"p"},"T"),"), then the number of not infected people (",(0,r.kt)("inlineCode",{parentName:"p"},"S"),") and finally the number of infected ones (",(0,r.kt)("inlineCode",{parentName:"p"},"I"),")."),(0,r.kt)("p",null,"If there is at least one people infected and one people not infected, the differential equations is integrated (according to the integration step value ",(0,r.kt)("inlineCode",{parentName:"p"},"h"),") with the method Runge-Kutta 4 to compute the new value of infected people. We then sum the old value of ",(0,r.kt)("inlineCode",{parentName:"p"},"I_to1")," with the number of people newly infected (this value is a float and not an integer). Finally, we cast this value as an integer, ask the corresponding number of not infected people to become infected, and decrement this integer value to ",(0,r.kt)("inlineCode",{parentName:"p"},"I\\_to1"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"species building {\n    ...\n    reflex epidemic when: nb_total > 0 {\n    T <- float(nb_total);\n    S <- float(nb_total - nb_infected);\n    I <- T - S;\n    float I0 <- I;\n    if (I > 0 and S > 0) {\n        solve SI method: #rk4 step_size: h;\n        I_to1 <- I_to1 + (I - I0);\n        int I_int <- min([int(S), int(I_to1)]);\n        I_to1 <- I_to1 - I_int;\n        ask (I_int among (people_in_building where (!each.is_infected))) {\n        is_infected <- true;\n        }\n    }\n    }\n    ...\n}\n")),(0,r.kt)("h2",{id:"complete-model"},"Complete Model"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-gaml",metastring:"reference",reference:!0},"https://github.com/gama-platform/gama/blob/GAMA_1.8.2/msi.gama.models/models/Tutorials/Incremental%20Model/models/Incremental%20Model%207.gaml\n")))}f.isMDXComponent=!0},52562:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/incremental_model-81a4bac86041bbb55c67c907acae6bc7.jpg"}}]);