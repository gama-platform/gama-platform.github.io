"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[10983],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>g});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),d=p(n),c=i,g=d["".concat(s,".").concat(c)]||d[c]||u[c]||r;return n?a.createElement(g,l(l({ref:t},m),{},{components:n})):a.createElement(g,l({ref:t},m))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[d]="string"==typeof e?e:i,l[1]=o;for(var p=2;p<r;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},49794:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>s,default:()=>g,frontMatter:()=>o,metadata:()=>p,toc:()=>d});var a=n(87462),i=n(63366),r=(n(67294),n(3905)),l=["components"],o={title:"1. Skeleton model"},s=void 0,p={unversionedId:"BDIAgents_step1",id:"version-1.9.0/BDIAgents_step1",title:"1. Skeleton model",description:"This first step consists in defining the skeleton model with the gold mines and the gold market.",source:"@site/versioned_docs/version-1.9.0/BDIAgents_step1.md",sourceDirName:".",slug:"/BDIAgents_step1",permalink:"/wiki/BDIAgents_step1",draft:!1,editUrl:"https://github.com/gama-platform/gama/wiki/BDIAgents_step1/_edit",tags:[],version:"1.9.0",frontMatter:{title:"1. Skeleton model"},sidebar:"tuto",previous:{title:"BDI Agents",permalink:"/wiki/BDIAgents"},next:{title:"2. BDI Agents",permalink:"/wiki/BDIAgents_step2"}},m={},d=[{value:"Formulation",id:"formulation",level:2},{value:"Model Definition",id:"model-definition",level:2},{value:"species",id:"species",level:3},{value:"global variables",id:"global-variables",level:3},{value:"global init",id:"global-init",level:3},{value:"display",id:"display",level:3},{value:"Complete Model",id:"complete-model",level:2}],u={toc:d},c="wrapper";function g(e){var t=e.components,n=(0,i.Z)(e,l);return(0,r.kt)(c,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This first step consists in defining the skeleton model with the gold mines and the gold market."),(0,r.kt)("h2",{id:"formulation"},"Formulation"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Definition of the gold mine species"),(0,r.kt)("li",{parentName:"ul"},"Definition of the market species"),(0,r.kt)("li",{parentName:"ul"},"Creation of the gold mine and market agents"),(0,r.kt)("li",{parentName:"ul"},"Definition of a display with the gold mines and the market")),(0,r.kt)("h2",{id:"model-definition"},"Model Definition"),(0,r.kt)("h3",{id:"species"},"species"),(0,r.kt)("p",null,"In this first model, we have to define two species of agents: the ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"gold_mine"))," agents and the ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"market"))," ones. These agents will not have a particular behavior, they will just be displayed.\nFor the gold mine species, we define a new attribute: ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"quantity"))," of type ",(0,r.kt)("inlineCode",{parentName:"p"},"int"),", with for initial value a random integer between 1 and 20. We also define an ",(0,r.kt)("inlineCode",{parentName:"p"},"aspect")," named ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"default"))," that displays the gold mine as a triangle with a gray color if the gold mine is empty, yellow otherwise. The size of the triangle depends on the quantity of gold nuggets in the mine.\nConcerning the market species, we define a new attribute: ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"golds"))," of type ",(0,r.kt)("inlineCode",{parentName:"p"},"int"),". We define as well an aspect named ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"default"))," that displays the market as a blue square."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"species gold_mine {\n    int quantity <- rnd(1,20);\n    aspect default {\n    draw triangle(200 + quantity * 50) color: (quantity > 0) ? #yellow : #gray border: #black;  \n    }\n}\n\nspecies market {\n    int golds;\n    aspect default {\n        draw square(1000) color: #black ;\n    }\n}\n")),(0,r.kt)("h3",{id:"global-variables"},"global variables"),(0,r.kt)("p",null,"We define two global variables for the model: one called ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"nb_mines"))," that will be used to define the number of mines and that will be set to 10. One call ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"the_market"))," that will represent the market agent (that will be unique). "),(0,r.kt)("p",null,"In addition, we define the duration of a simulation step to 10 minutes, and we define the shape of the environment by a square with a side size of 20 kilometers."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"global {\n    int nb_mines <- 10; \n    market the_market;\n    float step <- 10#mn;\n    geometry shape <- square(20 #km);\n}\n")),(0,r.kt)("h3",{id:"global-init"},"global init"),(0,r.kt)("p",null,"At the initialization of the model, we create a market agent and ",(0,r.kt)("inlineCode",{parentName:"p"},"nb_mines")," gold mine agents. For the market agent, we set the value of the ",(0,r.kt)("inlineCode",{parentName:"p"},"the_market")," agent with the created agent. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"global {\n    ...\n    init {\n        create market {\n        the_market <- self;\n    }\n    create gold_mine number: nb_mines;\n    }\n}\n")),(0,r.kt)("h3",{id:"display"},"display"),(0,r.kt)("p",null,"We define a display to visualize the market and gold mine agents. We use for that the classic ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"species"))," keyword. In order to optimize the display, we use an OpenGL display (facet ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"type: opengl")),")."),(0,r.kt)("p",null,"In the ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"experiment"))," block:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"output {\n    display map type: opengl {\n    species market ;\n    species gold_mine ;\n   }\n}\n")),(0,r.kt)("h2",{id:"complete-model"},"Complete Model"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-gaml",metastring:"reference",reference:!0},"https://github.com/gama-platform/gama/blob/GAMA_1.9.0/msi.gaml.architecture.simplebdi/models/BDI%20Architecture/models/Tutorial/BDI%20tutorial%201.gaml\n")))}g.isMDXComponent=!0}}]);